{"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js","turbopack:///[project]/node_modules/tslib/tslib.es6.mjs","turbopack:///[project]/node_modules/@smithy/util-hex-encoding/dist-es/index.js","turbopack:///[project]/node_modules/js-cookie/dist/js.cookie.mjs","turbopack:///[project]/node_modules/uuid/dist/esm/native.js","turbopack:///[next]/internal/font/google/geist_a71539c9.js","turbopack:///[project]/node_modules/@aws-amplify/core/src/types/errors.ts","turbopack:///[project]/node_modules/@smithy/util-utf8/node_modules/@smithy/is-array-buffer/dist-es/index.js","turbopack:///[project]/node_modules/uuid/dist/esm/regex.js","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/types.ts","turbopack:///[project]/node_modules/uuid/dist/esm/stringify.js","turbopack:///[project]/src/app/amplify-config.ts","turbopack:///[project]/node_modules/uuid/dist/esm/rng.js","turbopack:///[project]/node_modules/uuid/dist/esm/validate.js","turbopack:///[project]/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/dist-es/index.js","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/version.ts","turbopack:///[project]/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","turbopack:///[project]/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","turbopack:///[project]/node_modules/@smithy/util-utf8/dist-es/toUtf8.js","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/inflightPromise.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/isTokenExpired.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/serde/responseInfo.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/constants.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.ts","../../src/convertToBuffer.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/isBrowser.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/serde/createClientSerializer.ts","../../src/uint32ArrayFrom.ts","turbopack:///[project]/node_modules/uuid/dist/esm/v4.js","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/types.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/deepFreeze.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/factories/createCognitoUserPoolEndpointResolver.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Logger/types.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/parseAmplifyOutputs.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/errors/createAssertionFunction.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/errors/constants.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/singleton/Auth/index.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/errorHelpers.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/parsers/regionParsers.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/convert/base64/base64Decoder.ts","../../src/numToUint8.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/retryMiddleware.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/middleware/createDisableCacheMiddleware.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/factories/createCognitoIdentityPoolEndpointResolver.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/helpers.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/CookieStorage.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/cognitoUserPoolEndpointResolver.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/Angular.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/React.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/singleton/Auth/utils/index.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/parseAWSExports.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/handlers/fetch.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/Next.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/utils.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/SyncSessionStorage.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/retry/jitteredBackoff.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/userAgent/middleware.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/errors/PlatformNotSupportedError.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/singleton/Auth/utils/errorHelpers.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/errors/AmplifyError.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/tokenProvider.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/defaultRetryDecider.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/index.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/errors/AuthError.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/SyncKeyValueStorage.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/utils.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdStore.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/internal/composeTransferHandler.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createGetTokensFromRefreshTokenClient.ts","../../src/constants.ts","../../src/jsSha256.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/parseAmplifyConfig.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/Nuxt.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/serde/json.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/Svelte.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/endpoints/partitions.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detectFramework.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenOrchestrator.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/InMemoryStorage.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInWithRedirectStore.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/handlers/aws/unauthenticated.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/credentialsProvider.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/amzSdkRequestHeaderMiddleware.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/index.ts","turbopack:///[project]/src/app/layout.tsx","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/endpoints/getDnsSuffix.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/detection/index.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/utils/types.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/utils/refreshAuthTokens.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/storage/KeyValueStorage.ts","turbopack:///[project]/node_modules/aws-amplify/src/initSingleton.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/isClockSkewError.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdProvider.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Platform/customUserAgent.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/deDupeAsyncFunction.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/cognitoIdentityPoolEndpointResolver.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/utils/globalHelpers/index.ts","../../src/RawSha256.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/createGetIdClient.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/constants.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/createGetCredentialsForIdentityClient.ts","turbopack:///[project]/node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenStore.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/foundation/factories/serviceClients/cognitoIdentity/handler/cognitoIdentityTransferHandler.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/middleware/retry/amzSdkInvocationIdHeaderMiddleware.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/Hub/index.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/clients/internal/composeServiceApi.ts","turbopack:///[project]/node_modules/@aws-amplify/core/src/singleton/Amplify.ts"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import { randomUUID } from 'crypto';\nexport default { randomUUID };\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","export var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","export const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import { Amplify } from 'aws-amplify';\nimport outputs from '../../amplify_outputs.json';\n\nAmplify.configure(outputs);","import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","// generated by genversion\nexport const version = '6.15.5';\n","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nexport const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nexport const addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nexport const resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isTokenExpired({ expiresAt, clockDrift, tolerance = 5000, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift + tolerance > expiresAt;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const DEFAULT_RETRY_ATTEMPTS = 3;\nexport const AMZ_SDK_INVOCATION_ID_HEADER = 'amz-sdk-invocation-id';\nexport const AMZ_SDK_REQUEST_HEADER = 'amz-sdk-request';\nexport const DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const createUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n",null,"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const createClientSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n",null,"import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nexport var Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nexport var AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nexport var AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nexport var ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nexport var AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n    AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n    AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n    AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n    AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nexport var DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nexport var GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nexport var InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nexport var InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nexport var PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nexport var PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nexport var PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nexport var StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n    StorageAction[\"GetDataAccess\"] = \"8\";\n    StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n","import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver';\nexport const createCognitoUserPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoUserPoolEndpointResolver(input);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isAmplifyOutputs(config) {\n    // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n    const { version } = config;\n    if (!version) {\n        return false;\n    }\n    return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n    if (!amplifyOutputsStorageProperties) {\n        return undefined;\n    }\n    const { bucket_name, aws_region, buckets } = amplifyOutputsStorageProperties;\n    return {\n        S3: {\n            bucket: bucket_name,\n            region: aws_region,\n            buckets: buckets && createBucketInfoMap(buckets),\n        },\n    };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n    if (!amplifyOutputsAuthProperties) {\n        return undefined;\n    }\n    const { user_pool_id, user_pool_client_id, identity_pool_id, password_policy, mfa_configuration, mfa_methods, unauthenticated_identities_enabled, oauth, username_attributes, standard_required_attributes, groups, } = amplifyOutputsAuthProperties;\n    const authConfig = {\n        Cognito: {\n            userPoolId: user_pool_id,\n            userPoolClientId: user_pool_client_id,\n            groups,\n        },\n    };\n    if (identity_pool_id) {\n        authConfig.Cognito = {\n            ...authConfig.Cognito,\n            identityPoolId: identity_pool_id,\n        };\n    }\n    if (password_policy) {\n        authConfig.Cognito.passwordFormat = {\n            requireLowercase: password_policy.require_lowercase,\n            requireNumbers: password_policy.require_numbers,\n            requireUppercase: password_policy.require_uppercase,\n            requireSpecialCharacters: password_policy.require_symbols,\n            minLength: password_policy.min_length ?? 6,\n        };\n    }\n    if (mfa_configuration) {\n        authConfig.Cognito.mfa = {\n            status: getMfaStatus(mfa_configuration),\n            smsEnabled: mfa_methods?.includes('SMS'),\n            totpEnabled: mfa_methods?.includes('TOTP'),\n        };\n    }\n    if (unauthenticated_identities_enabled) {\n        authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n    }\n    if (oauth) {\n        authConfig.Cognito.loginWith = {\n            oauth: {\n                domain: oauth.domain,\n                redirectSignIn: oauth.redirect_sign_in_uri,\n                redirectSignOut: oauth.redirect_sign_out_uri,\n                responseType: oauth.response_type === 'token' ? 'token' : 'code',\n                scopes: oauth.scopes,\n                providers: getOAuthProviders(oauth.identity_providers),\n            },\n        };\n    }\n    if (username_attributes) {\n        authConfig.Cognito.loginWith = {\n            ...authConfig.Cognito.loginWith,\n            email: username_attributes.includes('email'),\n            phone: username_attributes.includes('phone_number'),\n            // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n            username: username_attributes.includes('username'),\n        };\n    }\n    if (standard_required_attributes) {\n        authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({ ...acc, [curr]: { required: true } }), {});\n    }\n    return authConfig;\n}\nexport function parseAnalytics(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n        return undefined;\n    }\n    const { amazon_pinpoint } = amplifyOutputsAnalyticsProperties;\n    return {\n        Pinpoint: {\n            appId: amazon_pinpoint.app_id,\n            region: amazon_pinpoint.aws_region,\n        },\n    };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties) {\n        return undefined;\n    }\n    const { aws_region, geofence_collections, maps, search_indices } = amplifyOutputsAnalyticsProperties;\n    return {\n        LocationService: {\n            region: aws_region,\n            searchIndices: search_indices,\n            geofenceCollections: geofence_collections,\n            maps,\n        },\n    };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n    if (!amplifyOutputsDataProperties) {\n        return undefined;\n    }\n    const { aws_region, default_authorization_type, url, api_key, model_introspection, } = amplifyOutputsDataProperties;\n    const GraphQL = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n        modelIntrospection: model_introspection,\n    };\n    return {\n        GraphQL,\n    };\n}\nfunction parseCustom(amplifyOutputsCustomProperties) {\n    if (!amplifyOutputsCustomProperties?.events) {\n        return undefined;\n    }\n    const { url, aws_region, api_key, default_authorization_type } = amplifyOutputsCustomProperties.events;\n    const Events = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n    };\n    return {\n        Events,\n    };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n    if (!amplifyOutputsNotificationsProperties) {\n        return undefined;\n    }\n    const { aws_region, channels, amazon_pinpoint_app_id } = amplifyOutputsNotificationsProperties;\n    const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n    const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n    if (!(hasInAppMessaging || hasPushNotification)) {\n        return undefined;\n    }\n    // At this point, we know the Amplify outputs contains at least one supported channel\n    const notificationsConfig = {};\n    if (hasInAppMessaging) {\n        notificationsConfig.InAppMessaging = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    if (hasPushNotification) {\n        notificationsConfig.PushNotification = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    return notificationsConfig;\n}\nexport function parseAmplifyOutputs(amplifyOutputs) {\n    const resourcesConfig = {};\n    if (amplifyOutputs.storage) {\n        resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n    }\n    if (amplifyOutputs.auth) {\n        resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n    }\n    if (amplifyOutputs.analytics) {\n        resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n    }\n    if (amplifyOutputs.geo) {\n        resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n    }\n    if (amplifyOutputs.data) {\n        resourcesConfig.API = parseData(amplifyOutputs.data);\n    }\n    if (amplifyOutputs.custom) {\n        const customConfig = parseCustom(amplifyOutputs.custom);\n        if (customConfig && 'Events' in customConfig) {\n            resourcesConfig.API = { ...resourcesConfig.API, ...customConfig };\n        }\n    }\n    if (amplifyOutputs.notifications) {\n        resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n    }\n    return resourcesConfig;\n}\nconst authModeNames = {\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AWS_LAMBDA: 'lambda',\n    OPENID_CONNECT: 'oidc',\n};\nfunction getGraphQLAuthMode(authType) {\n    return authModeNames[authType];\n}\nconst providerNames = {\n    GOOGLE: 'Google',\n    LOGIN_WITH_AMAZON: 'Amazon',\n    FACEBOOK: 'Facebook',\n    SIGN_IN_WITH_APPLE: 'Apple',\n};\nfunction getOAuthProviders(providers = []) {\n    return providers.reduce((oAuthProviders, provider) => {\n        if (providerNames[provider] !== undefined) {\n            oAuthProviders.push(providerNames[provider]);\n        }\n        return oAuthProviders;\n    }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n    if (mfaConfiguration === 'OPTIONAL')\n        return 'optional';\n    if (mfaConfiguration === 'REQUIRED')\n        return 'on';\n    return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n    const mappedBuckets = {};\n    buckets.forEach(({ name, bucket_name: bucketName, aws_region: region, paths }) => {\n        if (name in mappedBuckets) {\n            throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n        }\n        const sanitizedPaths = paths\n            ? Object.entries(paths).reduce((acc, [key, value]) => {\n                if (value !== undefined) {\n                    acc[key] = value;\n                }\n                return acc;\n            }, {})\n            : undefined;\n        mappedBuckets[name] = {\n            bucketName,\n            region,\n            paths: sanitizedPaths,\n        };\n    });\n    return mappedBuckets;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\nexport const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from './AuthError';\nexport const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nexport const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nexport const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nexport const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nexport const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nexport const INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nexport const INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nexport const invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nexport const invalidAppSchemeException = new AuthError({\n    name: INVALID_APP_SCHEME_EXCEPTION,\n    message: 'A valid non-http app scheme was not found in the config.',\n    recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.',\n});\nexport const invalidPreferredRedirectUrlException = new AuthError({\n    name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n    message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n    recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.',\n});\nexport const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nexport const invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nexport const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nexport const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nexport const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../Logger';\nconst logger = new ConsoleLogger('Auth');\nexport class AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n        if (authResourcesConfig && authResourcesConfig.Cognito?.userPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito User Pool'));\n        }\n        if (authResourcesConfig &&\n            authResourcesConfig.Cognito?.identityPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito Identity Pool'));\n        }\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * will automatically refresh expired auth tokens if a valid refresh token is present. You can force a refresh\n     * of non-expired tokens with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\nconst getCustomEndpointWarningMessage = (target) => `You are using a custom Amazon ${target} endpoint, ensure the endpoint is correct.`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport var TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nexport const assert = createAssertionFunction(tokenValidationErrorMap);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../errors/AuthError';\nexport function getRegionFromUserPoolId(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAtob } from '../../globalHelpers';\nexport const base64Decoder = {\n    convert(input, options) {\n        let inputStr = input;\n        // urlSafe character replacement options conform to the base64 url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#page-7\n        if (options?.urlSafe) {\n            inputStr = inputStr.replace(/-/g, '+').replace(/_/g, '/');\n        }\n        return getAtob()(inputStr);\n    },\n};\n",null,"import { DEFAULT_RETRY_ATTEMPTS } from './constants';\n/**\n * Middleware that executes the retry logic.\n */\nexport const retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nexport const createDisableCacheMiddleware = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { cognitoIdentityPoolEndpointResolver } from '@aws-amplify/core';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nexport const createCognitoIdentityPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoIdentityPoolEndpointResolver(input);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const globalExists = () => {\n    return typeof global !== 'undefined';\n};\nexport const globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nexport const windowExists = () => {\n    return typeof window !== 'undefined';\n};\nexport const documentExists = () => {\n    return typeof document !== 'undefined';\n};\nexport const processExists = () => {\n    return typeof process !== 'undefined';\n};\nexport const keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport JsCookie from 'js-cookie';\nexport class CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants';\nexport const cognitoUserPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists, windowExists } from './helpers';\n// Tested with @angular/core 16.0.0\nexport function angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nexport function angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists } from './helpers';\n// Tested with react 18.2 - built using Vite\nexport function reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nexport function reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '../../../utils/convert';\nimport { AuthConfigurationErrorCode, assert } from './errorHelpers';\nexport function assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nexport function assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nexport function assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nexport function decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from './Logger';\nimport { AmplifyError } from './errors';\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nexport const parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = {\n            LocationService: {\n                maps: amazon_location_service.maps,\n                geofenceCollections: amazon_location_service.geofenceCollections,\n                searchIndices: amazon_location_service.search_indices,\n                region: amazon_location_service.region,\n            },\n        };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nimport { withMemoization } from '../utils/memoization';\nimport { AmplifyErrorCode } from '../../types';\nconst shouldSendBody = (method) => !['HEAD', 'GET'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nexport const fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with next 13.4 / react 18.2\nexport function nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nexport function nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nexport function formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SyncKeyValueStorage } from './SyncKeyValueStorage';\nimport { getSessionStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class SyncSessionStorage extends SyncKeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../../errors/AuthError';\nexport const createUserPoolDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({\n            name: error.name,\n            message: error.message,\n            metadata: error.$metadata,\n        });\n    }\n    return parseJsonBody(response);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MAX_DELAY_MS } from './constants';\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nexport const userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../types';\nimport { AmplifyError } from './AmplifyError';\nexport class PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../../errors';\nexport var AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nexport const assert = createAssertionFunction(authConfigurationErrorMap);\n","export class AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, metadata, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        if (metadata) {\n            // If metadata exists, explicitly only record the following properties.\n            const { extendedRequestId, httpStatusCode, requestId } = metadata;\n            this.metadata = { extendedRequestId, httpStatusCode, requestId };\n        }\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../../../types';\nimport { isClockSkewError } from './isClockSkewError';\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nexport const getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { version } from './version';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework';\nimport { getCustomUserAgent } from './customUserAgent';\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nexport const sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nexport const Platform = new PlatformBuilder();\nexport const getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nexport const getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\nexport class AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class SyncKeyValueStorage {\n    constructor(storage) {\n        this._storage = storage;\n    }\n    get storage() {\n        if (!this._storage)\n            throw new PlatformNotSupportedError();\n        return this._storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    setItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    getItem(key) {\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    removeItem(key) {\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    clear() {\n        this.storage.clear();\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { InMemoryStorage } from './InMemoryStorage';\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new ConsoleLogger('CoreStorageUtils');\nexport const getLocalStorageWithFallback = () => {\n    try {\n        // Attempt to use localStorage directly\n        if (typeof window !== 'undefined' && window.localStorage) {\n            return window.localStorage;\n        }\n    }\n    catch (e) {\n        // Handle any errors related to localStorage access\n        logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n    }\n    // Return in-memory storage as a fallback if localStorage is not accessible\n    return new InMemoryStorage();\n};\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nexport const getSessionStorageWithFallback = () => {\n    try {\n        // Attempt to use sessionStorage directly\n        if (typeof window !== 'undefined' && window.sessionStorage) {\n            // Verify we can actually use it by testing access\n            window.sessionStorage.getItem('test');\n            return window.sessionStorage;\n        }\n        throw new Error('sessionStorage is not defined');\n    }\n    catch (e) {\n        // Handle any errors related to sessionStorage access\n        logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n        return new InMemoryStorage();\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { IdentityIdStorageKeys } from './types';\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nexport class DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this._hasGuestIdentityId = false;\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    this._hasGuestIdentityId = true;\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n            this._hasGuestIdentityId = true;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            if (this._hasGuestIdentityId) {\n                this.keyValueStorage.removeItem(this._authKeys.identityId);\n                this._hasGuestIdentityId = false;\n            }\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nexport const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createGetTokensFromRefreshTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetTokensFromRefreshToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n",null,null,"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseAWSExports } from '../parseAWSExports';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs';\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nexport const parseAmplifyConfig = (amplifyConfig) => {\n    if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n        return parseAWSExports(amplifyConfig);\n    }\n    else if (isAmplifyOutputs(amplifyConfig)) {\n        return parseAmplifyOutputs(amplifyConfig);\n    }\n    else {\n        return amplifyConfig;\n    }\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, windowExists } from './helpers';\n// Tested with nuxt 2.15 / vue 2.7\nexport function nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nexport function nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata } from './responseInfo';\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nexport const parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nexport const parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { keyPrefixMatch, processExists, windowExists } from './helpers';\n// Tested with svelte 3.59\nexport function svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nexport function svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nexport const defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nexport const partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { detect } from './detection';\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nexport const frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nexport const detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nexport const observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nexport function clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, AmplifyErrorCode, assertTokenProviderConfig, isBrowser, isTokenExpired, } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../errors/AuthError';\nimport { oAuthStore } from '../utils/oauth/oAuthStore';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise';\nexport class TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.name !== AmplifyErrorCode.NetworkError) {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport class InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { OAuthStorageKeys } from './types';\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nexport class DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { amzSdkInvocationIdHeaderMiddlewareFactory, amzSdkRequestHeaderMiddlewareFactory, retryMiddlewareFactory, } from '../../middleware/retry';\nimport { userAgentMiddlewareFactory, } from '../../middleware/userAgent';\nimport { composeTransferHandler } from '../../internal/composeTransferHandler';\nimport { fetchTransferHandler } from '../fetch';\nexport const unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    amzSdkInvocationIdHeaderMiddlewareFactory,\n    retryMiddlewareFactory,\n    amzSdkRequestHeaderMiddlewareFactory,\n]);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, createGetCredentialsForIdentityClient, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { assertIdTokenInAuthTokens } from '../utils/types';\nimport { createCognitoIdentityPoolEndpointResolver } from '../factories';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nexport class CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const getCredentialsForIdentity = createGetCredentialsForIdentityClient({\n            endpointResolver: createCognitoIdentityPoolEndpointResolver({\n                endpointOverride: authConfig.identityPoolEndpoint,\n            }),\n        });\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const getCredentialsForIdentity = createGetCredentialsForIdentityClient({\n            endpointResolver: createCognitoIdentityPoolEndpointResolver({\n                endpointOverride: authConfig.identityPoolEndpoint,\n            }),\n        });\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n                Logins: logins,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                // note: the following call removes guest identityId from the persistent store (localStorage)\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'primary',\n                });\n            }\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMZ_SDK_REQUEST_HEADER, DEFAULT_RETRY_ATTEMPTS } from './constants';\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nexport const amzSdkRequestHeaderMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS }) => (next, context) => {\n    return async function amzSdkRequestHeaderMiddleware(request) {\n        const attemptsCount = context.attemptsCount ?? 0;\n        request.headers[AMZ_SDK_REQUEST_HEADER] =\n            `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n        return next(request);\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultIdentityIdStore } from './IdentityIdStore';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider';\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nexport const cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore };\n","import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport './amplify-config';\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Christmas Store Registration\",\n  description: \"Register for the Christmas Store event\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultPartition, partitionsInfo } from './partitions';\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nexport const getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from '../types';\nimport { reactSSRDetect, reactWebDetect } from './React';\nimport { vueSSRDetect, vueWebDetect } from './Vue';\nimport { svelteSSRDetect, svelteWebDetect } from './Svelte';\nimport { nextSSRDetect, nextWebDetect } from './Next';\nimport { nuxtSSRDetect, nuxtWebDetect } from './Nuxt';\nimport { angularSSRDetect, angularWebDetect } from './Angular';\nimport { reactNativeDetect } from './ReactNative';\nimport { expoDetect } from './Expo';\nimport { webDetect } from './Web';\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nexport function detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig, deDupeAsyncFunction, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokensWithRefreshToken } from '../utils/types';\nimport { AuthError } from '../../../errors/AuthError';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { createGetTokensFromRefreshTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig.Cognito;\n    const region = getRegionFromUserPoolId(userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const getTokensFromRefreshToken = createGetTokensFromRefreshTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { AuthenticationResult } = await getTokensFromRefreshToken({ region }, {\n        ClientId: userPoolClientId,\n        RefreshToken: tokens.refreshToken,\n        DeviceKey: tokens.deviceMetadata?.deviceKey,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: AuthenticationResult?.RefreshToken ?? tokens.refreshToken,\n        username,\n    };\n};\nexport const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport const refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, CookieStorage, defaultStorage, } from '@aws-amplify/core';\nimport { parseAmplifyConfig, } from '@aws-amplify/core/internals/utils';\nimport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider, cognitoUserPoolsTokenProvider, } from './auth/cognito';\nexport const DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourceConfig);\n        const cookieBasedKeyValueStorage = new CookieStorage({ sameSite: 'lax' });\n        const resolvedKeyValueStorage = libraryOptions?.ssr\n            ? cookieBasedKeyValueStorage\n            : defaultStorage;\n        const resolvedCredentialsProvider = libraryOptions?.ssr\n            ? new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(cookieBasedKeyValueStorage))\n            : cognitoCredentialsProvider;\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            resolvedKeyValueStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: resolvedCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            const authLibraryOptions = Amplify.libraryOptions.Auth;\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                resolvedKeyValueStorage);\n                authLibraryOptions.credentialsProvider = resolvedCredentialsProvider;\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: authLibraryOptions,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nexport const isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createGetIdClient } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { createCognitoIdentityPoolEndpointResolver } from '../factories';\nimport { formLoginsMap } from './utils';\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nexport async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    const identityId = await identityIdStore.loadIdentityId();\n    if (identityId) {\n        return identityId.id;\n    }\n    const logins = tokens?.idToken\n        ? formLoginsMap(tokens.idToken.toString())\n        : {};\n    const generatedIdentityId = await generateIdentityId(logins, authConfig);\n    // Store generated identityId\n    identityIdStore.storeIdentityId({\n        id: generatedIdentityId,\n        type: tokens ? 'primary' : 'guest',\n    });\n    return generatedIdentityId;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    const getId = createGetIdClient({\n        endpointResolver: createCognitoIdentityPoolEndpointResolver({\n            endpointOverride: authConfig.identityPoolEndpoint,\n        }),\n    });\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    let idResult;\n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    try {\n        idResult = (await getId({\n            region,\n        }, {\n            IdentityPoolId: identityPoolId,\n            Logins: logins,\n        })).IdentityId;\n    }\n    catch (e) {\n        assertServiceError(e);\n        throw new AuthError(e);\n    }\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nexport const setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexport const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nexport const deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix } from '../../../../clients';\nimport { AmplifyUrl } from '../../../../libraryUtils';\nimport { COGNITO_IDENTITY_SERVICE_NAME } from './constants';\nexport const cognitoIdentityPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDENTITY_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nexport const getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nexport const getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nexport const getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n",null,"/* eslint-disable no-console */\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWS_CLOUDWATCH_CATEGORY } from '../constants';\nimport { LogType } from './types';\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../../../clients';\nimport { composeServiceApi } from '../../../../clients/internal';\nimport { getAmplifyUserAgent } from '../../../../Platform';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nimport { cognitoIdentityTransferHandler } from './handler';\nimport { createClientSerializer } from './serde';\nexport const createGetIdClient = (config) => composeServiceApi(cognitoIdentityTransferHandler, createClientSerializer('GetId'), getIdDeserializer, {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n    userAgentValue: getAmplifyUserAgent(),\n});\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    const body = await parseJsonBody(response);\n    return {\n        IdentityId: body.IdentityId,\n        $metadata: parseMetadata(response),\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getRetryDecider, jitteredBackoff, parseJsonError, } from '../../../../clients';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexport const COGNITO_IDENTITY_SERVICE_NAME = 'cognito-identity';\nexport const DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDENTITY_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    cache: 'no-store',\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../../../clients';\nimport { composeServiceApi } from '../../../../clients/internal';\nimport { getAmplifyUserAgent } from '../../../../Platform';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nimport { cognitoIdentityTransferHandler } from './handler';\nimport { createClientSerializer } from './serde';\nexport const createGetCredentialsForIdentityClient = (config) => composeServiceApi(cognitoIdentityTransferHandler, createClientSerializer('GetCredentialsForIdentity'), getCredentialsForIdentityDeserializer, {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n    userAgentValue: getAmplifyUserAgent(),\n});\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    const body = await parseJsonBody(response);\n    return {\n        IdentityId: body.IdentityId,\n        Credentials: deserializeCredentials(body.Credentials),\n        $metadata: parseMetadata(response),\n    };\n};\nconst deserializeCredentials = ({ Expiration, ...rest } = {}) => ({\n    ...rest,\n    Expiration: Expiration && new Date(Expiration * 1000),\n});\n","import { assertTokenProviderConfig, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthTokenStorageKeys, } from './types';\nimport { TokenProviderErrorCode, assert } from './errorHelpers';\nimport { AUTH_KEY_PREFIX } from './constants';\nexport class DefaultTokenStore {\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.idToken);\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.signInDetails);\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(AUTH_KEY_PREFIX, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${AUTH_KEY_PREFIX}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nexport const createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nexport function getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { unauthenticatedHandler, } from '../../../../../clients';\nimport { composeTransferHandler } from '../../../../../clients/internal';\nimport { createDisableCacheMiddleware } from '../../../middleware';\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [createDisableCacheMiddleware]);\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { amplifyUuid } from '../../../libraryUtils';\nimport { AMZ_SDK_INVOCATION_ID_HEADER } from './constants';\n/**\n * Middleware injects a UUID string to `amz-sdk-invocation-id` header.\n * if the header is not set already. This header is helpful to provide\n * observability to group the requests caused by automatic retry.\n *\n * This middleware is standalone because of extra UUID dependency, we will\n * NOT use this middleware for API categories.\n *\n * Ref: https://sdk.amazonaws.com/kotlin/api/smithy-kotlin/api/1.0.9/http-client/aws.smithy.kotlin.runtime.http.operation/-http-operation-context/-sdk-invocation-id.html\n */\nexport const amzSdkInvocationIdHeaderMiddlewareFactory = () => next => {\n    return async function amzSdkInvocationIdHeaderMiddleware(request) {\n        if (!request.headers[AMZ_SDK_INVOCATION_ID_HEADER]) {\n            request.headers[AMZ_SDK_INVOCATION_ID_HEADER] = amplifyUuid();\n        }\n        return next(request);\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants';\nimport { AmplifyError } from '../errors';\nexport const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nexport class HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nexport const Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nexport const HubInternal = new HubClass('internal-hub');\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nexport const composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We need to allow different endpoints based on both given config(other than region) and input.\n        // However for most of non-S3 services, region is the only input for endpoint resolver.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, Hub } from '../Hub';\nimport { deepFreeze } from '../utils';\nimport { parseAmplifyConfig } from '../libraryUtils';\nimport { AuthClass } from './Auth';\nimport { ADD_OAUTH_LISTENER } from './constants';\nexport class AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.isConfigured = false;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n        this.isConfigured = true;\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        if (!this.isConfigured) {\n            // eslint-disable-next-line no-console\n            console.warn(`Amplify has not been configured. Please call Amplify.configure() before using this service.`);\n        }\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexport const Amplify = new AmplifyClass();\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112]}