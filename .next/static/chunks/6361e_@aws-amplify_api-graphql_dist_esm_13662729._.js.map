{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/types/index.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/types/index.ts"],"sourcesContent":["export { CONTROL_MSG, ConnectionState } from './PubSub';\nexport var GraphQLAuthError;\n(function (GraphQLAuthError) {\n    GraphQLAuthError[\"NO_API_KEY\"] = \"No api-key configured\";\n    GraphQLAuthError[\"NO_CURRENT_USER\"] = \"No current user\";\n    GraphQLAuthError[\"NO_CREDENTIALS\"] = \"No credentials\";\n    GraphQLAuthError[\"NO_FEDERATED_JWT\"] = \"No federated jwt\";\n    GraphQLAuthError[\"NO_AUTH_TOKEN\"] = \"No auth token specified\";\n})(GraphQLAuthError || (GraphQLAuthError = {}));\nexport const __amplify = Symbol('amplify');\nexport const __authMode = Symbol('authMode');\nexport const __authToken = Symbol('authToken');\nexport const __apiKey = Symbol('apiKey');\nexport const __headers = Symbol('headers');\nexport const __endpoint = Symbol('endpoint');\nexport function getInternals(client) {\n    const c = client;\n    return {\n        amplify: c[__amplify],\n        apiKey: c[__apiKey],\n        authMode: c[__authMode],\n        authToken: c[__authToken],\n        endpoint: c[__endpoint],\n        headers: c[__headers],\n    };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACU,IAAC;AACX,CAAC,SAAU,gBAAgB,EAAE;IACzB,gBAAgB,CAAC,YAAY,CAAC,GAAG,uBAAuB;IACxD,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;IACvD,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;IACrD,gBAAgB,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;IACzD,gBAAgB,CAAC,eAAe,CAAC,GAAG,yBAAyB;AACjE,CAAC,EAAE,gBAAgB,IAAA,CAAK,gBAAgB,GAAG,CAAA,CAAE,CAAC,CAAC;AACnC,MAAC,SAAS,GAAG,MAAM,CAAC,SAAS;AAC7B,MAAC,UAAU,GAAG,MAAM,CAAC,UAAU;AAC/B,MAAC,WAAW,GAAG,MAAM,CAAC,WAAW;AACjC,MAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;AAC3B,MAAC,SAAS,GAAG,MAAM,CAAC,SAAS;AAC7B,MAAC,UAAU,GAAG,MAAM,CAAC,UAAU;AACpC,SAAS,YAAY,CAAC,MAAM,EAAE;IACjC,MAAM,CAAC,GAAG,MAAM;IAChB,OAAO;QACH,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC;QACrB,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC;QACnB,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC;QACvB,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC;QACzB,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC;QACvB,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC;IAC7B,CAAK;AACL","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isApiGraphQLConfig(apiGraphQLConfig) {\n    return apiGraphQLConfig !== undefined;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACO,SAAS,kBAAkB,CAAC,gBAAgB,EAAE;IACjD,OAAO,gBAAgB,KAAK,SAAS;AACzC","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/utils/runtimeTypeGuards/isConfigureEventWithResourceConfig.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isConfigureEventWithResourceConfig.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isConfigureEventWithResourceConfig(payload) {\n    return payload.event === 'configure';\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACO,SAAS,kCAAkC,CAAC,OAAO,EAAE;IACxD,OAAO,OAAO,CAAC,KAAK,KAAK,WAAW;AACxC","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/Providers/constants.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/Providers/constants.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nexport const MAX_DELAY_MS = 5000;\nexport const NON_RETRYABLE_CODES = [400, 401, 403];\nexport const NON_RETRYABLE_ERROR_TYPES = [\n    'BadRequestException',\n    'UnauthorizedException',\n];\nexport const CONNECTION_STATE_CHANGE = 'ConnectionStateChange';\nexport var MESSAGE_TYPES;\n(function (MESSAGE_TYPES) {\n    /**\n     * Client -> Server message.\n     * This message type is the first message after handshake and this will initialize AWS AppSync RealTime communication\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_INIT\"] = \"connection_init\";\n    /**\n     * Server -> Client message\n     * This message type is in case there is an issue with AWS AppSync RealTime when establishing connection\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ERROR\"] = \"connection_error\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_CONNECTION_INIT message\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ACK\"] = \"connection_ack\";\n    /**\n     * Client -> Server message.\n     * This message type is for register subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_START\"] = \"start\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_START message\n     */\n    MESSAGE_TYPES[\"GQL_START_ACK\"] = \"start_ack\";\n    /**\n     * Server -> Client message.\n     * This message type is for subscription message from AWS AppSync RealTime or Events\n     */\n    MESSAGE_TYPES[\"DATA\"] = \"data\";\n    /**\n     * Server -> Client message.\n     * This message type helps the client to know is still receiving messages from AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_KEEP_ALIVE\"] = \"ka\";\n    /**\n     * Client -> Server message.\n     * This message type is for unregister subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_STOP\"] = \"stop\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_STOP message\n     */\n    MESSAGE_TYPES[\"GQL_COMPLETE\"] = \"complete\";\n    /**\n     * Server -> Client message.\n     * This message type is for sending error messages from AWS AppSync RealTime to the client\n     */\n    MESSAGE_TYPES[\"GQL_ERROR\"] = \"error\";\n    /**\n     * Client -> Server message.\n     * This message type is for registering subscriptions with Events\n     */\n    MESSAGE_TYPES[\"EVENT_SUBSCRIBE\"] = \"subscribe\";\n    /**\n     * Client -> Server message.\n     * This message type is for publishing a message with Events\n     */\n    MESSAGE_TYPES[\"EVENT_PUBLISH\"] = \"publish\";\n    /**\n     * Server -> Client message.\n     * Server acknowledges successful subscription\n     */\n    MESSAGE_TYPES[\"EVENT_SUBSCRIBE_ACK\"] = \"subscribe_success\";\n    /**\n     * Server -> Client message.\n     * Server acknowledges successful publish\n     */\n    MESSAGE_TYPES[\"EVENT_PUBLISH_ACK\"] = \"publish_success\";\n    /**\n     * Client -> Server message.\n     * This message type is for unregister subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"EVENT_STOP\"] = \"unsubscribe\";\n    /**\n     * Server -> Client message.\n     * This is the ack response from AWS AppSync Events to EVENT_STOP message\n     */\n    MESSAGE_TYPES[\"EVENT_COMPLETE\"] = \"unsubscribe_success\";\n})(MESSAGE_TYPES || (MESSAGE_TYPES = {}));\nexport var SUBSCRIPTION_STATUS;\n(function (SUBSCRIPTION_STATUS) {\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"PENDING\"] = 0] = \"PENDING\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"FAILED\"] = 2] = \"FAILED\";\n})(SUBSCRIPTION_STATUS || (SUBSCRIPTION_STATUS = {}));\nexport var SOCKET_STATUS;\n(function (SOCKET_STATUS) {\n    SOCKET_STATUS[SOCKET_STATUS[\"CLOSED\"] = 0] = \"CLOSED\";\n    SOCKET_STATUS[SOCKET_STATUS[\"READY\"] = 1] = \"READY\";\n    SOCKET_STATUS[SOCKET_STATUS[\"CONNECTING\"] = 2] = \"CONNECTING\";\n})(SOCKET_STATUS || (SOCKET_STATUS = {}));\nexport const AWS_APPSYNC_REALTIME_HEADERS = {\n    accept: 'application/json, text/javascript',\n    'content-encoding': 'amz-1.0',\n    'content-type': 'application/json; charset=UTF-8',\n};\n/**\n * Time in milleseconds to wait for GQL_CONNECTION_INIT message\n */\nexport const CONNECTION_INIT_TIMEOUT = 15000;\n/**\n * Time in milleseconds to wait for GQL_START_ACK message\n */\nexport const START_ACK_TIMEOUT = 15000;\n/**\n * Default Time in milleseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\nexport const DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\n/**\n * Default Time in milleseconds between monitoring checks of keep alive status\n */\nexport const DEFAULT_KEEP_ALIVE_HEARTBEAT_TIMEOUT = 5 * 1000;\n/**\n * Default Time in milleseconds to alert for missed GQL_CONNECTION_KEEP_ALIVE message\n */\nexport const DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT = 65 * 1000;\n/**\n * Default delay time in milleseconds between when reconnect is triggered vs when it is attempted\n */\nexport const RECONNECT_DELAY = 5 * 1000;\n/**\n * Default interval time in milleseconds between when reconnect is re-attempted\n */\nexport const RECONNECT_INTERVAL = 60 * 1000;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/types/PubSub.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/types/PubSub.ts"],"sourcesContent":["export var CONTROL_MSG;\n(function (CONTROL_MSG) {\n    CONTROL_MSG[\"CONNECTION_CLOSED\"] = \"Connection closed\";\n    CONTROL_MSG[\"CONNECTION_FAILED\"] = \"Connection failed\";\n    CONTROL_MSG[\"REALTIME_SUBSCRIPTION_INIT_ERROR\"] = \"AppSync Realtime subscription init error\";\n    CONTROL_MSG[\"SUBSCRIPTION_ACK\"] = \"Subscription ack\";\n    CONTROL_MSG[\"TIMEOUT_DISCONNECT\"] = \"Timeout disconnect\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\n/** @enum {string} */\nexport var ConnectionState;\n(function (ConnectionState) {\n    /*\n     * The connection is alive and healthy\n     */\n    ConnectionState[\"Connected\"] = \"Connected\";\n    /*\n     * The connection is alive, but the connection is offline\n     */\n    ConnectionState[\"ConnectedPendingNetwork\"] = \"ConnectedPendingNetwork\";\n    /*\n     * The connection has been disconnected while in use\n     */\n    ConnectionState[\"ConnectionDisrupted\"] = \"ConnectionDisrupted\";\n    /*\n     * The connection has been disconnected and the network is offline\n     */\n    ConnectionState[\"ConnectionDisruptedPendingNetwork\"] = \"ConnectionDisruptedPendingNetwork\";\n    /*\n     * The connection is in the process of connecting\n     */\n    ConnectionState[\"Connecting\"] = \"Connecting\";\n    /*\n     * The connection is not in use and is being disconnected\n     */\n    ConnectionState[\"ConnectedPendingDisconnect\"] = \"ConnectedPendingDisconnect\";\n    /*\n     * The connection is not in use and has been disconnected\n     */\n    ConnectionState[\"Disconnected\"] = \"Disconnected\";\n    /*\n     * The connection is alive, but a keep alive message has been missed\n     */\n    ConnectionState[\"ConnectedPendingKeepAlive\"] = \"ConnectedPendingKeepAlive\";\n})(ConnectionState || (ConnectionState = {}));\n"],"names":[],"mappings":";;;;;;AAAU,IAAC;AACX,CAAC,SAAU,WAAW,EAAE;IACpB,WAAW,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;IACtD,WAAW,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;IACtD,WAAW,CAAC,kCAAkC,CAAC,GAAG,0CAA0C;IAC5F,WAAW,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;IACpD,WAAW,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;AAC5D,CAAC,EAAE,WAAW,IAAA,CAAK,WAAW,GAAG,CAAA,CAAE,CAAC,CAAC;AACrC,mBAAA,GACU,IAAC;AACX,CAAC,SAAU,eAAe,EAAE;IAC5B;;KAEA,GACI,eAAe,CAAC,WAAW,CAAC,GAAG,WAAW;IAC9C;;KAEA,GACI,eAAe,CAAC,yBAAyB,CAAC,GAAG,yBAAyB;IAC1E;;KAEA,GACI,eAAe,CAAC,qBAAqB,CAAC,GAAG,qBAAqB;IAClE;;KAEA,GACI,eAAe,CAAC,mCAAmC,CAAC,GAAG,mCAAmC;IAC9F;;KAEA,GACI,eAAe,CAAC,YAAY,CAAC,GAAG,YAAY;IAChD;;KAEA,GACI,eAAe,CAAC,4BAA4B,CAAC,GAAG,4BAA4B;IAChF;;KAEA,GACI,eAAe,CAAC,cAAc,CAAC,GAAG,cAAc;IACpD;;KAEA,GACI,eAAe,CAAC,2BAA2B,CAAC,GAAG,2BAA2B;AAC9E,CAAC,EAAE,eAAe,IAAA,CAAK,eAAe,GAAG,CAAA,CAAE,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/ReachabilityMonitor/index.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/ReachabilityMonitor/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Reachability } from '@aws-amplify/core/internals/utils';\nexport const ReachabilityMonitor = () => new Reachability().networkMonitor();\n"],"names":[],"mappings":";;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,mBAAmB,GAAG,IAAM,IAAI,iPAAY,EAAE,CAAC,cAAc","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/ConnectionStateMonitor.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/ConnectionStateMonitor.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable, filter, map } from 'rxjs';\nimport { ConnectionState } from '../types/PubSub';\nimport { ReachabilityMonitor } from './ReachabilityMonitor';\nexport const CONNECTION_CHANGE = {\n    KEEP_ALIVE_MISSED: { keepAliveState: 'unhealthy' },\n    KEEP_ALIVE: { keepAliveState: 'healthy' },\n    CONNECTION_ESTABLISHED: { connectionState: 'connected' },\n    CONNECTION_FAILED: {\n        intendedConnectionState: 'disconnected',\n        connectionState: 'disconnected',\n    },\n    CLOSING_CONNECTION: { intendedConnectionState: 'disconnected' },\n    OPENING_CONNECTION: {\n        intendedConnectionState: 'connected',\n        connectionState: 'connecting',\n    },\n    CLOSED: { connectionState: 'disconnected' },\n    ONLINE: { networkState: 'connected' },\n    OFFLINE: { networkState: 'disconnected' },\n};\nexport class ConnectionStateMonitor {\n    constructor() {\n        this._networkMonitoringSubscription = undefined;\n        this._linkedConnectionState = {\n            networkState: 'connected',\n            connectionState: 'disconnected',\n            intendedConnectionState: 'disconnected',\n            keepAliveState: 'healthy',\n        };\n        // Attempt to update the state with the current actual network state\n        this._initialNetworkStateSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n            this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            this._initialNetworkStateSubscription?.unsubscribe();\n        });\n        this._linkedConnectionStateObservable =\n            new Observable(connectionStateObserver => {\n                connectionStateObserver.next(this._linkedConnectionState);\n                this._linkedConnectionStateObserver = connectionStateObserver;\n            });\n    }\n    /**\n     * Turn network state monitoring on if it isn't on already\n     */\n    enableNetworkMonitoring() {\n        // If no initial network state was discovered, stop trying\n        this._initialNetworkStateSubscription?.unsubscribe();\n        // Maintain the network state based on the reachability monitor\n        if (this._networkMonitoringSubscription === undefined) {\n            this._networkMonitoringSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n                this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            });\n        }\n    }\n    /**\n     * Turn network state monitoring off if it isn't off already\n     */\n    disableNetworkMonitoring() {\n        this._networkMonitoringSubscription?.unsubscribe();\n        this._networkMonitoringSubscription = undefined;\n    }\n    /**\n     * Get the observable that allows us to monitor the connection state\n     *\n     * @returns {Observable<ConnectionState>} - The observable that emits ConnectionState updates\n     */\n    get connectionStateObservable() {\n        let previous;\n        // The linked state aggregates state changes to any of the network, connection,\n        // intendedConnection and keepAliveHealth. Some states will change these independent\n        // states without changing the overall connection state.\n        // After translating from linked states to ConnectionState, then remove any duplicates\n        return this._linkedConnectionStateObservable\n            .pipe(map(value => {\n            return this.connectionStatesTranslator(value);\n        }))\n            .pipe(filter(current => {\n            const toInclude = current !== previous;\n            previous = current;\n            return toInclude;\n        }));\n    }\n    /*\n     * Updates local connection state and emits the full state to the observer.\n     */\n    record(statusUpdates) {\n        // Maintain the network monitor\n        if (statusUpdates.intendedConnectionState === 'connected') {\n            this.enableNetworkMonitoring();\n        }\n        else if (statusUpdates.intendedConnectionState === 'disconnected') {\n            this.disableNetworkMonitoring();\n        }\n        // Maintain the socket state\n        const newSocketStatus = {\n            ...this._linkedConnectionState,\n            ...statusUpdates,\n        };\n        this._linkedConnectionState = { ...newSocketStatus };\n        this._linkedConnectionStateObserver?.next(this._linkedConnectionState);\n    }\n    /*\n     * Translate the ConnectionState structure into a specific ConnectionState string literal union\n     */\n    connectionStatesTranslator({ connectionState, networkState, intendedConnectionState, keepAliveState, }) {\n        if (connectionState === 'connected' && networkState === 'disconnected')\n            return ConnectionState.ConnectedPendingNetwork;\n        if (connectionState === 'connected' &&\n            intendedConnectionState === 'disconnected')\n            return ConnectionState.ConnectedPendingDisconnect;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected' &&\n            networkState === 'disconnected')\n            return ConnectionState.ConnectionDisruptedPendingNetwork;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected')\n            return ConnectionState.ConnectionDisrupted;\n        if (connectionState === 'connected' && keepAliveState === 'unhealthy')\n            return ConnectionState.ConnectedPendingKeepAlive;\n        // All remaining states directly correspond to the connection state\n        if (connectionState === 'connecting')\n            return ConnectionState.Connecting;\n        if (connectionState === 'disconnected')\n            return ConnectionState.Disconnected;\n        return ConnectionState.Connected;\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/ReconnectionMonitor.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/ReconnectionMonitor.ts"],"sourcesContent":["import { RECONNECT_DELAY, RECONNECT_INTERVAL } from '../Providers/constants';\nexport var ReconnectEvent;\n(function (ReconnectEvent) {\n    ReconnectEvent[\"START_RECONNECT\"] = \"START_RECONNECT\";\n    ReconnectEvent[\"HALT_RECONNECT\"] = \"HALT_RECONNECT\";\n})(ReconnectEvent || (ReconnectEvent = {}));\n/**\n * Captures the reconnect event logic used to determine when to reconnect to PubSub providers.\n *   Reconnect attempts are delayed by 5 seconds to let the interface settle.\n *   Attempting to reconnect only once creates unrecoverable states when the network state isn't\n *   supported by the browser, so this keeps retrying every minute until halted.\n */\nexport class ReconnectionMonitor {\n    constructor() {\n        this.reconnectObservers = [];\n    }\n    /**\n     * Add reconnect observer to the list of observers to alert on reconnect\n     */\n    addObserver(reconnectObserver) {\n        this.reconnectObservers.push(reconnectObserver);\n    }\n    /**\n     * Given a reconnect event, start the appropriate behavior\n     */\n    record(event) {\n        if (event === ReconnectEvent.START_RECONNECT) {\n            // If the reconnection hasn't been started\n            if (this.reconnectSetTimeoutId === undefined &&\n                this.reconnectIntervalId === undefined) {\n                this.reconnectSetTimeoutId = setTimeout(() => {\n                    // Reconnect now\n                    this._triggerReconnect();\n                    // Retry reconnect every periodically until it works\n                    this.reconnectIntervalId = setInterval(() => {\n                        this._triggerReconnect();\n                    }, RECONNECT_INTERVAL);\n                }, RECONNECT_DELAY);\n            }\n        }\n        if (event === ReconnectEvent.HALT_RECONNECT) {\n            if (this.reconnectIntervalId) {\n                clearInterval(this.reconnectIntervalId);\n                this.reconnectIntervalId = undefined;\n            }\n            if (this.reconnectSetTimeoutId) {\n                clearTimeout(this.reconnectSetTimeoutId);\n                this.reconnectSetTimeoutId = undefined;\n            }\n        }\n    }\n    /**\n     * Complete all reconnect observers\n     */\n    close() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.complete?.();\n        });\n    }\n    _triggerReconnect() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.next?.();\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AACU,IAAC;AACX,CAAC,SAAU,cAAc,EAAE;IACvB,cAAc,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;IACrD,cAAc,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;AACvD,CAAC,EAAE,cAAc,IAAA,CAAK,cAAc,GAAG,CAAA,CAAE,CAAC,CAAC;AAC3C;;;;;CAKA,GACO,MAAM,mBAAmB,CAAC;IAIjC;;KAEA,GACI,WAAW,CAAC,iBAAiB,EAAE;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACnD;IACJ;;KAEA,GACI,MAAM,CAAC,KAAK,EAAE;QACV,IAAI,KAAK,KAAK,cAAc,CAAC,eAAe,EAAE;YACtD,0CAAA;YACY,IAAI,IAAI,CAAC,qBAAqB,KAAK,SAAS,IACxC,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAE;gBACxC,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC,MAAM;oBAC9D,gBAAA;oBACoB,IAAI,CAAC,iBAAiB,EAAE;oBAC5C,oDAAA;oBACoB,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,MAAM;wBACzC,IAAI,CAAC,iBAAiB,EAAE;oBAC5B,CAAC,EAAE,2QAAkB,CAAC;gBAC1B,CAAC,EAAE,wQAAe,CAAC;YACvB;QACJ;QACA,IAAI,KAAK,KAAK,cAAc,CAAC,cAAc,EAAE;YACzC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBACvC,IAAI,CAAC,mBAAmB,GAAG,SAAS;YACxC;YACA,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC5B,YAAY,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBACxC,IAAI,CAAC,qBAAqB,GAAG,SAAS;YAC1C;QACJ;IACJ;IACJ;;KAEA,GACI,KAAK,GAAG;QACJ,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,iBAAiB,IAAI;gBACjD,iBAAiB;6DAAC,QAAQ,IAAI;QAClC,CAAC,CAAC;IACN;IACA,iBAAiB,GAAG;QAChB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,iBAAiB,IAAI;;yDAC/B,IAAI,IAAI,qFAA1B,iBAAiB;QACrB,CAAC,CAAC;IACN;IAlDA,WAAW,EAAG;QACV,IAAI,CAAC,kBAAkB,GAAG,EAAE;IAChC;AAiDJ","debugId":null}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/Providers/AWSWebSocketProvider/appsyncUrl.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/Providers/AWSWebSocketProvider/appsyncUrl.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyUrl, AmplifyUrlSearchParams, } from '@aws-amplify/core/internals/utils';\nconst protocol = 'wss://';\nconst standardDomainPattern = /^https:\\/\\/\\w{26}\\.appsync-api\\.\\w{2}(?:(?:-\\w{2,})+)-\\d\\.amazonaws.com(?:\\.cn)?\\/graphql$/i;\nconst eventDomainPattern = /^https:\\/\\/\\w{26}\\.\\w+-api\\.\\w{2}(?:(?:-\\w{2,})+)-\\d\\.amazonaws.com(?:\\.cn)?\\/event$/i;\nconst customDomainPath = '/realtime';\nexport const isCustomDomain = (url) => {\n    return url.match(standardDomainPattern) === null;\n};\nconst isEventDomain = (url) => url.match(eventDomainPattern) !== null;\nexport const getRealtimeEndpointUrl = (appSyncGraphqlEndpoint) => {\n    let realtimeEndpoint = appSyncGraphqlEndpoint ?? '';\n    if (isEventDomain(realtimeEndpoint)) {\n        realtimeEndpoint = realtimeEndpoint\n            .concat(customDomainPath)\n            .replace('ddpg-api', 'grt-gamma')\n            .replace('appsync-api', 'appsync-realtime-api');\n    }\n    else if (isCustomDomain(realtimeEndpoint)) {\n        realtimeEndpoint = realtimeEndpoint.concat(customDomainPath);\n    }\n    else {\n        realtimeEndpoint = realtimeEndpoint\n            .replace('appsync-api', 'appsync-realtime-api')\n            .replace('gogi-beta', 'grt-beta')\n            .replace('ddpg-api', 'grt-gamma');\n    }\n    realtimeEndpoint = realtimeEndpoint\n        .replace('https://', protocol)\n        .replace('http://', protocol);\n    return new AmplifyUrl(realtimeEndpoint);\n};\n/**\n * Strips out `Authorization` header if present\n */\nconst extractNonAuthHeaders = (headers) => {\n    if (!headers) {\n        return {};\n    }\n    if ('Authorization' in headers) {\n        const { Authorization: _, ...nonAuthHeaders } = headers;\n        return nonAuthHeaders;\n    }\n    return headers;\n};\n/**\n *\n * @param headers - http headers\n * @returns uri-encoded query parameters derived from custom headers\n */\nexport const queryParamsFromCustomHeaders = (headers) => {\n    const nonAuthHeaders = extractNonAuthHeaders(headers);\n    const params = new AmplifyUrlSearchParams();\n    Object.entries(nonAuthHeaders).forEach(([k, v]) => {\n        params.append(k, v);\n    });\n    return params;\n};\n/**\n * Normalizes AppSync realtime endpoint URL\n *\n * @param appSyncGraphqlEndpoint - AppSync endpointUri from config\n * @param urlParams - URLSearchParams\n * @returns fully resolved string realtime endpoint URL\n */\nexport const realtimeUrlWithQueryString = (appSyncGraphqlEndpoint, urlParams) => {\n    const realtimeEndpointUrl = getRealtimeEndpointUrl(appSyncGraphqlEndpoint);\n    // preserves any query params a customer might manually set in the configuration\n    const existingParams = new AmplifyUrlSearchParams(realtimeEndpointUrl.search);\n    for (const [k, v] of urlParams.entries()) {\n        existingParams.append(k, v);\n    }\n    realtimeEndpointUrl.search = existingParams.toString();\n    return realtimeEndpointUrl.toString();\n};\n// TODO: move to separate file?\nexport const additionalHeadersFromOptions = async (options) => {\n    const { appSyncGraphqlEndpoint, query, libraryConfigHeaders = () => ({}), additionalHeaders = {}, authToken, } = options;\n    let additionalCustomHeaders = {};\n    const _libraryConfigHeaders = await libraryConfigHeaders();\n    if (typeof additionalHeaders === 'function') {\n        const requestOptions = {\n            url: appSyncGraphqlEndpoint || '',\n            queryString: query || '',\n        };\n        additionalCustomHeaders = await additionalHeaders(requestOptions);\n    }\n    else {\n        additionalCustomHeaders = additionalHeaders;\n    }\n    // if an authorization header is set, have the explicit, operation-level authToken take precedence\n    if (authToken) {\n        additionalCustomHeaders = {\n            ...additionalCustomHeaders,\n            Authorization: authToken,\n        };\n    }\n    return {\n        additionalCustomHeaders,\n        libraryConfigHeaders: _libraryConfigHeaders,\n    };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/Providers/AWSWebSocketProvider/authHeaders.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/Providers/AWSWebSocketProvider/authHeaders.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, fetchAuthSession } from '@aws-amplify/core';\nimport { signRequest } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { AWS_APPSYNC_REALTIME_HEADERS } from '../constants';\nconst logger = new ConsoleLogger('AWSAppSyncRealTimeProvider Auth');\nconst awsAuthTokenHeader = async ({ host }) => {\n    const session = await fetchAuthSession();\n    return {\n        Authorization: session?.tokens?.accessToken?.toString(),\n        host,\n    };\n};\nconst awsRealTimeApiKeyHeader = async ({ apiKey, host, }) => {\n    const dt = new Date();\n    const dtStr = dt.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        host,\n        'x-amz-date': dtStr,\n        'x-api-key': apiKey,\n    };\n};\nconst awsRealTimeIAMHeader = async ({ payload, canonicalUri, appSyncGraphqlEndpoint, region, }) => {\n    const endpointInfo = {\n        region,\n        service: 'appsync',\n    };\n    const creds = (await fetchAuthSession()).credentials;\n    const request = {\n        url: `${appSyncGraphqlEndpoint}${canonicalUri}`,\n        data: payload,\n        method: 'POST',\n        headers: { ...AWS_APPSYNC_REALTIME_HEADERS },\n    };\n    const signedParams = signRequest({\n        headers: request.headers,\n        method: request.method,\n        url: new AmplifyUrl(request.url),\n        body: request.data,\n    }, {\n        credentials: creds,\n        signingRegion: endpointInfo.region,\n        signingService: endpointInfo.service,\n    });\n    return signedParams.headers;\n};\nconst customAuthHeader = async ({ host, additionalCustomHeaders, }) => {\n    /**\n     * If `additionalHeaders` was provided to the subscription as a function,\n     * the headers that are returned by that function will already have been\n     * provided before this function is called.\n     */\n    if (!additionalCustomHeaders?.Authorization) {\n        throw new Error('No auth token specified');\n    }\n    return {\n        Authorization: additionalCustomHeaders.Authorization,\n        host,\n    };\n};\nexport const awsRealTimeHeaderBasedAuth = async ({ apiKey, authenticationType, canonicalUri, appSyncGraphqlEndpoint, region, additionalCustomHeaders, payload, }) => {\n    const headerHandler = {\n        apiKey: awsRealTimeApiKeyHeader,\n        iam: awsRealTimeIAMHeader,\n        oidc: awsAuthTokenHeader,\n        userPool: awsAuthTokenHeader,\n        lambda: customAuthHeader,\n        none: customAuthHeader,\n    };\n    if (!authenticationType || !headerHandler[authenticationType]) {\n        logger.debug(`Authentication type ${authenticationType} not supported`);\n        return undefined;\n    }\n    else {\n        const handler = headerHandler[authenticationType];\n        const host = appSyncGraphqlEndpoint\n            ? new AmplifyUrl(appSyncGraphqlEndpoint).host\n            : undefined;\n        const resolvedApiKey = authenticationType === 'apiKey' ? apiKey : undefined;\n        logger.debug(`Authenticating with ${JSON.stringify(authenticationType)}`);\n        const result = await handler({\n            payload,\n            canonicalUri,\n            appSyncGraphqlEndpoint,\n            apiKey: resolvedApiKey,\n            region,\n            host,\n            additionalCustomHeaders,\n        });\n        return result;\n    }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/Providers/AWSWebSocketProvider/index.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/Providers/AWSWebSocketProvider/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { GraphQLError } from 'graphql';\nimport { ConsoleLogger, Hub } from '@aws-amplify/core';\nimport { NonRetryableError, amplifyUuid, base64Encoder, isNonRetryableError, jitteredExponentialRetry, } from '@aws-amplify/core/internals/utils';\nimport { CONTROL_MSG, ConnectionState, } from '../../types/PubSub';\nimport { AMPLIFY_SYMBOL, CONNECTION_INIT_TIMEOUT, CONNECTION_STATE_CHANGE, DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT, DEFAULT_KEEP_ALIVE_HEARTBEAT_TIMEOUT, MAX_DELAY_MS, MESSAGE_TYPES, NON_RETRYABLE_CODES, NON_RETRYABLE_ERROR_TYPES, SOCKET_STATUS, START_ACK_TIMEOUT, SUBSCRIPTION_STATUS, } from '../constants';\nimport { CONNECTION_CHANGE, ConnectionStateMonitor, } from '../../utils/ConnectionStateMonitor';\nimport { ReconnectEvent, ReconnectionMonitor, } from '../../utils/ReconnectionMonitor';\nimport { additionalHeadersFromOptions, queryParamsFromCustomHeaders, realtimeUrlWithQueryString, } from './appsyncUrl';\nimport { awsRealTimeHeaderBasedAuth } from './authHeaders';\nconst dispatchApiEvent = (payload) => {\n    Hub.dispatch('api', payload, 'PubSub', AMPLIFY_SYMBOL);\n};\nexport class AWSWebSocketProvider {\n    constructor(args) {\n        this.subscriptionObserverMap = new Map();\n        this.allowNoSubscriptions = false;\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n        this.keepAliveTimestamp = Date.now();\n        this.promiseArray = [];\n        this.connectionStateMonitor = new ConnectionStateMonitor();\n        this.reconnectionMonitor = new ReconnectionMonitor();\n        /**\n         * Open WebSocket connection & perform handshake\n         * Ref: https://docs.aws.amazon.com/appsync/latest/devguide/real-time-websocket-client.html#appsynclong-real-time-websocket-client-implementation-guide-for-graphql-subscriptions\n         *\n         * @param subprotocol -\n         */\n        this._establishConnection = async (awsRealTimeUrl, subprotocol) => {\n            this.logger.debug(`Establishing WebSocket connection to ${awsRealTimeUrl}`);\n            try {\n                await this._openConnection(awsRealTimeUrl, subprotocol);\n                await this._initiateHandshake();\n            }\n            catch (err) {\n                const { errorType, errorCode } = err;\n                if (NON_RETRYABLE_CODES.includes(errorCode) ||\n                    // Event API does not currently return `errorCode`. This may change in the future.\n                    // For now fall back to also checking known non-retryable error types\n                    NON_RETRYABLE_ERROR_TYPES.includes(errorType)) {\n                    throw new NonRetryableError(errorType);\n                }\n                else if (errorType) {\n                    throw new Error(errorType);\n                }\n                else {\n                    throw err;\n                }\n            }\n        };\n        this.logger = new ConsoleLogger(args.providerName);\n        this.wsProtocolName = args.wsProtocolName;\n        this.wsConnectUri = args.connectUri;\n        this.connectionStateMonitorSubscription =\n            this._startConnectionStateMonitoring();\n    }\n    /**\n     * Mark the socket closed and release all active listeners\n     */\n    close() {\n        // Mark the socket closed both in status and the connection monitor\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_FAILED);\n        // Turn off the subscription monitor Hub publishing\n        this.connectionStateMonitorSubscription.unsubscribe();\n        // Complete all reconnect observers\n        this.reconnectionMonitor.close();\n        return new Promise((resolve, reject) => {\n            if (this.awsRealTimeSocket) {\n                this.awsRealTimeSocket.onclose = (_) => {\n                    this._closeSocket();\n                    this.subscriptionObserverMap = new Map();\n                    this.awsRealTimeSocket = undefined;\n                    resolve();\n                };\n                this.awsRealTimeSocket.onerror = (err) => {\n                    reject(err);\n                };\n                this.awsRealTimeSocket.close();\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    subscribe(options, customUserAgentDetails) {\n        return new Observable(observer => {\n            if (!options?.appSyncGraphqlEndpoint) {\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`Subscribe only available for AWS AppSync endpoint`),\n                        },\n                    ],\n                });\n                observer.complete();\n                return;\n            }\n            let subscriptionStartInProgress = false;\n            const subscriptionId = amplifyUuid();\n            const startSubscription = () => {\n                if (!subscriptionStartInProgress) {\n                    subscriptionStartInProgress = true;\n                    this._startSubscriptionWithAWSAppSyncRealTime({\n                        options,\n                        observer,\n                        subscriptionId,\n                        customUserAgentDetails,\n                    })\n                        .catch(err => {\n                        this.logger.debug(`${CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR}: ${err}`);\n                        this._closeSocket();\n                    })\n                        .finally(() => {\n                        subscriptionStartInProgress = false;\n                    });\n                }\n            };\n            // Add an observable to the reconnection list to manage reconnection for this subscription\n            const reconnectSubscription = new Observable(reconnectSubscriptionObserver => {\n                this.reconnectionMonitor.addObserver(reconnectSubscriptionObserver);\n            }).subscribe(() => {\n                startSubscription();\n            });\n            startSubscription();\n            return async () => {\n                await this._cleanupSubscription(subscriptionId, reconnectSubscription);\n            };\n        });\n    }\n    async connect(options) {\n        if (this.socketStatus === SOCKET_STATUS.READY) {\n            return;\n        }\n        await this._connectWebSocket(options);\n    }\n    async publish(options, customUserAgentDetails) {\n        if (this.socketStatus !== SOCKET_STATUS.READY) {\n            throw new Error('Subscription has not been initialized');\n        }\n        return this._publishMessage(options, customUserAgentDetails);\n    }\n    async _connectWebSocket(options) {\n        const { apiKey, appSyncGraphqlEndpoint, authenticationType, region } = options;\n        const { additionalCustomHeaders } = await additionalHeadersFromOptions(options);\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.OPENING_CONNECTION);\n        await this._initializeWebSocketConnection({\n            apiKey,\n            appSyncGraphqlEndpoint,\n            authenticationType,\n            region,\n            additionalCustomHeaders,\n        });\n    }\n    async _publishMessage(options, customUserAgentDetails) {\n        const subscriptionId = amplifyUuid();\n        const { additionalCustomHeaders, libraryConfigHeaders } = await additionalHeadersFromOptions(options);\n        const serializedSubscriptionMessage = await this._prepareSubscriptionPayload({\n            options,\n            subscriptionId,\n            customUserAgentDetails,\n            additionalCustomHeaders,\n            libraryConfigHeaders,\n            publish: true,\n        });\n        return new Promise((resolve, reject) => {\n            if (this.awsRealTimeSocket) {\n                const publishListener = (event) => {\n                    const data = JSON.parse(event.data);\n                    if (data.id === subscriptionId && data.type === 'publish_success') {\n                        this.awsRealTimeSocket &&\n                            this.awsRealTimeSocket.removeEventListener('message', publishListener);\n                        cleanup();\n                        resolve();\n                    }\n                    if (data.errors && data.errors.length > 0) {\n                        const errorTypes = data.errors.map((error) => error.errorType);\n                        cleanup();\n                        reject(new Error(`Publish errors: ${errorTypes.join(', ')}`));\n                    }\n                };\n                const errorListener = (error) => {\n                    cleanup();\n                    reject(new Error(`WebSocket error: ${error}`));\n                };\n                const closeListener = () => {\n                    cleanup();\n                    reject(new Error('WebSocket is closed'));\n                };\n                const cleanup = () => {\n                    this.awsRealTimeSocket?.removeEventListener('message', publishListener);\n                    this.awsRealTimeSocket?.removeEventListener('error', errorListener);\n                    this.awsRealTimeSocket?.removeEventListener('close', closeListener);\n                };\n                this.awsRealTimeSocket.addEventListener('message', publishListener);\n                this.awsRealTimeSocket.addEventListener('error', errorListener);\n                this.awsRealTimeSocket.addEventListener('close', closeListener);\n                this.awsRealTimeSocket.send(serializedSubscriptionMessage);\n            }\n            else {\n                reject(new Error('WebSocket is not connected'));\n            }\n        });\n    }\n    async _cleanupSubscription(subscriptionId, reconnectSubscription) {\n        // Cleanup reconnection subscription\n        reconnectSubscription?.unsubscribe();\n        // Cleanup after unsubscribing or observer.complete was called after _startSubscriptionWithAWSAppSyncRealTime\n        try {\n            // Waiting that subscription has been connected before trying to unsubscribe\n            await this._waitForSubscriptionToBeConnected(subscriptionId);\n            const { subscriptionState } = this.subscriptionObserverMap.get(subscriptionId) || {};\n            if (!subscriptionState) {\n                // subscription already unsubscribed\n                return;\n            }\n            if (subscriptionState === SUBSCRIPTION_STATUS.CONNECTED) {\n                this._sendUnsubscriptionMessage(subscriptionId);\n            }\n            else {\n                throw new Error('Subscription never connected');\n            }\n        }\n        catch (err) {\n            this.logger.debug(`Error while unsubscribing ${err}`);\n        }\n        finally {\n            this._removeSubscriptionObserver(subscriptionId);\n        }\n    }\n    // Monitor the connection state and pass changes along to Hub\n    _startConnectionStateMonitoring() {\n        return this.connectionStateMonitor.connectionStateObservable.subscribe(connectionState => {\n            dispatchApiEvent({\n                event: CONNECTION_STATE_CHANGE,\n                data: {\n                    provider: this,\n                    connectionState,\n                },\n                message: `Connection state is ${connectionState}`,\n            });\n            this.connectionState = connectionState;\n            // Trigger START_RECONNECT when the connection is disrupted\n            if (connectionState === ConnectionState.ConnectionDisrupted) {\n                this.reconnectionMonitor.record(ReconnectEvent.START_RECONNECT);\n            }\n            // Trigger HALT_RECONNECT to halt reconnection attempts when the state is anything other than\n            // ConnectionDisrupted or Connecting\n            if ([\n                ConnectionState.Connected,\n                ConnectionState.ConnectedPendingDisconnect,\n                ConnectionState.ConnectedPendingKeepAlive,\n                ConnectionState.ConnectedPendingNetwork,\n                ConnectionState.ConnectionDisruptedPendingNetwork,\n                ConnectionState.Disconnected,\n            ].includes(connectionState)) {\n                this.reconnectionMonitor.record(ReconnectEvent.HALT_RECONNECT);\n            }\n        });\n    }\n    async _startSubscriptionWithAWSAppSyncRealTime({ options, observer, subscriptionId, customUserAgentDetails, }) {\n        const { query, variables } = options;\n        this.subscriptionObserverMap.set(subscriptionId, {\n            observer,\n            query: query ?? '',\n            variables: variables ?? {},\n            subscriptionState: SUBSCRIPTION_STATUS.PENDING,\n            startAckTimeoutId: undefined,\n        });\n        const { additionalCustomHeaders, libraryConfigHeaders } = await additionalHeadersFromOptions(options);\n        const serializedSubscriptionMessage = await this._prepareSubscriptionPayload({\n            options,\n            subscriptionId,\n            customUserAgentDetails,\n            additionalCustomHeaders,\n            libraryConfigHeaders,\n        });\n        try {\n            await this._connectWebSocket(options);\n        }\n        catch (err) {\n            this._logStartSubscriptionError(subscriptionId, observer, err);\n            return;\n        }\n        // Potential race condition can occur when unsubscribe is called during _initializeWebSocketConnection.\n        // E.g.unsubscribe gets invoked prior to finishing WebSocket handshake or START_ACK.\n        // Both subscriptionFailedCallback and subscriptionReadyCallback are used to synchronized this.\n        const { subscriptionFailedCallback, subscriptionReadyCallback } = this.subscriptionObserverMap.get(subscriptionId) ?? {};\n        // This must be done before sending the message in order to be listening immediately\n        this.subscriptionObserverMap.set(subscriptionId, {\n            observer,\n            subscriptionState: SUBSCRIPTION_STATUS.PENDING,\n            query: query ?? '',\n            variables: variables ?? {},\n            subscriptionReadyCallback,\n            subscriptionFailedCallback,\n            startAckTimeoutId: setTimeout(() => {\n                this._timeoutStartSubscriptionAck(subscriptionId);\n            }, START_ACK_TIMEOUT),\n        });\n        if (this.awsRealTimeSocket) {\n            this.awsRealTimeSocket.send(serializedSubscriptionMessage);\n        }\n    }\n    // Log logic for start subscription failures\n    _logStartSubscriptionError(subscriptionId, observer, err) {\n        this.logger.debug({ err });\n        const message = String(err.message ?? '');\n        // Resolving to give the state observer time to propogate the update\n        this._closeSocket();\n        // Capture the error only when the network didn't cause disruption\n        if (this.connectionState !== ConnectionState.ConnectionDisruptedPendingNetwork) {\n            // When the error is non-retriable, error out the observable\n            if (isNonRetryableError(err)) {\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`${CONTROL_MSG.CONNECTION_FAILED}: ${message}`),\n                        },\n                    ],\n                });\n            }\n            else {\n                this.logger.debug(`${CONTROL_MSG.CONNECTION_FAILED}: ${message}`);\n            }\n            const { subscriptionFailedCallback } = this.subscriptionObserverMap.get(subscriptionId) || {};\n            // Notify concurrent unsubscription\n            if (typeof subscriptionFailedCallback === 'function') {\n                subscriptionFailedCallback();\n            }\n        }\n    }\n    // Waiting that subscription has been connected before trying to unsubscribe\n    async _waitForSubscriptionToBeConnected(subscriptionId) {\n        const subscriptionObserver = this.subscriptionObserverMap.get(subscriptionId);\n        if (subscriptionObserver) {\n            const { subscriptionState } = subscriptionObserver;\n            // This in case unsubscribe is invoked before sending start subscription message\n            if (subscriptionState === SUBSCRIPTION_STATUS.PENDING) {\n                return new Promise((resolve, reject) => {\n                    const { observer, subscriptionState: observedSubscriptionState, variables, query, } = subscriptionObserver;\n                    this.subscriptionObserverMap.set(subscriptionId, {\n                        observer,\n                        subscriptionState: observedSubscriptionState,\n                        variables,\n                        query,\n                        subscriptionReadyCallback: resolve,\n                        subscriptionFailedCallback: reject,\n                    });\n                });\n            }\n        }\n    }\n    _sendUnsubscriptionMessage(subscriptionId) {\n        try {\n            if (this.awsRealTimeSocket &&\n                this.awsRealTimeSocket.readyState === WebSocket.OPEN &&\n                this.socketStatus === SOCKET_STATUS.READY) {\n                // Preparing unsubscribe message to stop receiving messages for that subscription\n                const unsubscribeMessage = this._unsubscribeMessage(subscriptionId);\n                const stringToAWSRealTime = JSON.stringify(unsubscribeMessage);\n                this.awsRealTimeSocket.send(stringToAWSRealTime);\n            }\n        }\n        catch (err) {\n            // If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do\n            this.logger.debug({ err });\n        }\n    }\n    _removeSubscriptionObserver(subscriptionId) {\n        this.subscriptionObserverMap.delete(subscriptionId);\n        // Verifying 1000ms after removing subscription in case there are new subscription unmount/mount\n        if (!this.allowNoSubscriptions) {\n            setTimeout(this._closeSocketIfRequired.bind(this), 1000);\n        }\n    }\n    _closeSocketIfRequired() {\n        if (this.subscriptionObserverMap.size > 0) {\n            // Active subscriptions on the WebSocket\n            return;\n        }\n        if (!this.awsRealTimeSocket) {\n            this.socketStatus = SOCKET_STATUS.CLOSED;\n            return;\n        }\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSING_CONNECTION);\n        if (this.awsRealTimeSocket.bufferedAmount > 0) {\n            // Still data on the WebSocket\n            setTimeout(this._closeSocketIfRequired.bind(this), 1000);\n        }\n        else {\n            this.logger.debug('closing WebSocket...');\n            const tempSocket = this.awsRealTimeSocket;\n            // Cleaning callbacks to avoid race condition, socket still exists\n            tempSocket.onclose = null;\n            tempSocket.onerror = null;\n            tempSocket.close(1000);\n            this.awsRealTimeSocket = undefined;\n            this.socketStatus = SOCKET_STATUS.CLOSED;\n            this._closeSocket();\n        }\n    }\n    maintainKeepAlive() {\n        this.keepAliveTimestamp = Date.now();\n    }\n    keepAliveHeartbeat(connectionTimeoutMs) {\n        const currentTime = Date.now();\n        // Check for missed KA message\n        if (currentTime - this.keepAliveTimestamp >\n            DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT) {\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.KEEP_ALIVE_MISSED);\n        }\n        else {\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.KEEP_ALIVE);\n        }\n        // Recognize we are disconnected if we haven't seen messages in the keep alive timeout period\n        if (currentTime - this.keepAliveTimestamp > connectionTimeoutMs) {\n            this._errorDisconnect(CONTROL_MSG.TIMEOUT_DISCONNECT);\n        }\n    }\n    _handleIncomingSubscriptionMessage(message) {\n        if (typeof message.data !== 'string') {\n            return;\n        }\n        const [isData, data] = this._handleSubscriptionData(message);\n        if (isData) {\n            this.maintainKeepAlive();\n            return;\n        }\n        const { type, id, payload } = data;\n        const { observer = null, query = '', variables = {}, startAckTimeoutId, subscriptionReadyCallback, subscriptionFailedCallback, } = this.subscriptionObserverMap.get(id) || {};\n        if (type === MESSAGE_TYPES.GQL_START_ACK ||\n            type === MESSAGE_TYPES.EVENT_SUBSCRIBE_ACK) {\n            this.logger.debug(`subscription ready for ${JSON.stringify({ query, variables })}`);\n            if (typeof subscriptionReadyCallback === 'function') {\n                subscriptionReadyCallback();\n            }\n            if (startAckTimeoutId)\n                clearTimeout(startAckTimeoutId);\n            dispatchApiEvent({\n                event: CONTROL_MSG.SUBSCRIPTION_ACK,\n                data: { query, variables },\n                message: 'Connection established for subscription',\n            });\n            const subscriptionState = SUBSCRIPTION_STATUS.CONNECTED;\n            if (observer) {\n                this.subscriptionObserverMap.set(id, {\n                    observer,\n                    query,\n                    variables,\n                    startAckTimeoutId: undefined,\n                    subscriptionState,\n                    subscriptionReadyCallback,\n                    subscriptionFailedCallback,\n                });\n            }\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_ESTABLISHED);\n            return;\n        }\n        if (type === MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {\n            this.maintainKeepAlive();\n            return;\n        }\n        if (type === MESSAGE_TYPES.GQL_ERROR) {\n            const subscriptionState = SUBSCRIPTION_STATUS.FAILED;\n            if (observer) {\n                this.subscriptionObserverMap.set(id, {\n                    observer,\n                    query,\n                    variables,\n                    startAckTimeoutId,\n                    subscriptionReadyCallback,\n                    subscriptionFailedCallback,\n                    subscriptionState,\n                });\n                this.logger.debug(`${CONTROL_MSG.CONNECTION_FAILED}: ${JSON.stringify(payload ?? data)}`);\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`${CONTROL_MSG.CONNECTION_FAILED}: ${JSON.stringify(payload ?? data)}`),\n                        },\n                    ],\n                });\n                if (startAckTimeoutId)\n                    clearTimeout(startAckTimeoutId);\n                if (typeof subscriptionFailedCallback === 'function') {\n                    subscriptionFailedCallback();\n                }\n            }\n        }\n    }\n    _errorDisconnect(msg) {\n        this.logger.debug(`Disconnect error: ${msg}`);\n        if (this.awsRealTimeSocket) {\n            this._closeSocket();\n            this.awsRealTimeSocket.close();\n        }\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n    }\n    _closeSocket() {\n        if (this.keepAliveHeartbeatIntervalId) {\n            clearInterval(this.keepAliveHeartbeatIntervalId);\n            this.keepAliveHeartbeatIntervalId = undefined;\n        }\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n    }\n    _timeoutStartSubscriptionAck(subscriptionId) {\n        const subscriptionObserver = this.subscriptionObserverMap.get(subscriptionId);\n        if (subscriptionObserver) {\n            const { observer, query, variables } = subscriptionObserver;\n            if (!observer) {\n                return;\n            }\n            this.subscriptionObserverMap.set(subscriptionId, {\n                observer,\n                query,\n                variables,\n                subscriptionState: SUBSCRIPTION_STATUS.FAILED,\n            });\n            this._closeSocket();\n            this.logger.debug('timeoutStartSubscription', JSON.stringify({ query, variables }));\n        }\n    }\n    _initializeWebSocketConnection({ appSyncGraphqlEndpoint, authenticationType, apiKey, region, additionalCustomHeaders, }) {\n        if (this.socketStatus === SOCKET_STATUS.READY) {\n            return;\n        }\n        // TODO(Eslint): refactor to now use async function as the promise executor\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            this.promiseArray.push({ res: resolve, rej: reject });\n            if (this.socketStatus === SOCKET_STATUS.CLOSED) {\n                try {\n                    this.socketStatus = SOCKET_STATUS.CONNECTING;\n                    // Empty payload on connect\n                    const payloadString = '{}';\n                    const authHeader = await awsRealTimeHeaderBasedAuth({\n                        authenticationType,\n                        payload: payloadString,\n                        canonicalUri: this.wsConnectUri,\n                        apiKey,\n                        appSyncGraphqlEndpoint,\n                        region,\n                        additionalCustomHeaders,\n                    });\n                    const headerString = authHeader ? JSON.stringify(authHeader) : '';\n                    // base64url-encoded string\n                    const encodedHeader = base64Encoder.convert(headerString, {\n                        urlSafe: true,\n                        skipPadding: true,\n                    });\n                    const authTokenSubprotocol = `header-${encodedHeader}`;\n                    const queryParams = queryParamsFromCustomHeaders(additionalCustomHeaders);\n                    const awsRealTimeUrl = realtimeUrlWithQueryString(appSyncGraphqlEndpoint, queryParams);\n                    await this._establishRetryableConnection(awsRealTimeUrl, authTokenSubprotocol);\n                    this.promiseArray.forEach(({ res }) => {\n                        this.logger.debug('Notifying connection successful');\n                        res();\n                    });\n                    this.socketStatus = SOCKET_STATUS.READY;\n                    this.promiseArray = [];\n                }\n                catch (err) {\n                    this.logger.debug('Connection exited with', err);\n                    this.promiseArray.forEach(({ rej }) => {\n                        rej(err);\n                    });\n                    this.promiseArray = [];\n                    if (this.awsRealTimeSocket &&\n                        this.awsRealTimeSocket.readyState === WebSocket.OPEN) {\n                        this.awsRealTimeSocket.close(3001);\n                    }\n                    this.awsRealTimeSocket = undefined;\n                    this.socketStatus = SOCKET_STATUS.CLOSED;\n                }\n            }\n        });\n    }\n    async _establishRetryableConnection(awsRealTimeUrl, subprotocol) {\n        this.logger.debug(`Establishing retryable connection`);\n        await jitteredExponentialRetry(this._establishConnection.bind(this), [awsRealTimeUrl, subprotocol], MAX_DELAY_MS);\n    }\n    async _openConnection(awsRealTimeUrl, subprotocol) {\n        return new Promise((resolve, reject) => {\n            const newSocket = this._getNewWebSocket(awsRealTimeUrl, [\n                this.wsProtocolName,\n                subprotocol,\n            ]);\n            newSocket.onerror = () => {\n                this.logger.debug(`WebSocket connection error`);\n            };\n            newSocket.onclose = () => {\n                this._closeSocket();\n                reject(new Error('Connection handshake error'));\n            };\n            newSocket.onopen = () => {\n                this.awsRealTimeSocket = newSocket;\n                resolve();\n            };\n        });\n    }\n    _getNewWebSocket(url, protocol) {\n        return new WebSocket(url, protocol);\n    }\n    async _initiateHandshake() {\n        return new Promise((resolve, reject) => {\n            if (!this.awsRealTimeSocket) {\n                reject(new Error('awsRealTimeSocket undefined'));\n                return;\n            }\n            let ackOk = false;\n            this.awsRealTimeSocket.onerror = error => {\n                this.logger.debug(`WebSocket error ${JSON.stringify(error)}`);\n            };\n            this.awsRealTimeSocket.onclose = event => {\n                this.logger.debug(`WebSocket closed ${event.reason}`);\n                this._closeSocket();\n                reject(new Error(JSON.stringify(event)));\n            };\n            this.awsRealTimeSocket.onmessage = (message) => {\n                if (typeof message.data !== 'string') {\n                    return;\n                }\n                this.logger.debug(`subscription message from AWS AppSyncRealTime: ${message.data} `);\n                const data = JSON.parse(message.data);\n                const { type } = data;\n                const connectionTimeoutMs = this._extractConnectionTimeout(data);\n                if (type === MESSAGE_TYPES.GQL_CONNECTION_ACK) {\n                    ackOk = true;\n                    this._registerWebsocketHandlers(connectionTimeoutMs);\n                    resolve('Connected to AWS AppSyncRealTime');\n                    return;\n                }\n                if (type === MESSAGE_TYPES.GQL_CONNECTION_ERROR) {\n                    const { errorType, errorCode } = this._extractErrorCodeAndType(data);\n                    // TODO(Eslint): refactor to reject an Error object instead of a plain object\n                    // eslint-disable-next-line prefer-promise-reject-errors\n                    reject({ errorType, errorCode });\n                }\n            };\n            const gqlInit = {\n                type: MESSAGE_TYPES.GQL_CONNECTION_INIT,\n            };\n            this.awsRealTimeSocket.send(JSON.stringify(gqlInit));\n            const checkAckOk = (targetAckOk) => {\n                if (!targetAckOk) {\n                    this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_FAILED);\n                    reject(new Error(`Connection timeout: ack from AWSAppSyncRealTime was not received after ${CONNECTION_INIT_TIMEOUT} ms`));\n                }\n            };\n            setTimeout(() => {\n                checkAckOk(ackOk);\n            }, CONNECTION_INIT_TIMEOUT);\n        });\n    }\n    _registerWebsocketHandlers(connectionTimeoutMs) {\n        if (!this.awsRealTimeSocket) {\n            return;\n        }\n        // Set up a keep alive heartbeat for this connection\n        this.keepAliveHeartbeatIntervalId = setInterval(() => {\n            this.keepAliveHeartbeat(connectionTimeoutMs);\n        }, DEFAULT_KEEP_ALIVE_HEARTBEAT_TIMEOUT);\n        this.awsRealTimeSocket.onmessage =\n            this._handleIncomingSubscriptionMessage.bind(this);\n        this.awsRealTimeSocket.onerror = err => {\n            this.logger.debug(err);\n            this._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n        };\n        this.awsRealTimeSocket.onclose = event => {\n            this.logger.debug(`WebSocket closed ${event.reason}`);\n            this._closeSocket();\n            this._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n        };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1450, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/Providers/AWSAppSyncRealTimeProvider/index.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/Providers/AWSAppSyncRealTimeProvider/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { USER_AGENT_HEADER, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { DEFAULT_KEEP_ALIVE_TIMEOUT, MESSAGE_TYPES } from '../constants';\nimport { AWSWebSocketProvider } from '../AWSWebSocketProvider';\nimport { awsRealTimeHeaderBasedAuth } from '../AWSWebSocketProvider/authHeaders';\nconst PROVIDER_NAME = 'AWSAppSyncRealTimeProvider';\nconst WS_PROTOCOL_NAME = 'graphql-ws';\nconst CONNECT_URI = '/connect';\nexport class AWSAppSyncRealTimeProvider extends AWSWebSocketProvider {\n    constructor() {\n        super({\n            providerName: PROVIDER_NAME,\n            wsProtocolName: WS_PROTOCOL_NAME,\n            connectUri: CONNECT_URI,\n        });\n    }\n    getProviderName() {\n        return PROVIDER_NAME;\n    }\n    subscribe(options, customUserAgentDetails) {\n        return super.subscribe(options, customUserAgentDetails);\n    }\n    async _prepareSubscriptionPayload({ options, subscriptionId, customUserAgentDetails, additionalCustomHeaders, libraryConfigHeaders, }) {\n        const { appSyncGraphqlEndpoint, authenticationType, query, variables, apiKey, region, } = options;\n        const data = {\n            query,\n            variables,\n        };\n        const serializedData = JSON.stringify(data);\n        const headers = {\n            ...(await awsRealTimeHeaderBasedAuth({\n                apiKey,\n                appSyncGraphqlEndpoint,\n                authenticationType,\n                payload: serializedData,\n                canonicalUri: '',\n                region,\n                additionalCustomHeaders,\n            })),\n            ...libraryConfigHeaders,\n            ...additionalCustomHeaders,\n            [USER_AGENT_HEADER]: getAmplifyUserAgent(customUserAgentDetails),\n        };\n        const subscriptionMessage = {\n            id: subscriptionId,\n            payload: {\n                data: serializedData,\n                extensions: {\n                    authorization: {\n                        ...headers,\n                    },\n                },\n            },\n            type: MESSAGE_TYPES.GQL_START,\n        };\n        const serializedSubscriptionMessage = JSON.stringify(subscriptionMessage);\n        return serializedSubscriptionMessage;\n    }\n    _handleSubscriptionData(message) {\n        this.logger.debug(`subscription message from AWS AppSync RealTime: ${message.data}`);\n        const { id = '', payload, type } = JSON.parse(String(message.data));\n        const { observer = null, query = '', variables = {}, } = this.subscriptionObserverMap.get(id) || {};\n        this.logger.debug({ id, observer, query, variables });\n        if (type === MESSAGE_TYPES.DATA && payload && payload.data) {\n            if (observer) {\n                observer.next(payload);\n            }\n            else {\n                this.logger.debug(`observer not found for id: ${id}`);\n            }\n            return [true, { id, type, payload }];\n        }\n        return [false, { id, type, payload }];\n    }\n    _unsubscribeMessage(subscriptionId) {\n        return {\n            id: subscriptionId,\n            type: MESSAGE_TYPES.GQL_STOP,\n        };\n    }\n    _extractConnectionTimeout(data) {\n        const { payload: { connectionTimeoutMs = DEFAULT_KEEP_ALIVE_TIMEOUT } = {}, } = data;\n        return connectionTimeoutMs;\n    }\n    _extractErrorCodeAndType(data) {\n        const { payload: { errors: [{ errorType = '', errorCode = 0 } = {}] = [] } = {}, } = data;\n        return { errorCode, errorType };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/GraphQLApiError.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/GraphQLApiError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\n/**\n * @internal\n */\nexport class GraphQLApiError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = GraphQLApiError;\n        Object.setPrototypeOf(this, GraphQLApiError.prototype);\n    }\n}\n"],"names":[],"mappings":";;;;;;AAAA,qEAAA;AACA,sCAAA;AAEA;;CAEA,GACO,MAAM,eAAe,SAAS,2OAAY,CAAC;IAC9C,WAAW,CAAC,MAAM,CAAE;QAChB,KAAK,CAAC,MAAM,CAAC;QACrB,qEAAA;QACA,mFAAA;QACQ,IAAI,CAAC,WAAW,GAAG,eAAe;QAClC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC;IAC1D;AACJ","debugId":null}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/validation.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/validation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var APIValidationErrorCode;\n(function (APIValidationErrorCode) {\n    APIValidationErrorCode[\"NoAuthSession\"] = \"NoAuthSession\";\n    APIValidationErrorCode[\"NoRegion\"] = \"NoRegion\";\n    APIValidationErrorCode[\"NoCustomEndpoint\"] = \"NoCustomEndpoint\";\n})(APIValidationErrorCode || (APIValidationErrorCode = {}));\nexport const validationErrorMap = {\n    [APIValidationErrorCode.NoAuthSession]: {\n        message: 'Auth session should not be empty.',\n    },\n    // TODO: re-enable when working in all test environments:\n    // [APIValidationErrorCode.NoEndpoint]: {\n    // \tmessage: 'Missing endpoint',\n    // },\n    [APIValidationErrorCode.NoRegion]: {\n        message: 'Missing region.',\n    },\n    [APIValidationErrorCode.NoCustomEndpoint]: {\n        message: 'Custom endpoint region is present without custom endpoint.',\n    },\n};\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;;;AACU,IAAC;AACX,CAAC,SAAU,sBAAsB,EAAE;IAC/B,sBAAsB,CAAC,eAAe,CAAC,GAAG,eAAe;IACzD,sBAAsB,CAAC,UAAU,CAAC,GAAG,UAAU;IAC/C,sBAAsB,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;AACnE,CAAC,EAAE,sBAAsB,IAAA,CAAK,sBAAsB,GAAG,CAAA,CAAE,CAAC,CAAC;AAC/C,MAAC,kBAAkB,GAAG;IAC9B,CAAC,sBAAsB,CAAC,aAAa,CAAA,EAAG;QACpC,OAAO,EAAE,mCAAmC;IACpD,CAAK;IACL,yDAAA;IACA,yCAAA;IACA,gCAAA;IACA,KAAA;IACI,CAAC,sBAAsB,CAAC,QAAQ,CAAA,EAAG;QAC/B,OAAO,EAAE,iBAAiB;IAClC,CAAK;IACD,CAAC,sBAAsB,CAAC,gBAAgB,CAAA,EAAG;QACvC,OAAO,EAAE,4DAA4D;IAC7E,CAAK;AACL","debugId":null}},
    {"offset": {"line": 1637, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/assertValidationError.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/assertValidationError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLApiError } from './GraphQLApiError';\nimport { validationErrorMap } from './validation';\n/**\n * @internal\n */\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new GraphQLApiError({ name, message, recoverySuggestion });\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGA;;CAEA,GACO,SAAS,qBAAqB,CAAC,SAAS,EAAE,IAAI,EAAE;IACnD,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,kQAAkB,CAAC,IAAI,CAAC;IAChE,IAAI,CAAC,SAAS,EAAE;QACZ,MAAM,IAAI,oQAAe,CAAC;YAAE,IAAI;YAAE,OAAO;YAAE,kBAAkB;QAAA,CAAE,CAAC;IACpE;AACJ","debugId":null}},
    {"offset": {"line": 1665, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/resolveConfig.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/resolveConfig.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { APIValidationErrorCode, assertValidationError } from './errors';\nconst logger = new ConsoleLogger('GraphQLAPI resolveConfig');\n/**\n * @internal\n */\nexport const resolveConfig = (amplify) => {\n    const config = amplify.getConfig();\n    if (!config.API?.GraphQL) {\n        logger.warn('The API configuration is missing. This is likely due to Amplify.configure() not being called prior to generateClient().');\n    }\n    const { apiKey, customEndpoint, customEndpointRegion, defaultAuthMode, endpoint, region, } = config.API?.GraphQL ?? {};\n    // TODO: re-enable when working in all test environments:\n    // assertValidationError(!!endpoint, APIValidationErrorCode.NoEndpoint);\n    assertValidationError(!(!customEndpoint && customEndpointRegion), APIValidationErrorCode.NoCustomEndpoint);\n    return {\n        apiKey,\n        customEndpoint,\n        customEndpointRegion,\n        defaultAuthMode,\n        endpoint,\n        region,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGA,MAAM,MAAM,GAAG,IAAI,6OAAa,CAAC,0BAA0B,CAAC;AAC5D;;CAEA,GACY,MAAC,aAAa,GAAG,CAAC,OAAO,KAAK;QAEjC,MAAM,OAGkF,MAAM;IAJnG,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,EAAE;IAClC,IAAI,wBAAQ,GAAG,4DAAE,OAAO,GAAE;QACtB,MAAM,CAAC,IAAI,CAAC,yHAAyH,CAAC;IAC1I;;IACA,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,oBAAoB,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAG,iDAAU,GAAG,8DAAE,OAAO,qEAAI,CAAA,CAAE;IAC1H,yDAAA;IACA,wEAAA;QACI,gRAAqB,EAAC,CAAA,CAAE,CAAC,cAAc,IAAI,oBAAoB,CAAC,EAAE,sQAAsB,CAAC,gBAAgB,CAAC;IAC1G,OAAO;QACH,MAAM;QACN,cAAc;QACd,oBAAoB;QACpB,eAAe;QACf,QAAQ;QACR,MAAM;IACd,CAAK;AACL","debugId":null}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/resolveLibraryOptions.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/resolveLibraryOptions.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const resolveLibraryOptions = (amplify) => {\n    const headers = amplify.libraryOptions?.API?.GraphQL?.headers;\n    const withCredentials = amplify.libraryOptions?.API?.GraphQL?.withCredentials;\n    return { headers, withCredentials };\n};\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA;;CAEA;;;;AACY,MAAC,qBAAqB,GAAG,CAAC,OAAO,KAAK;QAC9B,OAAO;IAAvB,MAAM,OAAO,sCAAW,cAAc,mHAAE,GAAG,mIAAE,OAAO,4GAAE,OAAO;IAC7D,MAAM,eAAe,uCAAW,cAAc,sHAAE,GAAG,sIAAE,OAAO,yEAApC,OAAO,8BAA+B,eAAe;IAC7E,OAAO;QAAE,OAAO;QAAE,eAAe;IAAA,CAAE;AACvC","debugId":null}},
    {"offset": {"line": 1731, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/repackageAuthError.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/repackageAuthError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks to see if the given response or subscription message contains an\n * Unauthorized error. If it does, it changes the error message to include instructions\n * for the app developer.\n */\nexport function repackageUnauthorizedError(content) {\n    if (content.errors && Array.isArray(content.errors)) {\n        content.errors.forEach(e => {\n            if (isUnauthorizedError(e)) {\n                e.message = 'Unauthorized';\n                e.recoverySuggestion =\n                    `If you're calling an Amplify-generated API, make sure ` +\n                        `to set the \"authMode\" in generateClient({ authMode: '...' }) to the backend authorization ` +\n                        `rule's auth provider ('apiKey', 'userPool', 'iam', 'oidc', 'lambda')`;\n            }\n        });\n    }\n    return content;\n}\nfunction isUnauthorizedError(error) {\n    // Error pattern corresponding to appsync calls\n    if (error?.originalError?.name?.startsWith('UnauthorizedException')) {\n        return true;\n    }\n    // Error pattern corresponding to appsync subscriptions\n    if (error.message?.startsWith('Connection failed:') &&\n        error.message?.includes('Permission denied')) {\n        return true;\n    }\n    return false;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA;;;;CAIA;;;;AACO,SAAS,0BAA0B,CAAC,OAAO,EAAE;IAChD,IAAI,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACjD,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;YACxB,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;gBACxB,CAAC,CAAC,OAAO,GAAG,cAAc;gBAC1B,CAAC,CAAC,kBAAkB,GAChB,AAAC,sDAAsD,CAAC,IACnD,0FAA0F,CAAC,MAC3F,oEAAoE,CAAC;YAClF;QACJ,CAAC,CAAC;IACN;IACA,OAAO,OAAO;AAClB;AACA,SAAS,mBAAmB,CAAC,KAAK,EAAE;QAE5B,KAAK,4DAKL,KAAK;IANb,+CAAA;IACI,gFAAW,aAAa,2GAAE,IAAI,wFAAE,UAAU,CAAC,uBAAuB,CAAC,EAAE;QACjE,OAAO,IAAI;IACf;IACJ,uDAAA;IACI,6BAAU,OAAO,mDAAb,KAAK,UAAU,UAAU,CAAC,oBAAoB,CAAC,+BACzC,OAAO,oEAAE,QAAQ,CAAC,mBAAmB,CAAC,GAAE;QAC9C,OAAO,IAAI;IACf;IACA,OAAO,KAAK;AAChB","debugId":null}},
    {"offset": {"line": 1770, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/constants.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/constants.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLAuthError } from '../../types';\nexport const NO_API_KEY = {\n    name: 'NoApiKey',\n    // ideal: No API key configured.\n    message: GraphQLAuthError.NO_API_KEY,\n    recoverySuggestion: 'The API request was made with `authMode: \"apiKey\"` but no API Key was passed into `Amplify.configure()`. Review if your API key is passed into the `Amplify.configure()` function.',\n};\nexport const NO_VALID_CREDENTIALS = {\n    name: 'NoCredentials',\n    // ideal: No auth credentials available.\n    message: GraphQLAuthError.NO_CREDENTIALS,\n    recoverySuggestion: `The API request was made with \\`authMode: \"iam\"\\` but no authentication credentials are available.\n\nIf you intended to make a request using an authenticated role, review if your user is signed in before making the request.\n\nIf you intend to make a request using an unauthenticated role or also known as \"guest access\", verify if \"Auth.Cognito.allowGuestAccess\" is set to \"true\" in the \\`Amplify.configure()\\` function.`,\n};\nexport const NO_VALID_AUTH_TOKEN = {\n    name: 'NoValidAuthTokens',\n    // ideal: No valid JWT auth token provided to make the API request..\n    message: GraphQLAuthError.NO_FEDERATED_JWT,\n    recoverySuggestion: 'If you intended to make an authenticated API request, review if the current user is signed in.',\n};\nexport const NO_SIGNED_IN_USER = {\n    name: 'NoSignedUser',\n    // ideal: Couldn't retrieve authentication credentials to make the API request.\n    message: GraphQLAuthError.NO_CURRENT_USER,\n    recoverySuggestion: 'Review the underlying exception field for more details. If you intended to make an authenticated API request, review if the current user is signed in.',\n};\nexport const NO_AUTH_TOKEN_HEADER = {\n    name: 'NoAuthorizationHeader',\n    // ideal: Authorization header not specified.\n    message: GraphQLAuthError.NO_AUTH_TOKEN,\n    recoverySuggestion: 'The API request was made with `authMode: \"lambda\"` but no `authToken` is set. Review if a valid authToken is passed into the request options or in the `Amplify.configure()` function.',\n};\nexport const NO_ENDPOINT = {\n    name: 'NoEndpoint',\n    message: 'No GraphQL endpoint configured in `Amplify.configure()`.',\n    recoverySuggestion: 'Review if the GraphQL API endpoint is set in the `Amplify.configure()` function.',\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,UAAU,GAAG;IACtB,IAAI,EAAE,UAAU;IACpB,gCAAA;IACI,OAAO,EAAE,iQAAgB,CAAC,UAAU;IACpC,kBAAkB,EAAE,oLAAoL;AAC5M;AACY,MAAC,oBAAoB,GAAG;IAChC,IAAI,EAAE,eAAe;IACzB,wCAAA;IACI,OAAO,EAAE,iQAAgB,CAAC,cAAc;IACxC,kBAAkB,EAAE,AAAC;AAKzB;AACY,MAAC,mBAAmB,GAAG;IAC/B,IAAI,EAAE,mBAAmB;IAC7B,oEAAA;IACI,OAAO,EAAE,iQAAgB,CAAC,gBAAgB;IAC1C,kBAAkB,EAAE,gGAAgG;AACxH;AACY,MAAC,iBAAiB,GAAG;IAC7B,IAAI,EAAE,cAAc;IACxB,+EAAA;IACI,OAAO,EAAE,iQAAgB,CAAC,eAAe;IACzC,kBAAkB,EAAE,wJAAwJ;AAChL;AACY,MAAC,oBAAoB,GAAG;IAChC,IAAI,EAAE,uBAAuB;IACjC,6CAAA;IACI,OAAO,EAAE,iQAAgB,CAAC,aAAa;IACvC,kBAAkB,EAAE,wLAAwL;AAChN;AACY,MAAC,WAAW,GAAG;IACvB,IAAI,EAAE,YAAY;IAClB,OAAO,EAAE,0DAA0D;IACnE,kBAAkB,EAAE,kFAAkF;AAC1G","debugId":null}},
    {"offset": {"line": 1829, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/utils/errors/createGraphQLResultWithError.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/utils/errors/createGraphQLResultWithError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLError } from 'graphql';\nexport const createGraphQLResultWithError = (error) => {\n    return {\n        data: {},\n        errors: [new GraphQLError(error.message, null, null, null, null, error)],\n    };\n};\n"],"names":[],"mappings":";;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,4BAA4B,GAAG,CAAC,KAAK,KAAK;IACnD,OAAO;QACH,IAAI,EAAE,CAAA,CAAE;QACR,MAAM,EAAE;YAAC,IAAI,0MAAY,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;SAAC;IAChF,CAAK;AACL","debugId":null}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/utils/runtimeTypeGuards/isGraphQLResponseWithErrors.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isGraphQLResponseWithErrors.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isGraphQLResponseWithErrors(response) {\n    if (!response) {\n        return false;\n    }\n    const r = response;\n    return Array.isArray(r.errors) && r.errors.length > 0;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACO,SAAS,2BAA2B,CAAC,QAAQ,EAAE;IAClD,IAAI,CAAC,QAAQ,EAAE;QACX,OAAO,KAAK;IAChB;IACA,MAAM,CAAC,GAAG,QAAQ;IAClB,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;AACzD","debugId":null}},
    {"offset": {"line": 1870, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/graphqlAuth.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/graphqlAuth.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLApiError } from '../utils/errors';\nimport { NO_API_KEY, NO_AUTH_TOKEN_HEADER, NO_SIGNED_IN_USER, NO_VALID_AUTH_TOKEN, NO_VALID_CREDENTIALS, } from '../utils/errors/constants';\nexport async function headerBasedAuth(amplify, authMode, apiKey, additionalHeaders = {}) {\n    let headers = {};\n    switch (authMode) {\n        case 'apiKey':\n            if (!apiKey) {\n                throw new GraphQLApiError(NO_API_KEY);\n            }\n            headers = {\n                'X-Api-Key': apiKey,\n            };\n            break;\n        case 'iam': {\n            const session = await amplify.Auth.fetchAuthSession();\n            if (session.credentials === undefined) {\n                throw new GraphQLApiError(NO_VALID_CREDENTIALS);\n            }\n            break;\n        }\n        case 'oidc':\n        case 'userPool': {\n            let token;\n            try {\n                token = (await amplify.Auth.fetchAuthSession()).tokens?.accessToken.toString();\n            }\n            catch (e) {\n                // fetchAuthSession failed\n                throw new GraphQLApiError({\n                    ...NO_SIGNED_IN_USER,\n                    underlyingError: e,\n                });\n            }\n            // `fetchAuthSession()` succeeded but didn't return `tokens`.\n            // This may happen when unauthenticated access is enabled and there is\n            // no user signed in.\n            if (!token) {\n                throw new GraphQLApiError(NO_VALID_AUTH_TOKEN);\n            }\n            headers = {\n                Authorization: token,\n            };\n            break;\n        }\n        case 'lambda':\n            if (typeof additionalHeaders === 'object' &&\n                !additionalHeaders.Authorization) {\n                throw new GraphQLApiError(NO_AUTH_TOKEN_HEADER);\n            }\n            headers = {\n                Authorization: additionalHeaders.Authorization,\n            };\n            break;\n        case 'none':\n            break;\n        default:\n            break;\n    }\n    return headers;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGO,eAAe,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM;4BAAE,iBAAiB,gDAAG,CAAA,CAAE,EAAE;IACrF,IAAI,OAAO,GAAG,CAAA,CAAE;IAChB,OAAQ,QAAQ;QACZ,KAAK,QAAQ;YACT,IAAI,CAAC,MAAM,EAAE;gBACT,MAAM,IAAI,oQAAe,CAAC,yPAAU,CAAC;YACzC;YACA,OAAO,GAAG;gBACN,WAAW,EAAE,MAAM;YACnC,CAAa;YACD;QACJ,KAAK,KAAK;YAAE;gBACR,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACrD,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;oBACnC,MAAM,IAAI,oQAAe,CAAC,mQAAoB,CAAC;gBACnD;gBACA;YACJ;QACA,KAAK,MAAM;QACX,KAAK,UAAU;YAAE;gBACb,IAAI,KAAK;gBACT,IAAI;;oBACA,KAAK,eAAI,MAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,4CAA9C,QAAgD,WAAW,CAAC,QAAQ,EAAE;gBAClF,EACA,OAAO,CAAC,EAAE;oBACtB,0BAAA;oBACgB,MAAM,IAAI,oQAAe,CAAC;wBACtB,GAAG,gQAAiB;wBACpB,eAAe,EAAE,CAAC;oBACtC,CAAiB,CAAC;gBACN;gBACZ,6DAAA;gBACA,sEAAA;gBACA,qBAAA;gBACY,IAAI,CAAC,KAAK,EAAE;oBACR,MAAM,IAAI,oQAAe,CAAC,kQAAmB,CAAC;gBAClD;gBACA,OAAO,GAAG;oBACN,aAAa,EAAE,KAAK;gBACpC,CAAa;gBACD;YACJ;QACA,KAAK,QAAQ;YACT,IAAI,OAAO,iBAAiB,KAAK,QAAQ,IACrC,CAAC,iBAAiB,CAAC,aAAa,EAAE;gBAClC,MAAM,IAAI,oQAAe,CAAC,mQAAoB,CAAC;YACnD;YACA,OAAO,GAAG;gBACN,aAAa,EAAE,iBAAiB,CAAC,aAAa;YAC9D,CAAa;YACD;IAKZ;IACI,OAAO,OAAO;AAClB","debugId":null}},
    {"offset": {"line": 1944, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/InternalGraphQLAPI.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/InternalGraphQLAPI.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parse, print, } from 'graphql';\nimport { catchError } from 'rxjs';\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { isCancelError as isCancelErrorREST } from '@aws-amplify/api-rest';\nimport { cancel as cancelREST, post, updateRequestToBeCancellable, } from '@aws-amplify/api-rest/internals';\nimport { AWSAppSyncRealTimeProvider } from '../Providers/AWSAppSyncRealTimeProvider';\nimport { resolveConfig, resolveLibraryOptions } from '../utils';\nimport { repackageUnauthorizedError } from '../utils/errors/repackageAuthError';\nimport { NO_ENDPOINT } from '../utils/errors/constants';\nimport { GraphQLApiError, createGraphQLResultWithError } from '../utils/errors';\nimport { isGraphQLResponseWithErrors } from './utils/runtimeTypeGuards/isGraphQLResponseWithErrors';\nimport { headerBasedAuth } from './graphqlAuth';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst isAmplifyInstance = (amplify) => {\n    return typeof amplify !== 'function';\n};\n/**\n * Export Cloud Logic APIs\n */\nexport class InternalGraphQLAPIClass {\n    constructor() {\n        /**\n         * @private\n         */\n        this.appSyncRealTime = new Map();\n        this._api = {\n            post,\n            cancelREST,\n            isCancelErrorREST,\n            updateRequestToBeCancellable,\n        };\n    }\n    getModuleName() {\n        return 'InternalGraphQLAPI';\n    }\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    getGraphqlOperationType(operation) {\n        const doc = parse(operation);\n        const definitions = doc.definitions;\n        const [{ operation: operationType }] = definitions;\n        return operationType;\n    }\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `libraryConfigHeaders` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    graphql(amplify, { query: paramQuery, variables = {}, authMode, authToken, endpoint, apiKey, }, additionalHeaders, customUserAgentDetails) {\n        const query = typeof paramQuery === 'string'\n            ? parse(paramQuery)\n            : parse(print(paramQuery));\n        const [operationDef = {}] = query.definitions.filter(def => def.kind === 'OperationDefinition');\n        const { operation: operationType } = operationDef;\n        const headers = additionalHeaders || {};\n        switch (operationType) {\n            case 'query':\n            case 'mutation': {\n                const abortController = new AbortController();\n                let responsePromise;\n                if (isAmplifyInstance(amplify)) {\n                    responsePromise = this._graphql(amplify, { query, variables, authMode, apiKey, endpoint }, headers, abortController, customUserAgentDetails, authToken);\n                }\n                else {\n                    // NOTE: this wrapper function must be await-able so the Amplify server context manager can\n                    // destroy the context only after it completes\n                    const wrapper = async (amplifyInstance) => {\n                        const result = await this._graphql(amplifyInstance, { query, variables, authMode, apiKey, endpoint }, headers, abortController, customUserAgentDetails, authToken);\n                        return result;\n                    };\n                    responsePromise = amplify(wrapper);\n                }\n                this._api.updateRequestToBeCancellable(responsePromise, abortController);\n                return responsePromise;\n            }\n            case 'subscription':\n                return this._graphqlSubscribe(amplify, { query, variables, authMode, apiKey, endpoint }, headers, customUserAgentDetails, authToken);\n            default:\n                throw new Error(`invalid operation type: ${operationType}`);\n        }\n    }\n    async _graphql(amplify, { query, variables, authMode: authModeOverride, endpoint: endpointOverride, apiKey: apiKeyOverride, }, additionalHeaders = {}, abortController, customUserAgentDetails, authToken) {\n        const { apiKey, region, endpoint: appSyncGraphqlEndpoint, customEndpoint, customEndpointRegion, defaultAuthMode, } = resolveConfig(amplify);\n        const initialAuthMode = authModeOverride || defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `customHeaders` here are from the Amplify configuration options,\n         * and are for non-AppSync endpoints only. These are *not* the same as\n         * `additionalHeaders`, which are custom headers that are either 1)\n         * included when configuring the API client or 2) passed along with\n         * individual requests.\n         */\n        const { headers: customHeaders, withCredentials } = resolveLibraryOptions(amplify);\n        /**\n         * Client or request-specific custom headers that may or may not be\n         * returned by a function:\n         */\n        let additionalCustomHeaders;\n        if (typeof additionalHeaders === 'function') {\n            const requestOptions = {\n                method: 'POST',\n                url: new AmplifyUrl(endpointOverride || customEndpoint || appSyncGraphqlEndpoint || '').toString(),\n                queryString: print(query),\n            };\n            additionalCustomHeaders = await additionalHeaders(requestOptions);\n        }\n        else {\n            additionalCustomHeaders = additionalHeaders;\n        }\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            additionalCustomHeaders = {\n                ...additionalCustomHeaders,\n                Authorization: authToken,\n            };\n        }\n        const authHeaders = await headerBasedAuth(amplify, authMode, apiKeyOverride ?? apiKey, additionalCustomHeaders);\n        const headers = {\n            ...(!customEndpoint && authHeaders),\n            /**\n             * Custom endpoint headers.\n             * If there is both a custom endpoint and custom region present, we get the headers.\n             * If there is a custom endpoint but no region, we return an empty object.\n             * If neither are present, we return an empty object.\n             */\n            ...((customEndpoint && (customEndpointRegion ? authHeaders : {})) || {}),\n            // Custom headers included in Amplify configuration options:\n            ...(customHeaders &&\n                (await customHeaders({\n                    query: print(query),\n                    variables,\n                }))),\n            // Custom headers from individual requests or API client configuration:\n            ...additionalCustomHeaders,\n            // User agent headers:\n            ...(!customEndpoint && {\n                [USER_AGENT_HEADER]: getAmplifyUserAgent(customUserAgentDetails),\n            }),\n        };\n        const body = {\n            query: print(query),\n            variables: variables || null,\n        };\n        let signingServiceInfo;\n        /**\n         * We do not send the signing service info to the REST API under the\n         * following conditions (i.e. it will not sign the request):\n         *   - there is a custom endpoint but no region\n         *   - the auth mode is `none`, or `apiKey`\n         *   - the auth mode is a type other than the types listed below\n         */\n        if ((customEndpoint && !customEndpointRegion) ||\n            (authMode !== 'oidc' &&\n                authMode !== 'userPool' &&\n                authMode !== 'iam' &&\n                authMode !== 'lambda')) {\n            signingServiceInfo = undefined;\n        }\n        else {\n            signingServiceInfo = {\n                service: !customEndpointRegion ? 'appsync' : 'execute-api',\n                region: !customEndpointRegion ? region : customEndpointRegion,\n            };\n        }\n        const endpoint = endpointOverride || customEndpoint || appSyncGraphqlEndpoint;\n        if (!endpoint) {\n            throw createGraphQLResultWithError(new GraphQLApiError(NO_ENDPOINT));\n        }\n        let response;\n        try {\n            // \t// // See the inline doc of the REST `post()` API for possible errors to be thrown.\n            // \t// // As these errors are catastrophic they should be caught and handled by GraphQL\n            // \t// // API consumers.\n            const { body: responseBody } = await this._api.post(amplify, {\n                url: new AmplifyUrl(endpoint),\n                options: {\n                    headers,\n                    body,\n                    signingServiceInfo,\n                    withCredentials,\n                },\n                abortController,\n            });\n            response = await responseBody.json();\n        }\n        catch (error) {\n            if (this.isCancelError(error)) {\n                throw error;\n            }\n            response = createGraphQLResultWithError(error);\n        }\n        if (isGraphQLResponseWithErrors(response)) {\n            throw repackageUnauthorizedError(response);\n        }\n        return response;\n    }\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    isCancelError(error) {\n        return this._api.isCancelErrorREST(error);\n    }\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @returns - A boolean indicating if the request was cancelled\n     */\n    cancel(request, message) {\n        return this._api.cancelREST(request, message);\n    }\n    _graphqlSubscribe(amplify, { query, variables, authMode: authModeOverride, apiKey: apiKeyOverride, endpoint, }, additionalHeaders = {}, customUserAgentDetails, authToken) {\n        const config = resolveConfig(amplify);\n        const initialAuthMode = authModeOverride || config?.defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `libraryConfigHeaders` are from the Amplify configuration options,\n         * and will not be overwritten by other custom headers. These are *not*\n         * the same as `additionalHeaders`, which are custom headers that are\n         * either 1)included when configuring the API client or 2) passed along\n         * with individual requests.\n         */\n        const { headers: libraryConfigHeaders } = resolveLibraryOptions(amplify);\n        const appSyncGraphqlEndpoint = endpoint ?? config?.endpoint;\n        // TODO: This could probably be an exception. But, lots of tests rely on\n        // attempting to connect to nowhere. So, I'm treating as the opposite of\n        // a Chesterton's fence for now. (A fence I shouldn't build, because I don't\n        // know why somethings depends on its absence!)\n        const memoKey = appSyncGraphqlEndpoint ?? 'none';\n        const realtimeProvider = this.appSyncRealTime.get(memoKey) ?? new AWSAppSyncRealTimeProvider();\n        this.appSyncRealTime.set(memoKey, realtimeProvider);\n        return realtimeProvider\n            .subscribe({\n            query: print(query),\n            variables,\n            appSyncGraphqlEndpoint,\n            region: config?.region,\n            authenticationType: authMode,\n            apiKey: apiKeyOverride ?? config?.apiKey,\n            additionalHeaders,\n            authToken,\n            libraryConfigHeaders,\n        }, customUserAgentDetails)\n            .pipe(catchError(e => {\n            if (e.errors) {\n                throw repackageUnauthorizedError(e);\n            }\n            throw e;\n        }));\n    }\n}\nexport const InternalGraphQLAPI = new InternalGraphQLAPIClass();\n"],"names":["cancelREST","isCancelErrorREST"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2239, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/GraphQLAPI.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/GraphQLAPI.ts"],"sourcesContent":["import { ApiAction, Category, } from '@aws-amplify/core/internals/utils';\nimport { INTERNAL_USER_AGENT_OVERRIDE, } from '@aws-amplify/data-schema/runtime';\nimport { InternalGraphQLAPIClass } from './internals/InternalGraphQLAPI';\nfunction isGraphQLOptionsWithOverride(options) {\n    return INTERNAL_USER_AGENT_OVERRIDE in options;\n}\nexport const graphqlOperation = (query, variables = {}, authToken) => ({\n    query,\n    variables,\n    authToken,\n});\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass extends InternalGraphQLAPIClass {\n    getModuleName() {\n        return 'GraphQLAPI';\n    }\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `libraryConfigHeaders` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    graphql(amplify, options, additionalHeaders) {\n        const userAgentDetails = {\n            category: Category.API,\n            action: ApiAction.GraphQl,\n        };\n        if (isGraphQLOptionsWithOverride(options)) {\n            const { [INTERNAL_USER_AGENT_OVERRIDE]: internalUserAgentOverride, ...cleanOptions } = options;\n            return super.graphql(amplify, cleanOptions, additionalHeaders, {\n                ...userAgentDetails,\n                ...internalUserAgentOverride,\n            });\n        }\n        return super.graphql(amplify, options, additionalHeaders, {\n            ...userAgentDetails,\n        });\n    }\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param error - Any error\n     * @returns A boolean indicating if the error was from an api request cancellation\n     */\n    isCancelError(error) {\n        return super.isCancelError(error);\n    }\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @returns A boolean indicating if the request was cancelled\n     */\n    cancel(request, message) {\n        return super.cancel(request, message);\n    }\n}\nexport const GraphQLAPI = new GraphQLAPIClass();\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,SAAS,4BAA4B,CAAC,OAAO,EAAE;IAC3C,OAAO,sSAA4B,IAAI,OAAO;AAClD;AACY,MAAC,gBAAgB,GAAG,SAAC,KAAK;QAAE,SAAS,oEAAG,CAAA,CAAE,EAAE,SAAS;WAAM;QACnE,KAAK;QACL,SAAS;QACT,SAAS;IACb,CAAC;;AACD;;CAEA,GACO,MAAM,eAAe,SAAS,yQAAuB,CAAC;IACzD,aAAa,GAAG;QACZ,OAAO,YAAY;IACvB;IACJ;;;;;;KAMA,GACI,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE;QACzC,MAAM,gBAAgB,GAAG;YACrB,QAAQ,EAAE,kOAAQ,CAAC,GAAG;YACtB,MAAM,EAAE,mOAAS,CAAC,OAAO;QACrC,CAAS;QACD,IAAI,4BAA4B,CAAC,OAAO,CAAC,EAAE;YACvC,MAAM,EAAE,CAAC,sSAA4B,CAAA,EAAG,yBAAyB,EAAE,GAAG,YAAY,EAAE,GAAG,OAAO;YAC9F,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE;gBAC3D,GAAG,gBAAgB;gBACnB,GAAG,yBAAyB;YAC5C,CAAa,CAAC;QACN;QACA,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE;YACtD,GAAG,gBAAgB;QAC/B,CAAS,CAAC;IACN;IACJ;;;;KAIA,GACI,aAAa,CAAC,KAAK,EAAE;QACjB,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;IACrC;IACJ;;;;KAIA,GACI,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;QACrB,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;IACzC;AACJ;AACY,MAAC,UAAU,GAAG,IAAI,eAAe","debugId":null}},
    {"offset": {"line": 2315, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/v6.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/v6.ts"],"sourcesContent":["import { GraphQLAPI } from '../GraphQLAPI';\nimport { getInternals, } from '../types';\n/**\n * Invokes graphql operations against a graphql service, providing correct input and\n * output types if Amplify-generated graphql from a recent version of the CLI/codegen\n * are used *or* correct typing is provided via the type argument.\n *\n * Amplify-generated \"branded\" graphql queries will look similar to this:\n *\n * ```ts\n *                               //\n *                               // |-- branding\n *                               // v\n * export const getModel = `...` as GeneratedQuery<\n * \tGetModelQueryVariables,\n * \tGetModelQuery\n * >;\n * ```\n *\n * If this branding is not in your generated graphql, update to a newer version of\n * CLI/codegen and regenerate your graphql using `amplify codegen`.\n *\n * ## Using Amplify-generated graphql\n *\n * ```ts\n * import * as queries from './graphql/queries';\n *\n * //\n * //    |-- correctly typed graphql response containing a Widget\n * //    v\n * const queryResult = await graphql({\n * \tquery: queries.getWidget,\n * \tvariables: {\n * \t\tid: \"abc\", // <-- type hinted/enforced\n * \t},\n * });\n *\n * //\n * //    |-- a correctly typed Widget\n * //    v\n * const fetchedWidget = queryResult.data?.getWidget!;\n * ```\n *\n * ## Custom input + result types\n *\n * To provide input types (`variables`) and result types:\n *\n * ```ts\n * type GetById_NameOnly = {\n * \tvariables: {\n * \t\tid: string\n * \t},\n * \tresult: Promise<{\n * \t\tdata: { getWidget: { name: string } }\n * \t}>\n * }\n *\n * //\n * //    |-- type is GetById_NameOnly[\"result\"]\n * //    v\n * const result = graphql<GetById_NameOnly>({\n * \tquery: \"...\",\n * \tvariables: { id: \"abc\" }  // <-- type of GetById_NameOnly[\"variables\"]\n * });\n * ```\n *\n * ## Custom result type only\n *\n * To specify result types only, use a type that is *not* in the `{variables, result}` shape:\n *\n * ```ts\n * type MyResultType = Promise<{\n * \tdata: {\n * \t\tgetWidget: { name: string }\n * \t}\n * }>\n *\n * //\n * //    |-- type is MyResultType\n * //    v\n * const result = graphql<MyResultType>({query: \"...\"});\n * ```\n *\n * @param options\n * @param additionalHeaders\n */\nexport function graphql(options, additionalHeaders) {\n    // inject client-level auth\n    const internals = getInternals(this);\n    /**\n     * The custom `endpoint` specific to the client\n     */\n    const clientEndpoint = internals.endpoint;\n    /**\n     * The `authMode` specific to the client.\n     */\n    const clientAuthMode = internals.authMode;\n    /**\n     * The `apiKey` specific to the client.\n     */\n    const clientApiKey = internals.apiKey;\n    /**\n     * The most specific `authMode` wins. Setting an `endpoint` value without also\n     * setting an `authMode` value is invalid. This helps to prevent customers apps\n     * from unexpectedly sending auth details to endpoints the auth details do not\n     * belong to.\n     *\n     * This is especially pronounced for `apiKey`. When both an `endpoint` *and*\n     * `authMode: 'apiKey'` are provided, an explicit `apiKey` override is required\n     * to prevent inadvertent sending of an API's `apiKey` to an endpoint is does\n     * not belong to.\n     */\n    options.authMode = options.authMode || clientAuthMode;\n    options.apiKey = options.apiKey ?? clientApiKey;\n    options.authToken = options.authToken || internals.authToken;\n    if (clientEndpoint && options.authMode === 'apiKey' && !options.apiKey) {\n        throw new Error(\"graphql() requires an explicit `apiKey` for a custom `endpoint` when `authMode = 'apiKey'`.\");\n    }\n    const headers = additionalHeaders || internals.headers;\n    /**\n     * The correctness of these typings depends on correct string branding or overrides.\n     * Neither of these can actually be validated at runtime. Hence, we don't perform\n     * any validation or type-guarding here.\n     */\n    const result = GraphQLAPI.graphql(\n    // TODO: move V6Client back into this package?\n    internals.amplify, {\n        ...options,\n        endpoint: clientEndpoint,\n    }, headers);\n    return result;\n}\n/**\n * Cancels an inflight request. Only applicable for graphql queries and mutations\n * @param {any} request - request to cancel\n * @returns - A boolean indicating if the request was cancelled\n */\nexport function cancel(promise, message) {\n    return GraphQLAPI.cancel(promise, message);\n}\n/**\n * Checks to see if an error thrown is from an api request cancellation\n * @param {any} error - Any error\n * @returns - A boolean indicating if the error was from an api request cancellation\n */\nexport function isCancelError(error) {\n    return GraphQLAPI.isCancelError(error);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmFA,GACO,SAAS,OAAO,CAAC,OAAO,EAAE,iBAAiB,EAAE;IACpD,2BAAA;IACI,MAAM,SAAS,OAAG,6PAAY,EAAC,IAAI,CAAC;IACxC;;KAEA,GACI,MAAM,cAAc,GAAG,SAAS,CAAC,QAAQ;IAC7C;;KAEA,GACI,MAAM,cAAc,GAAG,SAAS,CAAC,QAAQ;IAC7C;;KAEA,GACI,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM;IACzC;;;;;;;;;;KAUA,GACI,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,cAAc;;IACrD,OAAO,CAAC,MAAM,8BAAW,MAAM,2CAAd,OAAO,WAAW,YAAY;IAC/C,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS;IAC5D,IAAI,cAAc,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACpE,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC;IAClH;IACA,MAAM,OAAO,GAAG,iBAAiB,IAAI,SAAS,CAAC,OAAO;IAC1D;;;;KAIA,GACI,MAAM,MAAM,GAAG,uOAAU,CAAC,OAAO,CACrC,8CAAA;IACI,SAAS,CAAC,OAAO,EAAE;QACf,GAAG,OAAO;QACV,QAAQ,EAAE,cAAc;IAChC,CAAK,EAAE,OAAO,CAAC;IACX,OAAO,MAAM;AACjB;AACA;;;;CAIA,GACO,SAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;IACrC,OAAO,uOAAU,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;AAC9C;AACA;;;;CAIA,GACO,SAAS,aAAa,CAAC,KAAK,EAAE;IACjC,OAAO,uOAAU,CAAC,aAAa,CAAC,KAAK,CAAC;AAC1C","debugId":null}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/api-graphql/dist/esm/internals/generateClient.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/api-graphql/src/internals/generateClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { addSchemaToClient, } from '@aws-amplify/data-schema/runtime';\nimport { __amplify, __apiKey, __authMode, __authToken, __endpoint, __headers, getInternals, } from '../types';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig';\nimport { cancel, graphql, isCancelError } from './v6';\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nexport function generateClient(params) {\n    const client = {\n        [__amplify]: params.amplify,\n        [__authMode]: params.authMode,\n        [__authToken]: params.authToken,\n        [__apiKey]: 'apiKey' in params ? params.apiKey : undefined,\n        [__endpoint]: 'endpoint' in params ? params.endpoint : undefined,\n        [__headers]: params.headers,\n        graphql,\n        cancel,\n        isCancelError,\n        models: emptyProperty,\n        enums: emptyProperty,\n        queries: emptyProperty,\n        mutations: emptyProperty,\n        subscriptions: emptyProperty,\n    };\n    const apiGraphqlConfig = params.amplify.getConfig().API?.GraphQL;\n    if (client[__endpoint]) {\n        if (!client[__authMode]) {\n            throw new Error('generateClient() requires an explicit `authMode` when `endpoint` is provided.');\n        }\n        if (client[__authMode] === 'apiKey' && !client[__apiKey]) {\n            throw new Error(\"generateClient() requires an explicit `apiKey` when `endpoint` is provided and `authMode = 'apiKey'`.\");\n        }\n    }\n    if (!client[__endpoint]) {\n        if (isApiGraphQLConfig(apiGraphqlConfig)) {\n            addSchemaToClient(client, apiGraphqlConfig, getInternals);\n        }\n        else {\n            // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n            //\n            // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n            // different source files, script bundlers may randomly arrange their orders in the production\n            // bundle.\n            //\n            // With the current implementation, the `client.models` instance created by `generateClient()`\n            // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n            // provider configuration.\n            //\n            // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n            // configuration.\n            generateModelsPropertyOnAmplifyConfigure(client);\n        }\n    }\n    return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = (clientRef) => {\n    Hub.listen('core', coreEvent => {\n        if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n            return;\n        }\n        const apiGraphQLConfig = coreEvent.payload.data.API?.GraphQL;\n        if (isApiGraphQLConfig(apiGraphQLConfig)) {\n            addSchemaToClient(clientRef, apiGraphQLConfig, getInternals);\n        }\n    });\n};\nconst emptyProperty = new Proxy({}, {\n    get() {\n        throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n    },\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAOA;;;;;;;;CAQA,GACO,SAAS,cAAc,CAAC,MAAM,EAAE;QAiBV,MAAM;IAhB/B,MAAM,MAAM,GAAG;QACX,CAAC,0PAAS,CAAA,EAAG,MAAM,CAAC,OAAO;QAC3B,CAAC,2PAAU,CAAA,EAAG,MAAM,CAAC,QAAQ;QAC7B,CAAC,4PAAW,CAAA,EAAG,MAAM,CAAC,SAAS;QAC/B,CAAC,yPAAQ,CAAA,EAAG,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,SAAS;QAC1D,CAAC,2PAAU,CAAA,EAAG,UAAU,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS;QAChE,CAAC,0PAAS,CAAA,EAAG,MAAM,CAAC,OAAO;iBAC3B,yOAAO;gBACP,wOAAM;uBACN,+OAAa;QACb,MAAM,EAAE,aAAa;QACrB,KAAK,EAAE,aAAa;QACpB,OAAO,EAAE,aAAa;QACtB,SAAS,EAAE,aAAa;QACxB,aAAa,EAAE,aAAa;IACpC,CAAK;IACD,MAAM,gBAAgB,2CAAU,OAAO,CAAC,SAAS,EAAE,CAAC,GAAG,gGAAE,OAAO;IAChE,IAAI,MAAM,CAAC,2PAAU,CAAC,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,2PAAU,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,+EAA+E,CAAC;QACpG;QACA,IAAI,MAAM,CAAC,2PAAU,CAAC,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,yPAAQ,CAAC,EAAE;YACtD,MAAM,IAAI,KAAK,CAAC,uGAAuG,CAAC;QAC5H;IACJ;IACA,IAAI,CAAC,MAAM,CAAC,2PAAU,CAAC,EAAE;QACrB,QAAI,0SAAkB,EAAC,gBAAgB,CAAC,EAAE;gBACtC,gQAAiB,EAAC,MAAM,EAAE,gBAAgB,EAAE,6PAAY,CAAC;QAC7D,OACK;YACb,qGAAA;YACA,EAAA;YACA,wFAAA;YACA,8FAAA;YACA,UAAA;YACA,EAAA;YACA,8FAAA;YACA,2FAAA;YACA,0BAAA;YACA,EAAA;YACA,+FAAA;YACA,iBAAA;YACY,wCAAwC,CAAC,MAAM,CAAC;QACpD;IACJ;IACA,OAAO,MAAM;AACjB;AACA,MAAM,wCAAwC,GAAG,CAAC,SAAS,KAAK;IAC5D,wNAAG,CAAC,MAAM,CAAC,MAAM,GAAE,SAAS,IAAI;YAIH,SAAS;QAHlC,IAAI,KAAC,kUAAkC,EAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACxD;QACJ;QACA,MAAM,gBAAgB,4CAAa,OAAO,CAAC,IAAI,CAAC,GAAG,4FAAE,OAAO;QAC5D,QAAI,0SAAkB,EAAC,gBAAgB,CAAC,EAAE;gBACtC,gQAAiB,EAAC,SAAS,EAAE,gBAAgB,EAAE,6PAAY,CAAC;QAChE;IACJ,CAAC,CAAC;AACN,CAAC;AACD,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,CAAA,CAAE,EAAE;IAChC,GAAG,GAAG;QACF,MAAM,IAAI,KAAK,CAAC,iOAAiO,CAAC;IACtP,CAAC;AACL,CAAC,CAAC","debugId":null}}]
}