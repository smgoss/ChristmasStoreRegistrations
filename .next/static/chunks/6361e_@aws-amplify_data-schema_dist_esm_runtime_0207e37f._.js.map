{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/utils/resolveOwnerFields.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/utils/resolveOwnerFields.ts"],"sourcesContent":["/**\n * Given an introspection schema model, returns all owner fields.\n *\n * @param model Model from an introspection schema\n * @returns List of owner field names\n */\nexport function resolveOwnerFields(model) {\n    const ownerFields = new Set();\n    for (const attr of model.attributes || []) {\n        if (isAuthAttribute(attr)) {\n            for (const rule of attr.properties.rules) {\n                if (rule.allow === 'owner') {\n                    ownerFields.add(rule.ownerField || 'owner');\n                }\n                else if (rule.allow === 'groups' && rule.groupsField !== undefined) {\n                    // only valid for dynamic group(s)\n                    // static group auth will have an array of predefined groups in the attribute, groups: string[]\n                    // but `groupsField` will be undefined\n                    ownerFields.add(rule.groupsField);\n                }\n            }\n        }\n    }\n    return Array.from(ownerFields);\n}\n/**\n * Type guard that identifies an auth attribute with an attached rules list that\n * specifies an `allow` attribute at a minimum.\n *\n * @param attribute Any object. Ideally a model introspection schema model attribute\n * @returns True if given object is an auth attribute\n */\nfunction isAuthAttribute(attribute) {\n    if (attribute?.type === 'auth') {\n        if (typeof attribute?.properties === 'object') {\n            if (Array.isArray(attribute?.properties?.rules)) {\n                return (attribute?.properties?.rules).every((rule) => !!rule.allow);\n            }\n        }\n    }\n    return false;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKA;;;;AACO,SAAS,kBAAkB,CAAC,KAAK,EAAE;IACtC,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE;IAC7B,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,UAAU,IAAI,EAAE,CAAE;QACvC,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;YACvB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAE;gBACtC,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,EAAE;oBACxB,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,OAAO,CAAC;gBAC/D,OACqB,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;oBACpF,kCAAA;oBACA,+FAAA;oBACA,sCAAA;oBACoB,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;gBACrD;YACA;QACA;IACA;IACI,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;AAClC;AACA;;;;;;CAMA,GACA,SAAS,eAAe,CAAC,SAAS,EAAE;IAChC,2DAAI,SAAS,CAAE,IAAI,MAAK,MAAM,EAAE;QAC5B,IAAI,8DAAO,SAAS,CAAE,UAAU,MAAK,QAAQ,EAAE;;YAC3C,IAAI,KAAK,CAAC,OAAO,0FAAY,UAAU,0DAArB,SAAS,aAAc,KAAK,CAAC,EAAE;;gBAC7C,8DAAO,oCAAY,UAAU,2DAArB,SAAS,cAAc,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,GAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YACnF;QACA;IACA;IACI,OAAO,KAAK;AAChB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/utils/stringTransformation.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/utils/stringTransformation.ts"],"sourcesContent":["/**\n * @param s string to capitalize\n * @returns capitalized string\n */\nexport function capitalize(s) {\n    return `${s[0].toUpperCase()}${s.slice(1)}`;\n}\n"],"names":[],"mappings":"AAAA;;;CAGA;;;;AACO,SAAS,UAAU,CAAC,CAAC,EAAE;IAC1B,OAAO,AAAC,UAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAa,CAAC,MAAZ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/utils/selfAwareAsync.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/utils/selfAwareAsync.ts"],"sourcesContent":["/**\n * Executes an `async` resolver function, providing the `Promise`-to-be-returned as the\n * first argument to the resolver so that the resolver can refer to the `Promise` that\n * external callers will see.\n *\n * ```ts\n * const outer = selfAwareAsync(async inner => {\n *  console.log(outer === inner); // true\n * });\n * ```\n *\n * This utility exists to reduce boilerplate in cases where promise resolving code needs\n * to track or register its \"own\" `Promise` *as seen by the caller* in some way. E.g.,\n * when mapping `Promise` chains for `client.cancel()`.\n *\n * @param resolver\n * @returns\n */\nexport function selfAwareAsync(resolver) {\n    let resolve;\n    let reject;\n    const resultPromise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    resolver(resultPromise)\n        .then((result) => {\n        resolve(result);\n    })\n        .catch((error) => {\n        reject(error);\n    });\n    return resultPromise;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBA;;;;AACO,SAAS,cAAc,CAAC,QAAQ,EAAE;IACrC,IAAI,OAAO;IACX,IAAI,MAAM;IACV,MAAM,aAAa,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;QAC5C,OAAO,GAAG,GAAG;QACb,MAAM,GAAG,GAAG;IACpB,CAAK,CAAC;IACF,QAAQ,CAAC,aAAa,EACjB,IAAI,CAAC,CAAC,MAAM,KAAK;QAClB,OAAO,CAAC,MAAM,CAAC;IACvB,CAAK,EACI,KAAK,CAAC,CAAC,KAAK,KAAK;QAClB,MAAM,CAAC,KAAK,CAAC;IACrB,CAAK,CAAC;IACF,OAAO,aAAa;AACxB","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/cancellation.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/cancellation.ts"],"sourcesContent":["/**\n * A map of cancellable promise \"extensions\".\n *\n * Each entry value must either be a directly `cancel()`-able promise, or must\n * refer to another entry.\n *\n * When cancellation of a promise is requested, cancel\n * will check to see if the promise exists in the map. If it does, it pulls\n * the value and repeats the check. If not, it will perform the underlying\n * cancel operation.\n */\nconst promiseMap = new WeakMap();\nexport function extendCancellability(existingCancellablePromise, newPromiseToRegister) {\n    promiseMap.set(newPromiseToRegister, existingCancellablePromise);\n    return existingCancellablePromise.finally(() => {\n        promiseMap.delete(newPromiseToRegister);\n    });\n}\n/**\n * Wraps the existing `cancel()` method with logic to iteratively search for\n * the corresponding base level promise, if needed, that the core graphql client\n * knows how to cancel.\n *\n * @param client\n */\nexport function upgradeClientCancellation(client) {\n    const innerCancel = client.cancel.bind(client);\n    client.cancel = function (promise, message) {\n        const visited = new Set();\n        let targetPromise = promise;\n        while (targetPromise && promiseMap.has(targetPromise)) {\n            if (visited.has(targetPromise))\n                throw new Error('A cycle was detected in the modeled graphql cancellation chain. This is a bug. Please report it!');\n            visited.add(targetPromise);\n            targetPromise = promiseMap.get(targetPromise);\n        }\n        // call `innerCancel` with `targetPromise!` to defer to existing implementation\n        // on how to handle `null | undefined` or otherwise \"non-cancellable\" objects.\n        return innerCancel(targetPromise, message);\n    };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUA;;;;;;AACA,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE;AACzB,SAAS,oBAAoB,CAAC,0BAA0B,EAAE,oBAAoB,EAAE;IACnF,UAAU,CAAC,GAAG,CAAC,oBAAoB,EAAE,0BAA0B,CAAC;IAChE,OAAO,0BAA0B,CAAC,OAAO,CAAC,MAAM;QAC5C,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC;IAC/C,CAAK,CAAC;AACN;AACA;;;;;;CAMA,GACO,SAAS,yBAAyB,CAAC,MAAM,EAAE;IAC9C,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IAC9C,MAAM,CAAC,MAAM,GAAG,SAAU,OAAO,EAAE,OAAO,EAAE;QACxC,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE;QACzB,IAAI,aAAa,GAAG,OAAO;QAC3B,MAAO,aAAa,IAAI,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAE;YACnD,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAC1B,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC;YACvH,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;QACzD;QACA,+EAAA;QACA,8EAAA;QACQ,OAAO,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC;IAClD,CAAK;AACL","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/APIClient.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/APIClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\nimport { resolveOwnerFields, capitalize, selfAwareAsync } from '../utils';\nimport { extendCancellability } from './cancellation';\nconst connectionType = {\n    HAS_ONE: 'HAS_ONE',\n    HAS_MANY: 'HAS_MANY',\n    BELONGS_TO: 'BELONGS_TO',\n};\n// When generating an SK's KeyConditionInput name, string-like types map to String\nconst skGraphQlFieldTypeMap = {\n    ID: 'ID',\n    String: 'String',\n    AWSDate: 'String',\n    AWSTime: 'String',\n    AWSDateTime: 'String',\n    AWSTimestamp: 'Int',\n    AWSEmail: 'String',\n    AWSPhone: 'String',\n    AWSURL: 'String',\n    AWSIPAddress: 'String',\n    AWSJSON: 'String',\n    Boolean: 'Boolean',\n    Int: 'Int',\n    Float: 'Float',\n};\n// move to util\nconst resolvedSkName = (sk) => {\n    if (sk.length === 1) {\n        return sk[0];\n    }\n    else {\n        return sk.reduce((acc, curr, idx) => {\n            if (idx === 0) {\n                return curr;\n            }\n            else {\n                return acc + capitalize(curr);\n            }\n        }, '');\n    }\n};\n/**\n * Crawls a model tree, starting with a given **individual** model instance record, looking\n * for related hasMany children to extract from their `items` containers.\n *\n * E.g., if we have a record like this:\n *\n * ```js\n * {\n *   id: 'some-id',\n *   children: {\n *     items: [\n *       { name: 'a' }\n *       { name: 'b' }\n *       { name: 'c' }\n *     ]\n *   }\n * }\n * ```\n *\n * And if `children` refers to *an array of another model* (as opposed to a custom type),\n * the `items` will be extracted. We do this because `items` is just the mechanism for nesting\n * child records -- we don't want customers to have to dig the items out in application code.\n * Ultimately, we return this \"flattened\" structure:\n *\n * ```js\n * {\n *   id: 'some-id',\n *   children: [\n *     { name: 'a' }\n *     { name: 'b' }\n *     { name: 'c' }\n *   ]\n * }\n * ```\n *\n * Notably, an identical record could be the result of a nested custom type that contains an\n * `items` property. This will *not* be flattened, because in that case the `items` property is\n * actually part of the customer's schema. Similarly if a model contains an explicit `items` field.\n *\n * @param modelIntrospection Top-level model introspection schema.\n * @param modelName The name of the model. Can be `undefined`. E.g., for customOperation return types.\n * @param modelRecord The individual \"model instance record\" to normalize.\n */\nexport const flattenItems = (modelIntrospection, modelName, modelRecord) => {\n    if (!modelRecord)\n        return null;\n    const mapped = {};\n    for (const [fieldName, value] of Object.entries(modelRecord)) {\n        const fieldDef = modelName\n            ? modelIntrospection.models[modelName]?.fields[fieldName]\n            : undefined;\n        const dvPair = { fieldDef, value };\n        if (isRelatedModelItemsArrayPair(dvPair)) {\n            mapped[fieldName] = dvPair.value.items.map((itemValue) => flattenItems(modelIntrospection, dvPair.fieldDef.type.model, itemValue));\n        }\n        else if (isRelatedModelProperty(fieldDef)) {\n            mapped[fieldName] = flattenItems(modelIntrospection, fieldDef.type.model, value);\n        }\n        else {\n            mapped[fieldName] = value;\n        }\n    }\n    return mapped;\n};\n/**\n * Determines whether the given field definition and associated result value\n * represent a related model array from a HasMany-type relationship.\n *\n * @param dv Pair of field definition and associated result value\n * @returns\n */\nfunction isRelatedModelItemsArrayPair(dv) {\n    return (typeof dv.fieldDef?.type === 'object' &&\n        'model' in dv.fieldDef.type &&\n        typeof dv.fieldDef.type.model === 'string' &&\n        dv.fieldDef.isArray &&\n        Array.isArray(dv.value?.items));\n}\n/**\n * Determines whether the given field definition represents a relationship\n * to another model.\n *\n * @param fieldDef\n * @returns\n */\nfunction isRelatedModelProperty(fieldDef) {\n    return (typeof fieldDef?.type === 'object' &&\n        'model' in fieldDef.type &&\n        typeof fieldDef.type.model === 'string');\n}\n// TODO: this should accept single result to support CRUD methods; create helper for array/list\nexport function initializeModel(client, modelName, result, modelIntrospection, authMode, authToken, context = false) {\n    const introModel = modelIntrospection.models[modelName];\n    const introModelFields = introModel.fields;\n    const modelFields = Object.entries(introModelFields)\n        .filter(([_, field]) => field?.type?.model !== undefined)\n        .map(([fieldName]) => fieldName);\n    return result.map((record) => {\n        if (record === null || record === undefined) {\n            return record;\n        }\n        const initializedRelationshipFields = {};\n        for (const fieldName of modelFields) {\n            const modelField = introModelFields[fieldName];\n            const modelFieldType = modelField?.type;\n            const relatedModelName = modelFieldType.model;\n            const relatedModel = modelIntrospection.models[relatedModelName];\n            const relatedModelPKFieldName = relatedModel.primaryKeyInfo.primaryKeyFieldName;\n            const relatedModelSKFieldNames = relatedModel.primaryKeyInfo.sortKeyFieldNames;\n            const relationType = modelField.association?.connectionType;\n            let connectionFields = [];\n            if (modelField.association &&\n                'associatedWith' in modelField.association) {\n                connectionFields = modelField.association.associatedWith;\n            }\n            const targetNames = [];\n            if (modelField.association && 'targetNames' in modelField.association) {\n                targetNames.push(...modelField.association.targetNames);\n            }\n            switch (relationType) {\n                case connectionType.BELONGS_TO: {\n                    const sortKeyValues = relatedModelSKFieldNames.reduce(\n                    // TODO(Eslint): is this implementation correct?\n                    // eslint-disable-next-line array-callback-return\n                    (acc, curVal) => {\n                        if (record[curVal]) {\n                            acc[curVal] = record[curVal];\n                        }\n                        return acc;\n                    }, {});\n                    // if get is disabled on the related model\n                    if (client.models[relatedModelName]?.get === undefined) {\n                        break;\n                    }\n                    if (context) {\n                        initializedRelationshipFields[fieldName] = (contextSpec, options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get(contextSpec, {\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return { data: null };\n                        };\n                    }\n                    else {\n                        initializedRelationshipFields[fieldName] = (options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get({\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return { data: null };\n                        };\n                    }\n                    break;\n                }\n                case connectionType.HAS_ONE:\n                case connectionType.HAS_MANY: {\n                    /**\n                     * If the loader is a HAS_ONE, we just need to attempt to grab the first item\n                     * from the result.\n                     */\n                    const mapResult = relationType === connectionType.HAS_ONE\n                        ? (result) => {\n                            return {\n                                data: result?.data.shift() || null,\n                                errors: result.errors,\n                                extensions: result.extensions,\n                            };\n                        }\n                        : (result) => result;\n                    const parentPk = introModel.primaryKeyInfo.primaryKeyFieldName;\n                    const parentSK = introModel.primaryKeyInfo.sortKeyFieldNames;\n                    // M:N check - TODO: refactor\n                    const relatedModelField = relatedModel.fields[connectionFields[0]];\n                    const relatedModelFieldType = relatedModelField.type;\n                    if (relatedModelFieldType.model) {\n                        let relatedTargetNames = [];\n                        if (relatedModelField.association &&\n                            'targetNames' in relatedModelField.association) {\n                            relatedTargetNames = relatedModelField.association?.targetNames;\n                        }\n                        const hasManyFilter = relatedTargetNames.map((field, idx) => {\n                            if (idx === 0) {\n                                return { [field]: { eq: record[parentPk] } };\n                            }\n                            return { [field]: { eq: record[parentSK[idx - 1]] } };\n                        });\n                        // if list is disabled on the related model\n                        if (client.models[relatedModelName]?.list === undefined) {\n                            break;\n                        }\n                        if (context) {\n                            initializedRelationshipFields[fieldName] = (contextSpec, options) => {\n                                if (record[parentPk]) {\n                                    return selfAwareAsync(async (resultPromise) => {\n                                        const basePromise = client.models[relatedModelName].list(contextSpec, {\n                                            filter: { and: hasManyFilter },\n                                            limit: options?.limit,\n                                            nextToken: options?.nextToken,\n                                            authMode: options?.authMode || authMode,\n                                            authToken: options?.authToken || authToken,\n                                        });\n                                        const extendedBase = extendCancellability(basePromise, resultPromise);\n                                        return mapResult((await extendedBase));\n                                    });\n                                }\n                                return [];\n                            };\n                        }\n                        else {\n                            initializedRelationshipFields[fieldName] = (options) => {\n                                if (record[parentPk]) {\n                                    return selfAwareAsync(async (resultPromise) => {\n                                        const basePromise = client.models[relatedModelName].list({\n                                            filter: { and: hasManyFilter },\n                                            limit: options?.limit,\n                                            nextToken: options?.nextToken,\n                                            authMode: options?.authMode || authMode,\n                                            authToken: options?.authToken || authToken,\n                                        });\n                                        const extendedBase = extendCancellability(basePromise, resultPromise);\n                                        return mapResult((await extendedBase));\n                                    });\n                                }\n                                return [];\n                            };\n                        }\n                        break;\n                    }\n                    const hasManyFilter = connectionFields.map((field, idx) => {\n                        if (idx === 0) {\n                            return { [field]: { eq: record[parentPk] } };\n                        }\n                        return { [field]: { eq: record[parentSK[idx - 1]] } };\n                    });\n                    // if list is disabled on the related model\n                    if (client.models[relatedModelName]?.list === undefined) {\n                        break;\n                    }\n                    if (context) {\n                        initializedRelationshipFields[fieldName] = (contextSpec, options) => {\n                            if (record[parentPk]) {\n                                return selfAwareAsync(async (resultPromise) => {\n                                    const basePromise = client.models[relatedModelName].list(contextSpec, {\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    });\n                                    const extendedBase = extendCancellability(basePromise, resultPromise);\n                                    return mapResult((await extendedBase));\n                                });\n                            }\n                            return [];\n                        };\n                    }\n                    else {\n                        initializedRelationshipFields[fieldName] = (options) => {\n                            if (record[parentPk]) {\n                                return selfAwareAsync(async (resultPromise) => {\n                                    const basePromise = client.models[relatedModelName].list({\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    });\n                                    const extendedBase = extendCancellability(basePromise, resultPromise);\n                                    return mapResult((await extendedBase));\n                                });\n                            }\n                            return [];\n                        };\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n        return { ...record, ...initializedRelationshipFields };\n    });\n}\nexport const graphQLOperationsInfo = {\n    CREATE: { operationPrefix: 'create', usePlural: false },\n    GET: { operationPrefix: 'get', usePlural: false },\n    UPDATE: { operationPrefix: 'update', usePlural: false },\n    DELETE: { operationPrefix: 'delete', usePlural: false },\n    LIST: { operationPrefix: 'list', usePlural: true },\n    INDEX_QUERY: { operationPrefix: '', usePlural: false },\n    ONCREATE: { operationPrefix: 'onCreate', usePlural: false },\n    ONUPDATE: { operationPrefix: 'onUpdate', usePlural: false },\n    ONDELETE: { operationPrefix: 'onDelete', usePlural: false },\n    OBSERVEQUERY: { operationPrefix: 'observeQuery', usePlural: false },\n};\nconst SELECTION_SET_WILDCARD = '*';\nexport const getDefaultSelectionSetForNonModelWithIR = (nonModelDefinition, modelIntrospection) => {\n    const { fields } = nonModelDefinition;\n    const mappedFields = Object.values(fields)\n        .map(({ type, name }) => {\n        if (typeof type.enum === 'string') {\n            return [name, FIELD_IR];\n        }\n        if (typeof type.nonModel === 'string') {\n            return [\n                name,\n                getDefaultSelectionSetForNonModelWithIR(modelIntrospection.nonModels[type.nonModel], modelIntrospection),\n            ];\n        }\n        if (typeof type === 'string') {\n            return [name, FIELD_IR];\n        }\n        return undefined;\n    })\n        .filter((pair) => pair !== undefined);\n    return Object.fromEntries(mappedFields);\n};\nconst getDefaultSelectionSetForModelWithIR = (modelDefinition, modelIntrospection) => {\n    const { fields } = modelDefinition;\n    const mappedFields = Object.values(fields)\n        .map(({ type, name }) => {\n        if (typeof type.enum === 'string' ||\n            typeof type === 'string') {\n            return [name, FIELD_IR];\n        }\n        if (typeof type.nonModel === 'string') {\n            return [\n                name,\n                getDefaultSelectionSetForNonModelWithIR(modelIntrospection.nonModels[type.nonModel], modelIntrospection),\n            ];\n        }\n        return undefined;\n    })\n        .filter((pair) => pair !== undefined);\n    const ownerFields = resolveOwnerFields(modelDefinition).map((field) => [\n        field,\n        FIELD_IR,\n    ]);\n    return Object.fromEntries(mappedFields.concat(ownerFields));\n};\nfunction defaultSelectionSetForModel(modelDefinition) {\n    // fields that are explicitly part of the graphql schema; not\n    // inferred from owner auth rules.\n    const { fields } = modelDefinition;\n    const explicitFields = Object.values(fields)\n        // Default selection set omits model fields\n        .map(({ type, name }) => {\n        if (typeof type === 'string')\n            return name;\n        if (typeof type === 'object') {\n            if (typeof type?.enum === 'string') {\n                return name;\n            }\n            else if (typeof type?.nonModel === 'string') {\n                return `${name}.${SELECTION_SET_WILDCARD}`;\n            }\n        }\n        return undefined;\n    })\n        .filter(Boolean);\n    // fields used for owner auth rules that may or may not also\n    // be explicit on the model.\n    const ownerFields = resolveOwnerFields(modelDefinition);\n    return Array.from(new Set(explicitFields.concat(ownerFields)));\n}\nconst FIELD_IR = '';\n/**\n * Generates nested Custom Selection Set IR from path\n *\n * @param modelDefinitions\n * @param modelName\n * @param selectionSet - array of object paths\n * @example\n * ### Given\n * `selectionSet = ['id', 'comments.post.id']`\n * ### Returns\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n */\nexport function customSelectionSetToIR(modelIntrospection, modelName, selectionSet) {\n    const dotNotationToObject = (path, modelOrNonModelName) => {\n        const [fieldName, ...rest] = path.split('.');\n        const nested = rest[0];\n        const modelOrNonModelDefinition = modelIntrospection.models[modelOrNonModelName] ??\n            modelIntrospection.nonModels[modelOrNonModelName];\n        const modelOrNonModelFields = modelOrNonModelDefinition?.fields;\n        const relatedModel = modelOrNonModelFields?.[fieldName]?.type?.model;\n        const relatedModelDefinition = modelIntrospection.models[relatedModel];\n        const relatedNonModel = modelOrNonModelFields?.[fieldName]?.type?.nonModel;\n        const relatedNonModelDefinition = modelIntrospection.nonModels[relatedNonModel];\n        const isModelOrNonModelOrFieldType = relatedModelDefinition\n            ? 'model'\n            : relatedNonModelDefinition\n                ? 'nonModel'\n                : 'field';\n        if (isModelOrNonModelOrFieldType === 'nonModel') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of custom type ${relatedNonModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                result = {\n                    [fieldName]: getDefaultSelectionSetForNonModelWithIR(relatedNonModelDefinition, modelIntrospection),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedNonModel),\n                };\n            }\n            return result;\n        }\n        else if (isModelOrNonModelOrFieldType === 'model') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of model ${relatedModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                const nestedRelatedModelDefinition = modelIntrospection.models[relatedModel];\n                result = {\n                    [fieldName]: getDefaultSelectionSetForModelWithIR(nestedRelatedModelDefinition, modelIntrospection),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedModel),\n                };\n            }\n            if (modelOrNonModelFields[fieldName]?.isArray) {\n                result = {\n                    [fieldName]: {\n                        items: result[fieldName],\n                    },\n                };\n            }\n            return result;\n        }\n        else {\n            const modelField = modelOrNonModelFields?.[fieldName];\n            const nonModelDefinition = modelIntrospection.nonModels[modelOrNonModelName];\n            const nonModelField = nonModelDefinition?.fields?.[fieldName];\n            if (!nonModelDefinition) {\n                const isOwnerField = resolveOwnerFields(modelOrNonModelDefinition).includes(fieldName);\n                if (!modelField && !isOwnerField) {\n                    throw Error(`${fieldName} is not a field of model ${modelOrNonModelName}`);\n                }\n            }\n            else {\n                if (!nonModelField) {\n                    throw Error(`${fieldName} is not a field of custom type ${modelOrNonModelName}`);\n                }\n            }\n            return { [fieldName]: FIELD_IR };\n        }\n    };\n    return selectionSet.reduce((resultObj, path) => deepMergeSelectionSetObjects(dotNotationToObject(path, modelName), resultObj), {});\n}\n/**\n * Stringifies selection set IR\n * * @example\n * ### Given\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n * ### Returns\n * `'id comments { items { post { id } } }'`\n */\nexport function selectionSetIRToString(obj) {\n    const res = [];\n    Object.entries(obj).forEach(([fieldName, value]) => {\n        if (value === FIELD_IR) {\n            res.push(fieldName);\n        }\n        else if (typeof value === 'object' && value !== null) {\n            if (value?.items) {\n                res.push(fieldName, '{', 'items', '{', selectionSetIRToString(value.items), '}', '}');\n            }\n            else {\n                res.push(fieldName, '{', selectionSetIRToString(value), '}');\n            }\n        }\n    });\n    return res.join(' ');\n}\n/**\n * Recursively merges selection set objects from `source` onto `target`.\n *\n * `target` will be updated. `source` will be left alone.\n *\n * @param source The object to merge into target.\n * @param target The object to be mutated.\n */\nfunction deepMergeSelectionSetObjects(source, target) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n    for (const key in source) {\n        // This verification avoids 'Prototype Pollution' issue\n        if (!Object.prototype.hasOwnProperty.call(source, key))\n            continue;\n        if (Object.prototype.hasOwnProperty.call(target, key) &&\n            isObject(target[key])) {\n            deepMergeSelectionSetObjects(source[key], target[key]);\n        }\n        else {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nexport function generateSelectionSet(modelIntrospection, modelName, selectionSet) {\n    const modelDefinition = modelIntrospection.models[modelName];\n    const selSetIr = customSelectionSetToIR(modelIntrospection, modelName, selectionSet ?? defaultSelectionSetForModel(modelDefinition));\n    const selSetString = selectionSetIRToString(selSetIr);\n    return selSetString;\n}\nexport function generateGraphQLDocument(modelIntrospection, modelDefinition, modelOperation, listArgs, indexMeta) {\n    const { name, pluralName, fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, attributes, } = modelDefinition;\n    // Use pascal case of the model name to generate the operations and the arguments.\n    // This is required to be in sync with the resources generated by the GraphQL transformers.\n    const namePascalCase = name.charAt(0).toUpperCase() + name.slice(1);\n    const pluralNamePascalCase = pluralName.charAt(0).toUpperCase() + pluralName.slice(1);\n    const { operationPrefix, usePlural } = graphQLOperationsInfo[modelOperation];\n    const { selectionSet } = listArgs || {};\n    let graphQLFieldName;\n    let indexQueryArgs;\n    if (operationPrefix) {\n        graphQLFieldName = `${operationPrefix}${usePlural ? pluralNamePascalCase : namePascalCase}`;\n    }\n    else if (indexMeta) {\n        const { queryField, pk, sk = [] } = indexMeta;\n        graphQLFieldName = queryField;\n        /**\n         * **a. Single field SK** -> single arg where name is the field name and the type is `Model${gqlFieldType}KeyConditionInput` (nullable)\n         *  Note: string-like data types e.g.,  AWSDateTime, AWSEmail, AWSPhone, etc. should map to String. See `skGraphQlFieldTypeMap` above\n         * @example\n         * ```\n         * sk1: ModelStringKeyConditionInput\n         * ```\n         *\n         * **b. Composite SK** -> single arg where the name is camelCase concatenation of all the field names that comprise the SK\n         *  and the type is `Model${modelName}${keyAttributeName}CompositeKeyConditionInput` (nullable)\n         * @example\n         * ```\n         * sk1Sk2: ModelMyModelMyModelByPkAndSk1AndSk2CompositeKeyConditionInput\n         */\n        let skQueryArgs = {};\n        if (sk.length === 1) {\n            const [skField] = sk;\n            const type = (typeof fields[skField].type === 'string'\n                ? fields[skField].type\n                : 'String');\n            const normalizedType = skGraphQlFieldTypeMap[type];\n            skQueryArgs = {\n                [skField]: `Model${normalizedType}KeyConditionInput`,\n            };\n        }\n        else if (sk.length > 1) {\n            const compositeSkArgName = resolvedSkName(sk);\n            const keyName = attributes?.find((attr) => attr?.properties?.queryField === queryField)?.properties?.name;\n            skQueryArgs = {\n                [compositeSkArgName]: `Model${capitalize(name)}${capitalize(keyName)}CompositeKeyConditionInput`,\n            };\n        }\n        indexQueryArgs = {\n            [pk]: `${Object.prototype.hasOwnProperty.call(fields[pk].type, 'enum')\n                ? fields[pk].type.enum // AppSync schema sets enum type as the type of the enum fields that's used as PK\n                : fields[pk].type}!`,\n            ...skQueryArgs,\n        };\n    }\n    else {\n        throw new Error('Error generating GraphQL Document - invalid operation name');\n    }\n    let graphQLOperationType;\n    let graphQLSelectionSet;\n    let graphQLArguments;\n    const selectionSetFields = generateSelectionSet(modelIntrospection, name, selectionSet);\n    // default PK args for get and list operations\n    // modified below for CPK\n    const getPkArgs = {\n        [primaryKeyFieldName]: `${fields[primaryKeyFieldName].type}!`,\n    };\n    const listPkArgs = {};\n    /**\n     * Generate query field args for the SK if it's defined\n     *\n     * **1. Get queries** require each SK field to be present as a separate arg where the type is the field's GraphQL scalar type (non-nullable)\n     * @example\n     * ```\n     * sk1: String!, sk2: Int!\n     * ```\n     *\n     * **2. List queries**\n     *\n     * **a. Single field SK** -> single arg where name is the field name and the type is `Model${gqlFieldType}KeyConditionInput` (nullable)\n     *      Note: string-like data types e.g.,  AWSDateTime, AWSEmail, AWSPhone, etc. should map to String. See `skGraphQlFieldTypeMap` above\n     * @example\n     * ```\n     * sk1: ModelStringKeyConditionInput\n     * ```\n     *\n     * **b. Composite SK** -> single arg where the name is camelCase concatenation of all the field names that comprise the SK\n     *  and the type is `Model${modelName}PrimaryCompositeKeyConditionInput` (nullable)\n     * @example\n     * ```\n     * sk1Sk2: ModelMyModelPrimaryCompositeKeyConditionInput\n     * ```\n     */\n    const generateSkArgs = (op) => {\n        if (sortKeyFieldNames.length === 0)\n            return {};\n        if (op === 'get') {\n            return sortKeyFieldNames.reduce((acc, fieldName) => {\n                const fieldType = fields[fieldName].type;\n                if (op === 'get') {\n                    acc[fieldName] = `${fieldType}!`; // ! - SK args are non-nullable in Get queries\n                }\n                return acc;\n            }, {});\n        }\n        else {\n            // list SK\n            if (sortKeyFieldNames.length === 1) {\n                // Single SK\n                const [sk] = sortKeyFieldNames;\n                const type = (typeof fields[sk].type === 'string' ? fields[sk].type : 'String');\n                const normalizedType = skGraphQlFieldTypeMap[type];\n                return {\n                    [sk]: `Model${normalizedType}KeyConditionInput`,\n                };\n            }\n            else {\n                // Composite SK\n                const compositeSkArgName = resolvedSkName(sortKeyFieldNames);\n                return {\n                    [compositeSkArgName]: `Model${capitalize(name)}PrimaryCompositeKeyConditionInput`,\n                };\n            }\n        }\n    };\n    if (isCustomPrimaryKey) {\n        Object.assign(getPkArgs, generateSkArgs('get'));\n        Object.assign(listPkArgs, {\n            // PK is only included in list query field args in the generated GQL\n            // when explicitly specifying PK with .identifier(['fieldName']) or @primaryKey in the schema definition\n            [primaryKeyFieldName]: `${fields[primaryKeyFieldName].type}`, // PK is always a nullable arg for list (no `!` after the type)\n            sortDirection: 'ModelSortDirection',\n        }, generateSkArgs('list'));\n    }\n    switch (modelOperation) {\n        case 'CREATE':\n        case 'UPDATE':\n        case 'DELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    input: `${operationPrefix.charAt(0).toLocaleUpperCase() +\n                        operationPrefix.slice(1)}${namePascalCase}Input!`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'mutation');\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'GET':\n            graphQLArguments ?? (graphQLArguments = getPkArgs);\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'LIST':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    ...listPkArgs,\n                    // eslint doesn't like the ts-ignore, because it thinks it's unnecessary.\n                    // But TS doesn't like the `filter: ...` because it think it will always be\n                    // overwritten. (it won't be.) so, we need to ignore the TS error and then\n                    // ignore the eslint error on the ts-ignore.\n                    // eslint-disable-next-line\n                    // @ts-ignore\n                    filter: `Model${namePascalCase}FilterInput`,\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'INDEX_QUERY':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    ...indexQueryArgs,\n                    filter: `Model${namePascalCase}FilterInput`,\n                    sortDirection: 'ModelSortDirection',\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    filter: `ModelSubscription${namePascalCase}FilterInput`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'subscription');\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n            break;\n        case 'OBSERVEQUERY':\n        default:\n            throw new Error('Internal error: Attempted to generate graphql document for observeQuery. Please report this error.');\n    }\n    const graphQLDocument = `${graphQLOperationType}${graphQLArguments\n        ? `(${Object.entries(graphQLArguments).map(([fieldName, type]) => `$${fieldName}: ${type}`)})`\n        : ''} { ${graphQLFieldName}${graphQLArguments\n        ? `(${Object.keys(graphQLArguments).map((fieldName) => `${fieldName}: $${fieldName}`)})`\n        : ''} { ${graphQLSelectionSet} } }`;\n    return graphQLDocument;\n}\nexport function buildGraphQLVariables(modelDefinition, operation, arg, modelIntrospection, indexMeta) {\n    const { fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, } = modelDefinition;\n    const skName = sortKeyFieldNames?.length && resolvedSkName(sortKeyFieldNames);\n    let variables = {};\n    // TODO: process input\n    switch (operation) {\n        case 'CREATE':\n            variables = {\n                input: arg\n                    ? normalizeMutationInput(arg, modelDefinition, modelIntrospection)\n                    : {},\n            };\n            break;\n        case 'UPDATE':\n            // readonly fields are not  updated\n            variables = {\n                input: arg\n                    ? Object.fromEntries(Object.entries(normalizeMutationInput(arg, modelDefinition, modelIntrospection)).filter(([fieldName]) => {\n                        // omit field from update input\n                        // if exists in fields and marked read only\n                        // if does not exist in fields but implicitly added to schema via ownership\n                        return fields[fieldName]\n                            ? !fields[fieldName].isReadOnly\n                            : !resolveOwnerFields(modelDefinition).includes(fieldName);\n                    }))\n                    : {},\n            };\n            break;\n        case 'GET':\n        case 'DELETE':\n            // only identifiers are sent\n            if (arg) {\n                variables = isCustomPrimaryKey\n                    ? [primaryKeyFieldName, ...sortKeyFieldNames].reduce((acc, fieldName) => {\n                        acc[fieldName] = arg[fieldName];\n                        return acc;\n                    }, {})\n                    : { [primaryKeyFieldName]: arg[primaryKeyFieldName] };\n            }\n            if (operation === 'DELETE') {\n                variables = { input: variables };\n            }\n            break;\n        case 'LIST':\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.sortDirection) {\n                variables.sortDirection = arg.sortDirection;\n            }\n            if (arg && arg[primaryKeyFieldName]) {\n                variables[primaryKeyFieldName] = arg[primaryKeyFieldName];\n            }\n            if (skName && arg && arg[skName]) {\n                variables[skName] = arg[skName];\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        case 'INDEX_QUERY': {\n            const { pk, sk = [] } = indexMeta;\n            const indexQuerySkName = sk?.length && resolvedSkName(sk);\n            variables[pk] = arg[pk];\n            if (indexQuerySkName && arg && arg[indexQuerySkName]) {\n                variables[indexQuerySkName] = arg[indexQuerySkName];\n            }\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.sortDirection) {\n                variables.sortDirection = arg.sortDirection;\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        }\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            if (arg?.filter) {\n                variables = { filter: arg.filter };\n            }\n            break;\n        case 'OBSERVEQUERY':\n            throw new Error('Internal error: Attempted to build variables for observeQuery. Please report this error.');\n        default: {\n            const exhaustiveCheck = operation;\n            throw new Error(`Unhandled operation case: ${exhaustiveCheck}`);\n        }\n    }\n    return variables;\n}\n/**\n * Iterates over mutation input values and resolves any model inputs to their corresponding join fields/values\n *\n * @example\n * ### Usage\n * ```ts\n * const result = normalizeMutationInput({ post: post }, model, modelDefinition);\n * ```\n * ### Result\n * ```ts\n * { postId: \"abc123\" }\n * ```\n *\n */\nexport function normalizeMutationInput(mutationInput, model, modelIntrospection) {\n    const { fields } = model;\n    const normalized = {};\n    Object.entries(mutationInput).forEach(([inputFieldName, inputValue]) => {\n        const fieldType = fields[inputFieldName]?.type;\n        const relatedModelName = fieldType?.model;\n        if (relatedModelName) {\n            const association = fields[inputFieldName]?.association;\n            const relatedModelDef = modelIntrospection.models[relatedModelName];\n            const relatedModelPkInfo = relatedModelDef.primaryKeyInfo;\n            if (association?.connectionType === connectionType.HAS_ONE) {\n                const associationHasOne = association;\n                associationHasOne.targetNames.forEach((targetName, idx) => {\n                    const associatedFieldName = associationHasOne.associatedWith[idx];\n                    normalized[targetName] = inputValue[associatedFieldName];\n                });\n            }\n            if (association?.connectionType === connectionType.BELONGS_TO) {\n                const associationBelongsTo = association;\n                associationBelongsTo.targetNames.forEach((targetName, idx) => {\n                    if (idx === 0) {\n                        const associatedFieldName = relatedModelPkInfo.primaryKeyFieldName;\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                    else {\n                        const associatedFieldName = relatedModelPkInfo.sortKeyFieldNames[idx - 1];\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                });\n            }\n        }\n        else {\n            normalized[inputFieldName] = inputValue;\n        }\n    });\n    return normalized;\n}\n/**\n * Produces a parameter object that can contains auth mode/token overrides\n * only if present in either `options` (first) or configured on the `client`\n * as a fallback.\n *\n * @param client Configured client from `generateClient`\n * @param options Args/Options object from call site.\n * @returns\n */\nexport function authModeParams(client, getInternals, options = {}) {\n    const internals = getInternals(client);\n    return {\n        authMode: options.authMode || internals.authMode,\n        authToken: options.authToken || internals.authToken,\n    };\n}\n/**\n * Retrieves custom headers from either the client or request options.\n * @param client V6Client | V6ClientSSRRequest | V6ClientSSRCookies - for extracting client headers\n * @param requestHeaders {@link CustomHeaders} - request headers\n * @returns custom headers as {@link CustomHeaders}\n */\nexport function getCustomHeaders(client, getInternals, requestHeaders) {\n    let headers = getInternals(client).headers || {};\n    // Individual request headers will take precedence over client headers.\n    // We intentionally do *not* merge client and request headers.\n    if (requestHeaders) {\n        headers = requestHeaders;\n    }\n    return headers;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/utils.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import { GraphQLFormattedError } from '@aws-amplify/data-schema-types';\n/**\n * Handle errors for list return types (list and index query operations)\n */\nexport function handleListGraphQlError(error) {\n    if (error?.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: [],\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n/**\n * Handle errors for singular return types (create, get, update, delete operations)\n */\nexport function handleSingularGraphQlError(error) {\n    if (error.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: null,\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA,0EAAA;AACA;;CAEA;;;;;;AACO,SAAS,sBAAsB,CAAC,KAAK,EAAE;IAC1C,kDAAI,KAAK,CAAE,MAAM,EAAE;QACvB,8BAAA;QACQ,OAAO;YACH,GAAG,KAAK;YACR,IAAI,EAAE,EAAE;QACpB,CAAS;IACT,OACS;QACT,mCAAA;QACQ,MAAM,KAAK;IACnB;AACA;AACA;;CAEA,GACO,SAAS,0BAA0B,CAAC,KAAK,EAAE;IAC9C,IAAI,KAAK,CAAC,MAAM,EAAE;QACtB,8BAAA;QACQ,OAAO;YACH,GAAG,KAAK;YACR,IAAI,EAAE,IAAI;QACtB,CAAS;IACT,OACS;QACT,mCAAA;QACQ,MAAM,KAAK;IACnB;AACA","debugId":null}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/getCustomUserAgentDetails.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/getCustomUserAgentDetails.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Symbol used for internal user agent overrides.\n *\n * @internal\n * This symbol is intended for internal use within the Amplify library.\n * It may change or be removed in future versions without notice.\n * External usage of this symbol is discouraged and may lead to unexpected behavior.\n */\nexport const INTERNAL_USER_AGENT_OVERRIDE = Symbol('INTERNAL_USER_AGENT_OVERRIDE');\nexport var AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnStreamEvent\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nexport const getCustomUserAgentDetails = (action) => ({\n    category: 'ai',\n    action,\n});\n/**\n * Creates a user agent override object based on custom details.\n *\n * @internal\n * This function is intended for internal use within the Amplify library.\n * It may change or be removed in future versions without notice.\n *\n * @param customUserAgentDetails - Optional custom user agent details\n * @returns An object with INTERNAL_USER_AGENT_OVERRIDE symbol as key and customUserAgentDetails as value, or undefined if no details provided\n */\nexport function createUserAgentOverride(customUserAgentDetails) {\n    return customUserAgentDetails\n        ? { [INTERNAL_USER_AGENT_OVERRIDE]: customUserAgentDetails }\n        : undefined;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA;;;;;;;CAOA;;;;;;;;;;AACY,MAAC,4BAA4B,GAAG,MAAM,CAAC,8BAA8B;AACvE,IAAC;AACX,CAAC,SAAU,QAAQ,EAAE;IACjB,QAAQ,CAAC,oBAAoB,CAAC,GAAG,GAAG;IACpC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,GAAG;IACjC,QAAQ,CAAC,mBAAmB,CAAC,GAAG,GAAG;IACnC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,GAAG;IACpC,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG;IAC7B,QAAQ,CAAC,cAAc,CAAC,GAAG,GAAG;IAC9B,QAAQ,CAAC,eAAe,CAAC,GAAG,GAAG;IAC/B,QAAQ,CAAC,YAAY,CAAC,GAAG,GAAG;IAC5B,QAAQ,CAAC,oBAAoB,CAAC,GAAG,GAAG;AACxC,CAAC,EAAE,QAAQ,IAAA,CAAK,QAAQ,GAAG,CAAA,CAAE,CAAC,CAAC;AACnB,MAAC,yBAAyB,GAAG,CAAC,MAAM,GAAA,CAAM;QAClD,QAAQ,EAAE,IAAI;QACd,MAAM;IACV,CAAC;AACD;;;;;;;;;CASA,GACO,SAAS,uBAAuB,CAAC,sBAAsB,EAAE;IAC5D,OAAO,yBACD;QAAE,CAAC,4BAA4B,CAAA,EAAG,sBAAsB;IAAA,IACxD,SAAS;AACnB","debugId":null}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/custom.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/custom.ts"],"sourcesContent":["import { map } from 'rxjs';\nimport { authModeParams, getDefaultSelectionSetForNonModelWithIR, generateSelectionSet, getCustomHeaders, initializeModel, selectionSetIRToString, } from '../APIClient';\nimport { handleSingularGraphQlError } from './utils';\nimport { selfAwareAsync } from '../../utils';\nimport { extendCancellability } from '../cancellation';\nimport { createUserAgentOverride } from '../ai/getCustomUserAgentDetails';\n/**\n * Type guard for checking whether a Custom Operation argument is a contextSpec object\n */\nconst argIsContextSpec = (arg) => {\n    return typeof arg?.token?.value === 'symbol';\n};\n/**\n * Builds an operation function, embedded with all client and context data, that\n * can be attached to a client as a custom query or mutation.\n *\n * If we have this source schema:\n *\n * ```typescript\n * a.schema({\n *   echo: a.query()\n *     .arguments({input: a.string().required()})\n *     .returns(a.string())\n * })\n * ```\n *\n * Our model intro schema will contain an entry like this:\n *\n * ```ts\n * {\n *   queries: {\n *     echo: {\n *       name: \"echo\",\n *       isArray: false,\n *       type: 'String',\n *       isRequired: false,\n *       arguments: {\n *         input: {\n *           name: 'input',\n *           isArray: false,\n *           type: String,\n *           isRequired: true\n *         }\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The `echo` object is used to build the `echo' method that goes here:\n *\n * ```typescript\n * const client = generateClent()\n * const { data } = await client.queries.echo({input: 'a string'});\n * //                                    ^\n * //                                    |\n * //                                    +-- This one right here.\n * //\n * ```\n *\n *\n * @param client The client to run graphql queries through.\n * @param modelIntrospection The model introspection schema the op comes from.\n * @param operationType The broad category of graphql operation.\n * @param operation The operation definition from the introspection schema.\n * @param useContext Whether the function needs to accept an SSR context.\n * @returns The operation function to attach to query, mutations, etc.\n */\nexport function customOpFactory(client, modelIntrospection, operationType, operation, useContext, getInternals, customUserAgentDetails) {\n    // .arguments() are defined for the custom operation in the schema builder\n    // and are present in the model introspection schema\n    const argsDefined = operation.arguments !== undefined;\n    const op = (...args) => {\n        // options is always the last argument\n        const options = args[args.length - 1];\n        let contextSpec;\n        let arg;\n        if (useContext) {\n            if (argIsContextSpec(args[0])) {\n                contextSpec = args[0];\n            }\n            else {\n                throw new Error(`Invalid first argument passed to ${operation.name}. Expected contextSpec`);\n            }\n        }\n        if (argsDefined) {\n            if (useContext) {\n                arg = args[1];\n            }\n            else {\n                arg = args[0];\n            }\n        }\n        if (operationType === 'subscription') {\n            return _opSubscription(\n            // subscriptions are only enabled on the clientside\n            client, modelIntrospection, operation, getInternals, arg, options, customUserAgentDetails);\n        }\n        return _op(client, modelIntrospection, operationType, operation, getInternals, arg, options, contextSpec, customUserAgentDetails);\n    };\n    return op;\n}\n/**\n * Runtime test and type guard to check whether `o[field]` is a `String`.\n *\n * ```typescript\n * if (hasStringField(o, 'prop')) {\n *   const s = o.prop;\n *   //    ^? const s: string\n * }\n * ```\n *\n * @param o Object to inspect\n * @param field Field to look for\n * @returns Boolean: `true` if the `o[field]` is a `string`\n */\nfunction hasStringField(o, field) {\n    return typeof o[field] === 'string';\n}\nfunction isEnumType(type) {\n    return type instanceof Object && 'enum' in type;\n}\nfunction isInputType(type) {\n    return type instanceof Object && 'input' in type;\n}\n/**\n * @param argDef A single argument definition from a custom operation\n * @returns A string naming the base type including the `!` if the arg is required.\n */\nfunction argumentBaseTypeString({ type, isRequired }) {\n    const requiredFlag = isRequired ? '!' : '';\n    if (isEnumType(type)) {\n        return `${type.enum}${requiredFlag}`;\n    }\n    if (isInputType(type)) {\n        return `${type.input}${requiredFlag}`;\n    }\n    return `${type}${requiredFlag}`;\n}\n/**\n * Generates \"outer\" arguments string for a custom operation. For example,\n * in this operation:\n *\n * ```graphql\n * query MyQuery(InputString: String!) {\n *   echoString(InputString: $InputString)\n * }\n * ```\n *\n * This function returns the top/outer level arguments as a string:\n *\n * ```json\n * \"InputString: String!\"\n * ```\n *\n * @param operation Operation object from model introspection schema.\n * @returns \"outer\" arguments string\n */\nfunction outerArguments(operation) {\n    if (operation.arguments === undefined) {\n        return '';\n    }\n    const args = Object.entries(operation.arguments)\n        .map(([k, argument]) => {\n        const baseType = argumentBaseTypeString(argument);\n        const finalType = argument.isArray\n            ? `[${baseType}]${argument.isArrayNullable ? '' : '!'}`\n            : baseType;\n        return `$${k}: ${finalType}`;\n    })\n        .join(', ');\n    return args.length > 0 ? `(${args})` : '';\n}\n/**\n * Generates \"inner\" arguments string for a custom operation. For example,\n * in this operation:\n *\n * ```graphql\n * query MyQuery(InputString: String!) {\n *   echoString(InputString: $InputString)\n * }\n * ```\n *\n * This function returns the inner arguments as a string:\n *\n * ```json\n * \"InputString: $InputString\"\n * ```\n *\n * @param operation Operation object from model introspection schema.\n * @returns \"outer\" arguments string\n */\nfunction innerArguments(operation) {\n    if (operation.arguments === undefined) {\n        return '';\n    }\n    const args = Object.keys(operation.arguments)\n        .map((k) => `${k}: $${k}`)\n        .join(', ');\n    return args.length > 0 ? `(${args})` : '';\n}\n/**\n * Generates the selection set string for a custom operation. This is slightly\n * different than the selection set generation for models. If the custom op returns\n * a primitive or enum types, it doesn't require a selection set at all.\n *\n * E.g., the graphql might look like this:\n *\n * ```graphql\n * query MyQuery {\n *   echoString(inputString: \"whatever\")\n * }\n * #                                     ^\n * #                                     |\n * #                                     +-- no selection set\n * ```\n *\n * Non-primitive return type selection set generation will be similar to other\n * model operations.\n *\n * @param modelIntrospection The full code-generated introspection schema.\n * @param operation The operation object from the schema.\n * @returns The selection set as a string.\n */\nfunction operationSelectionSet(modelIntrospection, operation) {\n    if (hasStringField(operation, 'type') ||\n        hasStringField(operation.type, 'enum')) {\n        return '';\n    }\n    else if (hasStringField(operation.type, 'nonModel')) {\n        const nonModel = modelIntrospection.nonModels[operation.type.nonModel];\n        return `{${selectionSetIRToString(getDefaultSelectionSetForNonModelWithIR(nonModel, modelIntrospection))}}`;\n    }\n    else if (hasStringField(operation.type, 'model')) {\n        return `{${generateSelectionSet(modelIntrospection, operation.type.model)}}`;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Maps an arguments objec to graphql variables, removing superfluous args and\n * screaming loudly when required args are missing.\n *\n * @param operation The operation to construct graphql request variables for.\n * @param args The arguments to map variables from.\n * @returns The graphql variables object.\n */\nfunction operationVariables(operation, args = {}) {\n    const variables = {};\n    if (operation.arguments === undefined) {\n        return variables;\n    }\n    for (const argDef of Object.values(operation.arguments)) {\n        if (typeof args[argDef.name] !== 'undefined') {\n            variables[argDef.name] = args[argDef.name];\n        }\n        else if (argDef.isRequired) {\n            // At this point, the variable is both required and missing: We don't need\n            // to continue. The operation is expected to fail.\n            throw new Error(`${operation.name} requires arguments '${argDef.name}'`);\n        }\n    }\n    return variables;\n}\n/**\n * Executes an operation from the given model intro schema against a client, returning\n * a fully instantiated model when relevant.\n *\n * @param client The client to operate `graphql()` calls through.\n * @param modelIntrospection The model intro schema to construct requests from.\n * @param operationType The high level graphql operation type.\n * @param operation The specific operation name, args, return type details.\n * @param args The arguments to provide to the operation as variables.\n * @param options Request options like headers, etc.\n * @param context SSR context if relevant.\n * @returns Result from the graphql request, model-instantiated when relevant.\n */\nfunction _op(client, modelIntrospection, operationType, operation, getInternals, args, options, context, customUserAgentDetails) {\n    return selfAwareAsync(async (resultPromise) => {\n        const { name: operationName } = operation;\n        const auth = authModeParams(client, getInternals, options);\n        const headers = getCustomHeaders(client, getInternals, options?.headers);\n        const outerArgsString = outerArguments(operation);\n        const innerArgsString = innerArguments(operation);\n        const selectionSet = operationSelectionSet(modelIntrospection, operation);\n        const returnTypeModelName = hasStringField(operation.type, 'model')\n            ? operation.type.model\n            : undefined;\n        const query = `\n    ${operationType.toLocaleLowerCase()}${outerArgsString} {\n      ${operationName}${innerArgsString} ${selectionSet}\n    }\n  `;\n        const variables = operationVariables(operation, args);\n        const userAgentOverride = createUserAgentOverride(customUserAgentDetails);\n        try {\n            const basePromise = context\n                ? client.graphql(context, {\n                    ...auth,\n                    query,\n                    variables,\n                }, headers)\n                : client.graphql({\n                    ...auth,\n                    query,\n                    variables,\n                    ...userAgentOverride,\n                }, headers);\n            const extendedPromise = extendCancellability(basePromise, resultPromise);\n            const { data, extensions } = await extendedPromise;\n            // flatten response\n            if (data) {\n                const [key] = Object.keys(data);\n                const isArrayResult = Array.isArray(data[key]);\n                // TODO: when adding support for custom selection set, flattening will need\n                // to occur recursively. For now, it's expected that related models are not\n                // present in the result. Only FK's are present. Any related model properties\n                // should be replaced with lazy loaders under the current implementation.\n                const flattenedResult = isArrayResult\n                    ? data[key].filter((x) => x)\n                    : data[key];\n                // TODO: custom selection set. current selection set is default selection set only\n                // custom selection set requires data-schema-type + runtime updates above.\n                const initialized = returnTypeModelName\n                    ? initializeModel(client, returnTypeModelName, isArrayResult ? flattenedResult : [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context)\n                    : flattenedResult;\n                return {\n                    data: !isArrayResult && Array.isArray(initialized)\n                        ? initialized.shift()\n                        : initialized,\n                    extensions,\n                };\n            }\n            else {\n                return { data: null, extensions };\n            }\n        }\n        catch (error) {\n            /**\n             * The `data` type returned by `error` here could be:\n             * 1) `null`\n             * 2) an empty object\n             * 3) \"populated\" but with a `null` value `{ getPost: null }`\n             * 4) an actual record `{ getPost: { id: '1', title: 'Hello, World!' } }`\n             */\n            const { data, errors } = error;\n            /**\n             * `data` is not `null`, and is not an empty object:\n             */\n            if (data && Object.keys(data).length !== 0 && errors) {\n                const [key] = Object.keys(data);\n                const isArrayResult = Array.isArray(data[key]);\n                // TODO: when adding support for custom selection set, flattening will need\n                // to occur recursively. For now, it's expected that related models are not\n                // present in the result. Only FK's are present. Any related model properties\n                // should be replaced with lazy loaders under the current implementation.\n                const flattenedResult = isArrayResult\n                    ? data[key].filter((x) => x)\n                    : data[key];\n                /**\n                 * `flattenedResult` could be `null` here (e.g. `data: { getPost: null }`)\n                 * if `flattenedResult`, result is an actual record:\n                 */\n                if (flattenedResult) {\n                    // TODO: custom selection set. current selection set is default selection set only\n                    // custom selection set requires data-schema-type + runtime updates above.\n                    const initialized = returnTypeModelName\n                        ? initializeModel(client, returnTypeModelName, isArrayResult ? flattenedResult : [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context)\n                        : flattenedResult;\n                    return {\n                        data: !isArrayResult && Array.isArray(initialized)\n                            ? initialized.shift()\n                            : initialized,\n                        errors,\n                    };\n                }\n                else {\n                    // was `data: { getPost: null }`)\n                    return handleSingularGraphQlError(error);\n                }\n            }\n            else {\n                // `data` is `null`:\n                return handleSingularGraphQlError(error);\n            }\n        }\n    });\n}\n/**\n * Executes an operation from the given model intro schema against a client, returning\n * a fully instantiated model when relevant.\n *\n * @param client The client to operate `graphql()` calls through.\n * @param modelIntrospection The model intro schema to construct requests from.\n * @param operation The specific operation name, args, return type details.\n * @param args The arguments to provide to the operation as variables.\n * @param options Request options like headers, etc.\n * @returns Result from the graphql request, model-instantiated when relevant.\n */\nfunction _opSubscription(client, modelIntrospection, operation, getInternals, args, options, customUserAgentDetails) {\n    const operationType = 'subscription';\n    const { name: operationName } = operation;\n    const auth = authModeParams(client, getInternals, options);\n    const headers = getCustomHeaders(client, getInternals, options?.headers);\n    const outerArgsString = outerArguments(operation);\n    const innerArgsString = innerArguments(operation);\n    const selectionSet = operationSelectionSet(modelIntrospection, operation);\n    const returnTypeModelName = hasStringField(operation.type, 'model')\n        ? operation.type.model\n        : undefined;\n    const query = `\n    ${operationType.toLocaleLowerCase()}${outerArgsString} {\n      ${operationName}${innerArgsString} ${selectionSet}\n    }\n  `;\n    const variables = operationVariables(operation, args);\n    const userAgentOverride = createUserAgentOverride(customUserAgentDetails);\n    const observable = client.graphql({\n        ...auth,\n        query,\n        variables,\n        ...userAgentOverride,\n    }, headers);\n    return observable.pipe(map((value) => {\n        const [key] = Object.keys(value.data);\n        const data = value.data[key];\n        const [initialized] = returnTypeModelName\n            ? initializeModel(client, returnTypeModelName, [data], modelIntrospection, auth.authMode, auth.authToken)\n            : [data];\n        return initialized;\n    }));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1702, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/generateCustomOperationsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/generateCustomOperationsProperty.ts"],"sourcesContent":["import { customOpFactory } from './operations/custom';\nconst operationTypeMap = {\n    queries: 'query',\n    mutations: 'mutation',\n    subscriptions: 'subscription',\n};\nexport function generateCustomOperationsProperty(client, config, operationsType, getInternals) {\n    // some bundlers end up with `Amplify.configure` being called *after* generate client.\n    // if that occurs, we need to *not error* while we wait. handling for late configuration\n    // occurs in `generateClient()`. we do not need to subscribe to Hub events here.\n    if (!config) {\n        return {};\n    }\n    const modelIntrospection = config.modelIntrospection;\n    // model intro schema might be absent if there's not actually a configured GraphQL API\n    if (!modelIntrospection) {\n        return {};\n    }\n    // custom operations will be absent from model intro schema if no custom ops\n    // are present on the source schema.\n    const operations = modelIntrospection[operationsType];\n    if (!operations) {\n        return {};\n    }\n    const ops = {};\n    const useContext = getInternals(client).amplify === null;\n    for (const operation of Object.values(operations)) {\n        ops[operation.name] = customOpFactory(client, modelIntrospection, operationTypeMap[operationsType], operation, useContext, getInternals);\n    }\n    return ops;\n}\nexport function generateCustomMutationsProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'mutations', getInternals);\n}\nexport function generateCustomQueriesProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'queries', getInternals);\n}\nexport function generateCustomSubscriptionsProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'subscriptions', getInternals);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AACA,MAAM,gBAAgB,GAAG;IACrB,OAAO,EAAE,OAAO;IAChB,SAAS,EAAE,UAAU;IACrB,aAAa,EAAE,cAAc;AACjC,CAAC;AACM,SAAS,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE;IAC/F,sFAAA;IACA,wFAAA;IACA,gFAAA;IACI,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,kBAAkB,GAAG,MAAM,CAAC,kBAAkB;IACxD,sFAAA;IACI,IAAI,CAAC,kBAAkB,EAAE;QACrB,OAAO,CAAA,CAAE;IACjB;IACA,4EAAA;IACA,oCAAA;IACI,MAAM,UAAU,GAAG,kBAAkB,CAAC,cAAc,CAAC;IACrD,IAAI,CAAC,UAAU,EAAE;QACb,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,GAAG,GAAG,CAAA,CAAE;IACd,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK,IAAI;IACxD,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAE;QAC/C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAG,8QAAe,EAAC,MAAM,EAAE,kBAAkB,EAAE,gBAAgB,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,CAAC;IAChJ;IACI,OAAO,GAAG;AACd;AACO,SAAS,+BAA+B,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;IAC1E,OAAO,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC;AACtF;AACO,SAAS,6BAA6B,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;IACxE,OAAO,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,CAAC;AACpF;AACO,SAAS,mCAAmC,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;IAC9E,OAAO,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,eAAe,EAAE,YAAY,CAAC;AAC1F","debugId":null}},
    {"offset": {"line": 1759, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/get.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/get.ts"],"sourcesContent":["import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleSingularGraphQlError } from './utils';\nimport { selfAwareAsync } from '../../utils';\nimport { extendCancellability } from '../cancellation';\nimport { createUserAgentOverride } from '../ai/getCustomUserAgentDetails';\nexport function getFactory(client, modelIntrospection, model, operation, getInternals, useContext = false, customUserAgentDetails) {\n    const getWithContext = (contextSpec, arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation, getInternals, contextSpec, customUserAgentDetails);\n    };\n    const get = (arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation, getInternals, undefined, customUserAgentDetails);\n    };\n    return useContext ? getWithContext : get;\n}\nfunction _get(client, modelIntrospection, model, arg, options, operation, getInternals, context, customUserAgentDetails) {\n    return selfAwareAsync(async (resultPromise) => {\n        const { name } = model;\n        const query = generateGraphQLDocument(modelIntrospection, model, operation, options);\n        const variables = buildGraphQLVariables(model, operation, arg, modelIntrospection);\n        const auth = authModeParams(client, getInternals, options);\n        const headers = getCustomHeaders(client, getInternals, options?.headers);\n        const userAgentOverride = createUserAgentOverride(customUserAgentDetails);\n        try {\n            const basePromise = context\n                ? client.graphql(context, {\n                    ...auth,\n                    query,\n                    variables,\n                }, headers)\n                : client.graphql({\n                    ...auth,\n                    query,\n                    variables,\n                    ...userAgentOverride,\n                }, headers);\n            const extendedPromise = extendCancellability(basePromise, resultPromise);\n            const { data, extensions } = await extendedPromise;\n            // flatten response\n            if (data) {\n                const [key] = Object.keys(data);\n                const flattenedResult = flattenItems(modelIntrospection, name, data[key]);\n                if (flattenedResult === null) {\n                    return { data: null, extensions };\n                }\n                else if (options?.selectionSet) {\n                    return { data: flattenedResult, extensions };\n                }\n                else {\n                    // TODO: refactor to avoid destructuring here\n                    const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n                    return { data: initialized, extensions };\n                }\n            }\n            else {\n                return { data: null, extensions };\n            }\n        }\n        catch (error) {\n            /**\n             * The `data` type returned by `error` here could be:\n             * 1) `null`\n             * 2) an empty object\n             * 3) \"populated\" but with a `null` value `{ getPost: null }`\n             * 4) an actual record `{ getPost: { id: '1', title: 'Hello, World!' } }`\n             */\n            const { data, errors } = error;\n            /**\n             * `data` is not `null`, and is not an empty object:\n             */\n            if (data && Object.keys(data).length !== 0 && errors) {\n                const [key] = Object.keys(data);\n                const flattenedResult = flattenItems(modelIntrospection, name, data[key]);\n                /**\n                 * `flattenedResult` could be `null` here (e.g. `data: { getPost: null }`)\n                 * if `flattenedResult`, result is an actual record:\n                 */\n                if (flattenedResult) {\n                    if (options?.selectionSet) {\n                        return { data: flattenedResult, errors };\n                    }\n                    else {\n                        // TODO: refactor to avoid destructuring here\n                        const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n                        return { data: initialized, errors };\n                    }\n                }\n                else {\n                    // was `data: { getPost: null }`)\n                    return handleSingularGraphQlError(error);\n                }\n            }\n            else {\n                // `data` is `null`:\n                return handleSingularGraphQlError(error);\n            }\n        }\n    });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1883, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/list.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/list.ts"],"sourcesContent":["import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleListGraphQlError } from './utils';\nimport { selfAwareAsync } from '../../utils';\nimport { extendCancellability } from '../cancellation';\nimport { createUserAgentOverride } from '../ai/getCustomUserAgentDetails';\nexport function listFactory(client, modelIntrospection, model, getInternals, context = false, customUserAgentDetails) {\n    const listWithContext = (contextSpec, args) => {\n        return _list(client, modelIntrospection, model, getInternals, args, contextSpec, customUserAgentDetails);\n    };\n    const list = (args) => {\n        return _list(client, modelIntrospection, model, getInternals, args, undefined, customUserAgentDetails);\n    };\n    return context ? listWithContext : list;\n}\nfunction _list(client, modelIntrospection, model, getInternals, args, contextSpec, customUserAgentDetails) {\n    return selfAwareAsync(async (resultPromise) => {\n        const { name } = model;\n        const query = generateGraphQLDocument(modelIntrospection, model, 'LIST', args);\n        const variables = buildGraphQLVariables(model, 'LIST', args, modelIntrospection);\n        const auth = authModeParams(client, getInternals, args);\n        const headers = getCustomHeaders(client, getInternals, args?.headers);\n        const userAgentOverride = createUserAgentOverride(customUserAgentDetails);\n        try {\n            const basePromise = contextSpec\n                ? client.graphql(contextSpec, {\n                    ...auth,\n                    query,\n                    variables,\n                }, headers)\n                : client.graphql({\n                    ...auth,\n                    query,\n                    variables,\n                    ...userAgentOverride,\n                }, headers);\n            const extendedPromise = extendCancellability(basePromise, resultPromise);\n            const { data, extensions } = await extendedPromise;\n            // flatten response\n            if (data !== undefined) {\n                const [key] = Object.keys(data);\n                if (data[key].items) {\n                    const flattenedResult = data[key].items.map((value) => flattenItems(modelIntrospection, name, value));\n                    // don't init if custom selection set\n                    if (args?.selectionSet) {\n                        return {\n                            data: flattenedResult,\n                            nextToken: data[key].nextToken,\n                            extensions,\n                        };\n                    }\n                    else {\n                        const initialized = initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n                        return {\n                            data: initialized,\n                            nextToken: data[key].nextToken,\n                            extensions,\n                        };\n                    }\n                }\n                return {\n                    data: data[key],\n                    nextToken: data[key].nextToken,\n                    extensions,\n                };\n            }\n        }\n        catch (error) {\n            /**\n             * The `data` type returned by `error` here could be:\n             * 1) `null`\n             * 2) an empty object\n             * 3) \"populated\" but with a `null` value `data: { listPosts: null }`\n             * 4) actual records `data: { listPosts: items: [{ id: '1', ...etc }] }`\n             */\n            const { data, errors } = error;\n            // `data` is not `null`, and is not an empty object:\n            if (data !== undefined &&\n                data !== null &&\n                Object.keys(data).length !== 0 &&\n                errors) {\n                const [key] = Object.keys(data);\n                if (data[key]?.items) {\n                    const flattenedResult = data[key].items.map((value) => flattenItems(modelIntrospection, name, value));\n                    /**\n                     * Check exists since `flattenedResult` could be `null`.\n                     * if `flattenedResult` exists, result is an actual record.\n                     */\n                    if (flattenedResult) {\n                        // don't init if custom selection set\n                        if (args?.selectionSet) {\n                            return {\n                                data: flattenedResult,\n                                nextToken: data[key]?.nextToken,\n                                errors,\n                            };\n                        }\n                        else {\n                            const initialized = initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n                            // data is full record w/out selection set:\n                            return {\n                                data: initialized,\n                                nextToken: data[key]?.nextToken,\n                                errors,\n                            };\n                        }\n                    }\n                    return {\n                        data: data[key],\n                        nextToken: data[key]?.nextToken,\n                        errors,\n                    };\n                }\n                else {\n                    // response is of type `data: { getPost: null }`)\n                    return handleListGraphQlError(error);\n                }\n            }\n            else {\n                // `data` is `null` or an empty object:\n                return handleListGraphQlError(error);\n            }\n        }\n    });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2015, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/conversationMessageDeserializers.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/conversationMessageDeserializers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromBase64 } from '@smithy/util-base64';\nexport const deserializeContent = (content) => content.map((block) => {\n    if (block.image) {\n        return deserializeImageBlock(block);\n    }\n    if (block.document) {\n        return deserializeDocumentBlock(block);\n    }\n    if (block.toolUse) {\n        return deserializeToolUseBlock(block);\n    }\n    if (block.toolResult) {\n        return deserializeToolResultBlock(block);\n    }\n    return removeNullsFromBlock(block);\n});\nconst deserializeImageBlock = ({ image }) => ({\n    image: {\n        ...image,\n        source: {\n            ...image.source,\n            bytes: fromBase64(image.source.bytes),\n        },\n    },\n});\nconst deserializeDocumentBlock = ({ document }) => ({\n    document: {\n        ...document,\n        source: {\n            ...document.source,\n            bytes: fromBase64(document.source.bytes),\n        },\n    },\n});\nconst deserializeJsonBlock = ({ json }) => ({\n    json: JSON.parse(json),\n});\nconst deserializeToolUseBlock = ({ toolUse }) => ({\n    toolUse: {\n        ...toolUse,\n        input: JSON.parse(toolUse.input),\n    },\n});\nconst deserializeToolResultBlock = ({ toolResult, }) => ({\n    toolResult: {\n        toolUseId: toolResult.toolUseId,\n        content: toolResult.content.map((toolResultBlock) => {\n            if (toolResultBlock.image) {\n                return deserializeImageBlock(toolResultBlock);\n            }\n            if (toolResultBlock.json) {\n                return deserializeJsonBlock(toolResultBlock);\n            }\n            return removeNullsFromBlock(toolResultBlock);\n        }),\n    },\n});\nconst removeNullsFromBlock = (block) => Object.fromEntries(Object.entries(block).filter(([_, v]) => v !== null));\n"],"names":[],"mappings":";;;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,kBAAkB,GAAG,CAAC,OAAO,GAAK,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;QAClE,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,OAAO,qBAAqB,CAAC,KAAK,CAAC;QAC3C;QACI,IAAI,KAAK,CAAC,QAAQ,EAAE;YAChB,OAAO,wBAAwB,CAAC,KAAK,CAAC;QAC9C;QACI,IAAI,KAAK,CAAC,OAAO,EAAE;YACf,OAAO,uBAAuB,CAAC,KAAK,CAAC;QAC7C;QACI,IAAI,KAAK,CAAC,UAAU,EAAE;YAClB,OAAO,0BAA0B,CAAC,KAAK,CAAC;QAChD;QACI,OAAO,oBAAoB,CAAC,KAAK,CAAC;IACtC,CAAC;AACD,MAAM,qBAAqB,GAAG;QAAC,EAAE,KAAK,EAAE;WAAM;QAC1C,KAAK,EAAE;YACH,GAAG,KAAK;YACR,MAAM,EAAE;gBACJ,GAAG,KAAK,CAAC,MAAM;gBACf,KAAK,MAAE,wOAAU,EAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACjD,CAAS;QACT,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,wBAAwB,GAAG;QAAC,EAAE,QAAQ,EAAE;WAAM;QAChD,QAAQ,EAAE;YACN,GAAG,QAAQ;YACX,MAAM,EAAE;gBACJ,GAAG,QAAQ,CAAC,MAAM;gBAClB,KAAK,MAAE,wOAAU,EAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YACpD,CAAS;QACT,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,oBAAoB,GAAG;QAAC,EAAE,IAAI,EAAE;WAAM;QACxC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC;;AACF,MAAM,uBAAuB,GAAG;QAAC,EAAE,OAAO,EAAE;WAAM;QAC9C,OAAO,EAAE;YACL,GAAG,OAAO;YACV,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QACxC,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,0BAA0B,GAAG;QAAC,EAAE,UAAU,EAAG;WAAM;QACrD,UAAU,EAAE;YACR,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,eAAe,KAAK;gBACjD,IAAI,eAAe,CAAC,KAAK,EAAE;oBACvB,OAAO,qBAAqB,CAAC,eAAe,CAAC;gBAC7D;gBACY,IAAI,eAAe,CAAC,IAAI,EAAE;oBACtB,OAAO,oBAAoB,CAAC,eAAe,CAAC;gBAC5D;gBACY,OAAO,oBAAoB,CAAC,eAAe,CAAC;YACxD,CAAS,CAAC;QACV,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,oBAAoB,GAAG,CAAC,KAAK,GAAK,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;YAAC,CAAC,CAAC,EAAE,CAAC,CAAC;eAAK,CAAC,KAAK,IAAI,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2105, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/convertItemToConversationMessage.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/convertItemToConversationMessage.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { deserializeContent } from './conversationMessageDeserializers';\nexport const convertItemToConversationMessage = ({ content, createdAt, id, conversationId, role, }) => ({\n    content: deserializeContent(content ?? []),\n    conversationId,\n    createdAt,\n    id,\n    role,\n});\n"],"names":[],"mappings":";;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,gCAAgC,GAAG;QAAC,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,cAAc,EAAE,IAAI,EAAG;WAAM;QACpG,OAAO,MAAE,mSAAkB,2CAAC,OAAO,GAAI,EAAE,CAAC;QAC1C,cAAc;QACd,SAAS;QACT,EAAE;QACF,IAAI;IACR,CAAC","debugId":null}},
    {"offset": {"line": 2129, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createListMessagesFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createListMessagesFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { listFactory } from '../operations/list';\nimport { convertItemToConversationMessage } from './convertItemToConversationMessage';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createListMessagesFunction = (client, modelIntrospection, conversationId, conversationMessageModel, getInternals) => async (input) => {\n    const list = listFactory(client, modelIntrospection, conversationMessageModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListMessages));\n    const { data, nextToken, errors } = await list({\n        ...input,\n        filter: { conversationId: { eq: conversationId } },\n    });\n    return {\n        data: data.map((item) => convertItemToConversationMessage(item)),\n        nextToken,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,0BAA0B,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,wBAAwB,EAAE,YAAY,GAAK,OAAO,KAAK,KAAK;QAC/I,MAAM,IAAI,OAAG,wQAAW,EAAC,MAAM,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,YAAY,CAAC,CAAC;QACrJ,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC;YAC3C,GAAG,KAAK;YACR,MAAM,EAAE;gBAAE,cAAc,EAAE;oBAAE,EAAE,EAAE,cAAc;gBAAA,CAAE;YAAA,CAAE;QAC1D,CAAK,CAAC;QACF,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,OAAK,iTAAgC,EAAC,IAAI,CAAC,CAAC;YAChE,SAAS;YACT,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/conversationStreamEventDeserializers.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/conversationStreamEventDeserializers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const convertItemToConversationStreamEvent = ({ id, conversationId, associatedUserMessageId, contentBlockIndex, contentBlockDoneAtIndex, contentBlockDeltaIndex, contentBlockText, contentBlockToolUse, stopReason, errors, }) => {\n    if (errors) {\n        const error = {\n            id,\n            conversationId,\n            associatedUserMessageId,\n            errors,\n        };\n        return { error };\n    }\n    const next = removeNullsFromConversationStreamEvent({\n        id,\n        conversationId,\n        associatedUserMessageId,\n        contentBlockIndex,\n        contentBlockDoneAtIndex,\n        contentBlockDeltaIndex,\n        text: contentBlockText,\n        toolUse: deserializeToolUseBlock(contentBlockToolUse),\n        stopReason,\n    });\n    return { next };\n};\nconst deserializeToolUseBlock = (contentBlockToolUse) => {\n    if (contentBlockToolUse) {\n        const toolUseBlock = {\n            ...contentBlockToolUse,\n            input: JSON.parse(contentBlockToolUse.input),\n        };\n        return toolUseBlock;\n    }\n};\nconst removeNullsFromConversationStreamEvent = (block) => Object.fromEntries(Object.entries(block).filter(([_, v]) => v !== null));\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACY,MAAC,oCAAoC,GAAG;QAAC,EAAE,EAAE,EAAE,cAAc,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,sBAAsB,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,EAAG,KAAK;IACrO,IAAI,MAAM,EAAE;QACR,MAAM,KAAK,GAAG;YACV,EAAE;YACF,cAAc;YACd,uBAAuB;YACvB,MAAM;QAClB,CAAS;QACD,OAAO;YAAE,KAAK;QAAA,CAAE;IACxB;IACI,MAAM,IAAI,GAAG,sCAAsC,CAAC;QAChD,EAAE;QACF,cAAc;QACd,uBAAuB;QACvB,iBAAiB;QACjB,uBAAuB;QACvB,sBAAsB;QACtB,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE,uBAAuB,CAAC,mBAAmB,CAAC;QACrD,UAAU;IAClB,CAAK,CAAC;IACF,OAAO;QAAE,IAAI;IAAA,CAAE;AACnB;AACA,MAAM,uBAAuB,GAAG,CAAC,mBAAmB,KAAK;IACrD,IAAI,mBAAmB,EAAE;QACrB,MAAM,YAAY,GAAG;YACjB,GAAG,mBAAmB;YACtB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACxD,CAAS;QACD,OAAO,YAAY;IAC3B;AACA,CAAC;AACD,MAAM,sCAAsC,GAAG,CAAC,KAAK,GAAK,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;YAAC,CAAC,CAAC,EAAE,CAAC,CAAC;eAAK,CAAC,KAAK,IAAI,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2216, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createOnStreamEventFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createOnStreamEventFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { customOpFactory } from '../operations/custom';\nimport { AiAction, getCustomUserAgentDetails } from './getCustomUserAgentDetails';\nimport { convertItemToConversationStreamEvent } from './conversationStreamEventDeserializers';\nexport const createOnStreamEventFunction = (client, modelIntrospection, conversationId, conversationRouteName, getInternals) => (handler) => {\n    const { conversations } = modelIntrospection;\n    // Safe guard for standalone function. When called as part of client generation, this should never be falsy.\n    if (!conversations) {\n        return {};\n    }\n    const subscribeSchema = conversations[conversationRouteName].message.subscribe;\n    const subscribeOperation = customOpFactory(client, modelIntrospection, 'subscription', subscribeSchema, false, getInternals, getCustomUserAgentDetails(AiAction.OnStreamEvent));\n    return subscribeOperation({ conversationId }).subscribe((data) => {\n        const { next, error } = convertItemToConversationStreamEvent(data);\n        if (error)\n            handler.error(error);\n        if (next)\n            handler.next(next);\n    });\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,2BAA2B,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,qBAAqB,EAAE,YAAY,GAAK,CAAC,OAAO,KAAK;QACzI,MAAM,EAAE,aAAa,EAAE,GAAG,kBAAkB;QAChD,4GAAA;QACI,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO,CAAA,CAAE;QACjB;QACI,MAAM,eAAe,GAAG,aAAa,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,SAAS;QAC9E,MAAM,kBAAkB,OAAG,8QAAe,EAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,eAAe,EAAE,KAAK,EAAE,YAAY,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,aAAa,CAAC,CAAC;QAC/K,OAAO,kBAAkB,CAAC;YAAE,cAAc;QAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK;YAC9D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAG,yTAAoC,EAAC,IAAI,CAAC;YAClE,IAAI,KAAK,EACL,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YACxB,IAAI,IAAI,EACJ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,CAAK,CAAC;IACN","debugId":null}},
    {"offset": {"line": 2250, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/conversationMessageSerializers.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/conversationMessageSerializers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { toBase64 } from '@smithy/util-base64';\nexport const serializeAiContext = (aiContext) => JSON.stringify(aiContext);\nexport const serializeContent = (content) => content.map((block) => {\n    if (block.image) {\n        return serializeImageBlock(block);\n    }\n    if (block.document) {\n        return serializeDocumentBlock(block);\n    }\n    if (block.toolResult) {\n        return serializeToolResultBlock(block);\n    }\n    return block;\n});\nexport const serializeToolConfiguration = ({ tools }) => ({\n    tools: Object.entries(tools).map(([name, tool]) => ({\n        toolSpec: {\n            name,\n            description: tool.description,\n            inputSchema: {\n                json: JSON.stringify(tool.inputSchema.json),\n            },\n        },\n    })),\n});\nconst serializeImageBlock = ({ image }) => ({\n    image: {\n        ...image,\n        source: {\n            ...image.source,\n            bytes: toBase64(image.source.bytes),\n        },\n    },\n});\nconst serializeDocumentBlock = ({ document, }) => ({\n    document: {\n        ...document,\n        source: {\n            ...document.source,\n            bytes: toBase64(document.source.bytes),\n        },\n    },\n});\nconst serializeJsonBlock = ({ json }) => ({\n    json: JSON.stringify(json),\n});\nconst serializeToolResultBlock = ({ toolResult, }) => ({\n    toolResult: {\n        ...toolResult,\n        content: toolResult.content.map((toolResultBlock) => {\n            if (toolResultBlock.image) {\n                return serializeImageBlock(toolResultBlock);\n            }\n            if (toolResultBlock.json) {\n                return serializeJsonBlock(toolResultBlock);\n            }\n            return toolResultBlock;\n        }),\n    },\n});\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAEY,MAAC,kBAAkB,GAAG,CAAC,SAAS,GAAK,IAAI,CAAC,SAAS,CAAC,SAAS;AAC7D,MAAC,gBAAgB,GAAG,CAAC,OAAO,GAAK,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;QAChE,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,OAAO,mBAAmB,CAAC,KAAK,CAAC;QACzC;QACI,IAAI,KAAK,CAAC,QAAQ,EAAE;YAChB,OAAO,sBAAsB,CAAC,KAAK,CAAC;QAC5C;QACI,IAAI,KAAK,CAAC,UAAU,EAAE;YAClB,OAAO,wBAAwB,CAAC,KAAK,CAAC;QAC9C;QACI,OAAO,KAAK;IAChB,CAAC;AACW,MAAC,0BAA0B,GAAG;QAAC,EAAE,KAAK,EAAE;WAAM;QACtD,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;gBAAC,CAAC,IAAI,EAAE,IAAI,CAAC;mBAAM;gBAChD,QAAQ,EAAE;oBACN,IAAI;oBACJ,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,WAAW,EAAE;wBACT,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBAC3D,CAAa;gBACb,CAAS;YACT,CAAK,CAAC,CAAC;;IACP,CAAC;;AACD,MAAM,mBAAmB,GAAG;QAAC,EAAE,KAAK,EAAE;WAAM;QACxC,KAAK,EAAE;YACH,GAAG,KAAK;YACR,MAAM,EAAE;gBACJ,GAAG,KAAK,CAAC,MAAM;gBACf,KAAK,MAAE,oOAAQ,EAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAC/C,CAAS;QACT,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,sBAAsB,GAAG;QAAC,EAAE,QAAQ,EAAG;WAAM;QAC/C,QAAQ,EAAE;YACN,GAAG,QAAQ;YACX,MAAM,EAAE;gBACJ,GAAG,QAAQ,CAAC,MAAM;gBAClB,KAAK,MAAE,oOAAQ,EAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAClD,CAAS;QACT,CAAK;IACL,CAAC,CAAC;;AACF,MAAM,kBAAkB,GAAG;QAAC,EAAE,IAAI,EAAE;WAAM;QACtC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;;AACF,MAAM,wBAAwB,GAAG;QAAC,EAAE,UAAU,EAAG;WAAM;QACnD,UAAU,EAAE;YACR,GAAG,UAAU;YACb,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,eAAe,KAAK;gBACjD,IAAI,eAAe,CAAC,KAAK,EAAE;oBACvB,OAAO,mBAAmB,CAAC,eAAe,CAAC;gBAC3D;gBACY,IAAI,eAAe,CAAC,IAAI,EAAE;oBACtB,OAAO,kBAAkB,CAAC,eAAe,CAAC;gBAC1D;gBACY,OAAO,eAAe;YAClC,CAAS,CAAC;QACV,CAAK;IACL,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2346, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createSendMessageFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createSendMessageFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { customOpFactory } from '../operations/custom';\nimport { convertItemToConversationMessage } from './convertItemToConversationMessage';\nimport { serializeAiContext, serializeContent, serializeToolConfiguration, } from './conversationMessageSerializers';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createSendMessageFunction = (client, modelIntrospection, conversationId, conversationRouteName, getInternals) => async (input) => {\n    const { conversations } = modelIntrospection;\n    // Safe guard for standalone function. When called as part of client generation, this should never be falsy.\n    if (!conversations) {\n        return {};\n    }\n    const processedInput = typeof input === 'string' ? { content: [{ text: input }] } : input;\n    const { content, aiContext, toolConfiguration } = processedInput;\n    const sendSchema = conversations[conversationRouteName].message.send;\n    const sendOperation = customOpFactory(client, modelIntrospection, 'mutation', sendSchema, false, getInternals, getCustomUserAgentDetails(AiAction.SendMessage));\n    const { data, errors } = await sendOperation({\n        conversationId,\n        content: serializeContent(content),\n        ...(aiContext && { aiContext: serializeAiContext(aiContext) }),\n        ...(toolConfiguration && {\n            toolConfiguration: serializeToolConfiguration(toolConfiguration),\n        }),\n    });\n    return {\n        data: data ? convertItemToConversationMessage(data) : data,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAKY,MAAC,yBAAyB,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,qBAAqB,EAAE,YAAY,GAAK,OAAO,KAAK,KAAK;QAC3I,MAAM,EAAE,aAAa,EAAE,GAAG,kBAAkB;QAChD,4GAAA;QACI,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO,CAAA,CAAE;QACjB;QACI,MAAM,cAAc,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG;YAAE,OAAO,EAAE;gBAAC;oBAAE,IAAI,EAAE,KAAK;gBAAA,CAAE;aAAC;QAAA,CAAE,GAAG,KAAK;QACzF,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,GAAG,cAAc;QAChE,MAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,IAAI;QACpE,MAAM,aAAa,OAAG,8QAAe,EAAC,MAAM,EAAE,kBAAkB,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,WAAW,CAAC,CAAC;QAC/J,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,aAAa,CAAC;YACzC,cAAc;YACd,OAAO,MAAE,+RAAgB,EAAC,OAAO,CAAC;YAClC,GAAI,SAAS,IAAI;gBAAE,SAAS,MAAE,iSAAkB,EAAC,SAAS,CAAC;YAAA,CAAE,CAAC;YAC9D,GAAI,iBAAiB,IAAI;gBACrB,iBAAiB,MAAE,ySAA0B,EAAC,iBAAiB,CAAC;YAC5E,CAAS,CAAC;QACV,CAAK,CAAC;QACF,OAAO;YACH,IAAI,EAAE,IAAI,OAAG,iTAAgC,EAAC,IAAI,CAAC,GAAG,IAAI;YAC1D,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2397, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/convertItemToConversation.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/convertItemToConversation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createListMessagesFunction } from './createListMessagesFunction';\nimport { createOnStreamEventFunction } from './createOnStreamEventFunction';\nimport { createSendMessageFunction } from './createSendMessageFunction';\nexport const convertItemToConversation = (client, modelIntrospection, conversationId, conversationCreatedAt, conversationUpdatedAt, conversationRouteName, conversationMessageModel, getInternals, conversationMetadata, conversationName) => {\n    if (!conversationId) {\n        throw new Error(`An error occurred converting a ${conversationRouteName} conversation: Missing ID`);\n    }\n    return {\n        id: conversationId,\n        createdAt: conversationCreatedAt,\n        updatedAt: conversationUpdatedAt,\n        metadata: conversationMetadata,\n        name: conversationName,\n        onStreamEvent: createOnStreamEventFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        sendMessage: createSendMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        listMessages: createListMessagesFunction(client, modelIntrospection, conversationId, conversationMessageModel, getInternals),\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,yBAAyB,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,EAAE,oBAAoB,EAAE,gBAAgB,KAAK;IAC1O,IAAI,CAAC,cAAc,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,AAAC,+BAA+B,UAAE,qBAAqB,EAAC,yBAAyB,CAAC,CAAC;IAC3G;IACI,OAAO;QACH,EAAE,EAAE,cAAc;QAClB,SAAS,EAAE,qBAAqB;QAChC,SAAS,EAAE,qBAAqB;QAChC,QAAQ,EAAE,oBAAoB;QAC9B,IAAI,EAAE,gBAAgB;QACtB,aAAa,MAAE,uSAA2B,EAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,qBAAqB,EAAE,YAAY,CAAC;QAC3H,WAAW,MAAE,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,qBAAqB,EAAE,YAAY,CAAC;QACvH,YAAY,MAAE,qSAA0B,EAAC,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,wBAAwB,EAAE,YAAY,CAAC;IACpI,CAAK;AACL","debugId":null}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createCreateConversationFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createCreateConversationFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getFactory } from '../operations/get';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createCreateConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async (input) => {\n    const { name, metadata: metadataObject } = input ?? {};\n    const metadata = JSON.stringify(metadataObject);\n    const createOperation = getFactory(client, modelIntrospection, conversationModel, 'CREATE', getInternals, false, getCustomUserAgentDetails(AiAction.CreateConversation));\n    const { data, errors } = await createOperation({ name, metadata });\n    return {\n        data: convertItemToConversation(client, modelIntrospection, data?.id, data?.createdAt, data?.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name),\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,gCAAgC,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,GAAK,OAAO,KAAK,KAAK;QAC/K,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,wCAAG,KAAK,GAAI,CAAA,CAAE;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;QAC/C,MAAM,eAAe,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,kBAAkB,CAAC,CAAC;QACxK,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,eAAe,CAAC;YAAE,IAAI;YAAE,QAAQ;QAAA,CAAE,CAAC;QAClE,OAAO;YACH,IAAI,MAAE,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,8CAAE,IAAI,CAAE,EAAE,8CAAE,IAAI,CAAE,SAAS,8CAAE,IAAI,CAAE,SAAS,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,8CAAE,IAAI,CAAE,QAAQ,8CAAE,IAAI,CAAE,IAAI,CAAC;YAClM,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createGetConversationFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createGetConversationFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getFactory } from '../operations/get';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createGetConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async ({ id }) => {\n    const get = getFactory(client, modelIntrospection, conversationModel, 'GET', getInternals, false, getCustomUserAgentDetails(AiAction.GetConversation));\n    const { data, errors } = await get({ id });\n    return {\n        data: data\n            ? convertItemToConversation(client, modelIntrospection, data.id, data.createdAt, data.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name)\n            : data,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,6BAA6B,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,GAAK;YAAO,EAAE,EAAE,EAAE,KAAK;QAC7K,MAAM,GAAG,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,eAAe,CAAC,CAAC;QACtJ,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,GAAG,CAAC;YAAE,EAAE;QAAA,CAAE,CAAC;QAC1C,OAAO;YACH,IAAI,EAAE,WACA,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,8CAAE,IAAI,CAAE,QAAQ,8CAAE,IAAI,CAAE,IAAI,IACxL,IAAI;YACV,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createListConversationsFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createListConversationsFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { listFactory } from '../operations/list';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createListConversationsFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async (input) => {\n    const list = listFactory(client, modelIntrospection, conversationModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListConversations));\n    const { data, nextToken, errors } = await list(input);\n    return {\n        data: data.map((datum) => {\n            return convertItemToConversation(client, modelIntrospection, datum.id, datum.createdAt, datum.updatedAt, conversationRouteName, conversationMessageModel, getInternals, datum?.metadata, datum?.name);\n        }),\n        nextToken,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,+BAA+B,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,GAAK,OAAO,KAAK,KAAK;QAC9K,MAAM,IAAI,OAAG,wQAAW,EAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,iBAAiB,CAAC,CAAC;QACnJ,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC;QACrD,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;gBACtB,WAAO,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,gDAAE,KAAK,CAAE,QAAQ,gDAAE,KAAK,CAAE,IAAI,CAAC;YACjN,CAAS,CAAC;YACF,SAAS;YACT,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2519, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createDeleteConversationFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createDeleteConversationFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getFactory } from '../operations/get';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createDeleteConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async ({ id }) => {\n    const deleteOperation = getFactory(client, modelIntrospection, conversationModel, 'DELETE', getInternals, false, getCustomUserAgentDetails(AiAction.DeleteConversation));\n    const { data, errors } = await deleteOperation({ id });\n    return {\n        data: data\n            ? convertItemToConversation(client, modelIntrospection, data?.id, data?.createdAt, data?.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name)\n            : data,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,gCAAgC,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,GAAK;YAAO,EAAE,EAAE,EAAE,KAAK;QAChL,MAAM,eAAe,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,kBAAkB,CAAC,CAAC;QACxK,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,eAAe,CAAC;YAAE,EAAE;QAAA,CAAE,CAAC;QACtD,OAAO;YACH,IAAI,EAAE,WACA,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,8CAAE,IAAI,CAAE,EAAE,8CAAE,IAAI,CAAE,SAAS,8CAAE,IAAI,CAAE,SAAS,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,8CAAE,IAAI,CAAE,QAAQ,8CAAE,IAAI,CAAE,IAAI,IAC3L,IAAI;YACV,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2548, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/ai/createUpdateConversationFunction.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/ai/createUpdateConversationFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getFactory } from '../operations/get';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createUpdateConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async ({ id, metadata: metadataObject, name }) => {\n    const metadata = JSON.stringify(metadataObject);\n    const updateOperation = getFactory(client, modelIntrospection, conversationModel, 'UPDATE', getInternals, false, getCustomUserAgentDetails(AiAction.UpdateConversation));\n    const { data, errors } = await updateOperation({ id, metadata, name });\n    return {\n        data: data\n            ? convertItemToConversation(client, modelIntrospection, data?.id, data?.createdAt, data?.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name)\n            : data,\n        errors,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIY,MAAC,gCAAgC,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,GAAK;YAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK;QAChN,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;QAC/C,MAAM,eAAe,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,kBAAkB,CAAC,CAAC;QACxK,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,eAAe,CAAC;YAAE,EAAE;YAAE,QAAQ;YAAE,IAAI;QAAA,CAAE,CAAC;QACtE,OAAO;YACH,IAAI,EAAE,WACA,mSAAyB,EAAC,MAAM,EAAE,kBAAkB,8CAAE,IAAI,CAAE,EAAE,8CAAE,IAAI,CAAE,SAAS,8CAAE,IAAI,CAAE,SAAS,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,YAAY,8CAAE,IAAI,CAAE,QAAQ,8CAAE,IAAI,CAAE,IAAI,IAC3L,IAAI;YACV,MAAM;QACd,CAAK;IACL","debugId":null}},
    {"offset": {"line": 2580, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/utils/clientProperties/generateConversationsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateConversationsProperty.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createCreateConversationFunction } from '../../ai/createCreateConversationFunction';\nimport { createGetConversationFunction } from '../../ai/createGetConversationFunction';\nimport { createListConversationsFunction } from '../../ai/createListConversationsFunction';\nimport { createDeleteConversationFunction } from '../../ai/createDeleteConversationFunction';\nimport { createUpdateConversationFunction } from '../../ai/createUpdateConversationFunction';\nexport function generateConversationsProperty(client, apiGraphQLConfig, getInternals) {\n    const modelIntrospection = apiGraphQLConfig?.modelIntrospection;\n    // conversations will be absent from model intro schema if no conversation routes\n    // are present on the source schema.\n    if (!modelIntrospection?.conversations) {\n        return {};\n    }\n    const conversations = {};\n    for (const { name, conversation, message, models, nonModels, enums, } of Object.values(modelIntrospection.conversations)) {\n        const conversationModel = models[conversation.modelName];\n        const conversationMessageModel = models[message.modelName];\n        if (!conversationModel || !conversationMessageModel) {\n            return {};\n        }\n        const conversationModelIntrospection = {\n            ...modelIntrospection,\n            models: {\n                ...modelIntrospection.models,\n                ...models,\n            },\n            nonModels: {\n                ...modelIntrospection.nonModels,\n                ...nonModels,\n            },\n            enums: {\n                ...modelIntrospection.enums,\n                ...enums,\n            },\n        };\n        conversations[name] = {\n            update: createUpdateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            create: createCreateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            get: createGetConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            delete: createDeleteConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            list: createListConversationsFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n        };\n    }\n    return conversations;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAMO,SAAS,6BAA6B,CAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,EAAE;IAClF,MAAM,kBAAkB,uEAAG,gBAAgB,CAAE,kBAAkB;IACnE,iFAAA;IACA,oCAAA;IACI,IAAI,0EAAC,kBAAkB,CAAE,aAAa,GAAE;QACpC,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,aAAa,GAAG,CAAA,CAAE;IACxB,KAAK,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAG,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAE;QACtH,MAAM,iBAAiB,GAAG,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;QACxD,MAAM,wBAAwB,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,iBAAiB,IAAI,CAAC,wBAAwB,EAAE;YACjD,OAAO,CAAA,CAAE;QACrB;QACQ,MAAM,8BAA8B,GAAG;YACnC,GAAG,kBAAkB;YACrB,MAAM,EAAE;gBACJ,GAAG,kBAAkB,CAAC,MAAM;gBAC5B,GAAG,MAAM;YACzB,CAAa;YACD,SAAS,EAAE;gBACP,GAAG,kBAAkB,CAAC,SAAS;gBAC/B,GAAG,SAAS;YAC5B,CAAa;YACD,KAAK,EAAE;gBACH,GAAG,kBAAkB,CAAC,KAAK;gBAC3B,GAAG,KAAK;YACxB,CAAa;QACb,CAAS;QACD,aAAa,CAAC,IAAI,CAAC,GAAG;YAClB,MAAM,MAAE,iTAAgC,EAAC,MAAM,EAAE,8BAA8B,EAAE,IAAI,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,CAAC;YACjJ,MAAM,MAAE,iTAAgC,EAAC,MAAM,EAAE,8BAA8B,EAAE,IAAI,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,CAAC;YACjJ,GAAG,MAAE,2SAA6B,EAAC,MAAM,EAAE,8BAA8B,EAAE,IAAI,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,CAAC;YAC3I,MAAM,MAAE,iTAAgC,EAAC,MAAM,EAAE,8BAA8B,EAAE,IAAI,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,CAAC;YACjJ,IAAI,MAAE,+SAA+B,EAAC,MAAM,EAAE,8BAA8B,EAAE,IAAI,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,YAAY,CAAC;QAC1J,CAAS;IACT;IACI,OAAO,aAAa;AACxB","debugId":null}},
    {"offset": {"line": 2641, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/utils/clientProperties/generateGenerationsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateGenerationsProperty.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { customOpFactory } from '../../operations/custom';\nimport { AiAction, getCustomUserAgentDetails, } from '../../ai/getCustomUserAgentDetails';\nexport function generateGenerationsProperty(client, apiGraphQLConfig, getInternals) {\n    const modelIntrospection = apiGraphQLConfig?.modelIntrospection;\n    // generations will be absent from model intro schema if no generation routes\n    // are present on the source schema.\n    if (!modelIntrospection?.generations) {\n        return {};\n    }\n    const generations = {};\n    for (const generation of Object.values(modelIntrospection.generations)) {\n        generations[generation.name] = customOpFactory(client, modelIntrospection, 'query', generation, false, getInternals, getCustomUserAgentDetails(AiAction.Generation));\n    }\n    return generations;\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGO,SAAS,2BAA2B,CAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,EAAE;IAChF,MAAM,kBAAkB,uEAAG,gBAAgB,CAAE,kBAAkB;IACnE,6EAAA;IACA,oCAAA;IACI,IAAI,0EAAC,kBAAkB,CAAE,WAAW,GAAE;QAClC,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,WAAW,GAAG,CAAA,CAAE;IACtB,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAE;QACpE,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAG,8QAAe,EAAC,MAAM,EAAE,kBAAkB,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,MAAE,mSAAyB,EAAC,kRAAQ,CAAC,UAAU,CAAC,CAAC;IAC5K;IACI,OAAO,WAAW;AACtB","debugId":null}},
    {"offset": {"line": 2670, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/utils/clientProperties/generateEnumsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateEnumsProperty.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const generateEnumsProperty = (graphqlConfig) => {\n    const modelIntrospection = graphqlConfig.modelIntrospection;\n    if (!modelIntrospection) {\n        return {};\n    }\n    const enums = {};\n    for (const [_, enumData] of Object.entries(modelIntrospection.enums)) {\n        enums[enumData.name] = {\n            values: () => enumData.values,\n        };\n    }\n    return enums;\n};\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACY,MAAC,qBAAqB,GAAG,CAAC,aAAa,KAAK;IACpD,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB;IAC3D,IAAI,CAAC,kBAAkB,EAAE;QACrB,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,KAAK,GAAG,CAAA,CAAE;IAChB,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAE;QAClE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG;YACnB,MAAM,EAAE,IAAM,QAAQ,CAAC,MAAM;QACzC,CAAS;IACT;IACI,OAAO,KAAK;AAChB","debugId":null}},
    {"offset": {"line": 2695, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/indexQuery.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/indexQuery.ts"],"sourcesContent":["import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleListGraphQlError } from './utils';\nimport { selfAwareAsync } from '../../utils';\nimport { extendCancellability } from '../cancellation';\nexport function indexQueryFactory(client, modelIntrospection, model, indexMeta, getInternals, context = false) {\n    const indexQueryWithContext = (contextSpec, args, options) => {\n        return _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, {\n            ...args,\n            ...options,\n        }, contextSpec);\n    };\n    const indexQuery = (args, options) => {\n        return _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, {\n            ...args,\n            ...options,\n        });\n    };\n    return context ? indexQueryWithContext : indexQuery;\n}\nfunction processGraphQlResponse(modelIntroSchema, modelName, result, selectionSet, modelInitializer) {\n    const { data, extensions } = result;\n    const [key] = Object.keys(data);\n    if (data[key].items) {\n        const flattenedResult = data[key].items.map((value) => flattenItems(modelIntroSchema, modelName, value));\n        return {\n            data: selectionSet ? flattenedResult : modelInitializer(flattenedResult),\n            nextToken: data[key].nextToken,\n            extensions,\n        };\n    }\n    // Index queries are always list queries. No `items`? No flattening needed.\n    return {\n        data: data[key],\n        nextToken: data[key].nextToken,\n        extensions,\n    };\n}\nfunction _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, args, contextSpec) {\n    return selfAwareAsync(async (resultPromise) => {\n        const { name } = model;\n        const query = generateGraphQLDocument(modelIntrospection, model, 'INDEX_QUERY', args, indexMeta);\n        const variables = buildGraphQLVariables(model, 'INDEX_QUERY', args, modelIntrospection, indexMeta);\n        const auth = authModeParams(client, getInternals, args);\n        const modelInitializer = (flattenedResult) => initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n        try {\n            const headers = getCustomHeaders(client, getInternals, args?.headers);\n            const graphQlParams = {\n                ...auth,\n                query,\n                variables,\n            };\n            const requestArgs = [graphQlParams, headers];\n            if (contextSpec !== undefined) {\n                requestArgs.unshift(contextSpec);\n            }\n            const basePromise = client.graphql(...requestArgs);\n            const extendedPromise = extendCancellability(basePromise, resultPromise);\n            const response = await extendedPromise;\n            if (response.data !== undefined) {\n                return processGraphQlResponse(modelIntrospection, name, response, args?.selectionSet, modelInitializer);\n            }\n        }\n        catch (error) {\n            /**\n             * The `data` type returned by `error` here could be:\n             * 1) `null`\n             * 2) an empty object\n             * 3) \"populated\" but with a `null` value:\n             *   `data: { listByExampleId: null }`\n             * 4) an actual record:\n             *   `data: { listByExampleId: items: [{ id: '1', ...etc } }]`\n             */\n            const { data, errors } = error;\n            // `data` is not `null`, and is not an empty object:\n            if (data !== undefined &&\n                data !== null &&\n                Object.keys(data).length !== 0 &&\n                errors) {\n                const [key] = Object.keys(data);\n                if (data[key]?.items) {\n                    const flattenedResult = data[key]?.items.map((value) => flattenItems(modelIntrospection, name, value));\n                    /**\n                     * Check exists since `flattenedResult` could be `null`.\n                     * if `flattenedResult` exists, result is an actual record.\n                     */\n                    if (flattenedResult) {\n                        return {\n                            data: args?.selectionSet\n                                ? flattenedResult\n                                : modelInitializer(flattenedResult),\n                            nextToken: data[key]?.nextToken,\n                        };\n                    }\n                }\n                // response is of type `data: { listByExampleId: null }`\n                return {\n                    data: data[key],\n                    nextToken: data[key]?.nextToken,\n                };\n            }\n            else {\n                // `data` is `null` or an empty object:\n                return handleListGraphQlError(error);\n            }\n        }\n    });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2814, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/subscription.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/subscription.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { authModeParams, buildGraphQLVariables, generateGraphQLDocument, getCustomHeaders, initializeModel, flattenItems, } from '../APIClient';\nexport function subscriptionFactory(client, modelIntrospection, model, operation, getInternals) {\n    const { name } = model;\n    const subscription = (args) => {\n        const query = generateGraphQLDocument(modelIntrospection, model, operation, args);\n        const variables = buildGraphQLVariables(model, operation, args, modelIntrospection);\n        const auth = authModeParams(client, getInternals, args);\n        const headers = getCustomHeaders(client, getInternals, args?.headers);\n        const observable = client.graphql({\n            ...auth,\n            query,\n            variables,\n        }, headers);\n        return observable.pipe(map((value) => {\n            const [key] = Object.keys(value.data);\n            const data = value.data[key];\n            const flattenedResult = flattenItems(modelIntrospection, name, data);\n            if (flattenedResult === null) {\n                return null;\n            }\n            else if (args?.selectionSet) {\n                return flattenedResult;\n            }\n            else {\n                const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken);\n                return initialized;\n            }\n        }));\n    };\n    return subscription;\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGO,SAAS,mBAAmB,CAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE;IAC5F,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK;IACtB,MAAM,YAAY,GAAG,CAAC,IAAI,KAAK;QAC3B,MAAM,KAAK,OAAG,2QAAuB,EAAC,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC;QACjF,MAAM,SAAS,OAAG,yQAAqB,EAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,kBAAkB,CAAC;QACnF,MAAM,IAAI,OAAG,kQAAc,EAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC;QACvD,MAAM,OAAO,OAAG,oQAAgB,EAAC,MAAM,EAAE,YAAY,8CAAE,IAAI,CAAE,OAAO,CAAC;QACrE,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,GAAG,IAAI;YACP,KAAK;YACL,SAAS;QACrB,CAAS,EAAE,OAAO,CAAC;QACX,OAAO,UAAU,CAAC,IAAI,KAAC,oNAAG,EAAC,CAAC,KAAK,KAAK;YAClC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACrC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;YAC5B,MAAM,eAAe,OAAG,gQAAY,EAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC;YACpE,IAAI,eAAe,KAAK,IAAI,EAAE;gBAC1B,OAAO,IAAI;YAC3B,OACiB,gDAAI,IAAI,CAAE,YAAY,EAAE;gBACzB,OAAO,eAAe;YACtC,OACiB;gBACD,MAAM,CAAC,WAAW,CAAC,OAAG,mQAAe,EAAC,MAAM,EAAE,IAAI,EAAE;oBAAC,eAAe;iBAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC;gBACzH,OAAO,WAAW;YAClC;QACA,CAAS,CAAC,CAAC;IACX,CAAK;IACD,OAAO,YAAY;AACvB","debugId":null}},
    {"offset": {"line": 2860, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/utils/resolvePKFields.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/utils/resolvePKFields.ts"],"sourcesContent":["/**\n * Given a SchemaModel from a ModelIntrospectionSchema, returns the primary key\n * as an array of field names.\n *\n * @param model The model object\n * @returns Array of field names\n */\nexport function resolvePKFields(model) {\n    const { primaryKeyFieldName, sortKeyFieldNames } = model.primaryKeyInfo;\n    return [primaryKeyFieldName, ...sortKeyFieldNames];\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMA;;;;AACO,SAAS,eAAe,CAAC,KAAK,EAAE;IACnC,MAAM,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,GAAG,KAAK,CAAC,cAAc;IACvE,OAAO;QAAC,mBAAmB,EAAE;WAAG,iBAAiB;KAAC;AACtD","debugId":null}},
    {"offset": {"line": 2883, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/utils/findIndexByFields.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/utils/findIndexByFields.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Iterates through a collection to find a matching item and returns the index.\n *\n * @param needle The item to search for\n * @param haystack The collection to search\n * @param keyFields The fields used to indicate a match\n * @returns Index of `needle` in `haystack`, otherwise -1 if not found.\n */\nexport function findIndexByFields(needle, haystack, keyFields) {\n    const searchObject = Object.fromEntries(keyFields.map((fieldName) => [fieldName, needle[fieldName]]));\n    for (let i = 0; i < haystack.length; i++) {\n        if (Object.keys(searchObject).every((k) => searchObject[k] === haystack[i][k])) {\n            return i;\n        }\n    }\n    return -1;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA;;;;;;;CAOA;;;;AACO,SAAS,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,GAAK;YAAC,SAAS;YAAE,MAAM,CAAC,SAAS,CAAC;SAAC,CAAC,CAAC;IACrG,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACtC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAK,YAAY,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC5E,OAAO,CAAC;QACpB;IACA;IACI,OAAO,CAAA,CAAE;AACb","debugId":null}},
    {"offset": {"line": 2914, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/operations/observeQuery.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/operations/observeQuery.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { findIndexByFields, resolvePKFields } from '../../utils';\nexport function observeQueryFactory(models, model) {\n    const { name } = model;\n    const observeQuery = (arg) => new Observable((subscriber) => {\n        // what we'll be sending to our subscribers\n        const items = [];\n        // To enqueue subscription messages while we collect our initial\n        // result set.\n        const messageQueue = [];\n        // operation to take when message(s) arrive.\n        // this operation will be swapped out once initial \"sync\" is complete\n        // to immediately ingest messsages.\n        let receiveMessages = (...messages) => {\n            return messageQueue.push(...messages);\n        };\n        // start subscriptions\n        const onCreateSub = models[name].onCreate(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'create' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onCreate', error });\n            },\n        });\n        const onUpdateSub = models[name].onUpdate(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'update' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onUpdate', error });\n            },\n        });\n        const onDeleteSub = models[name].onDelete(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'delete' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onDelete', error });\n            },\n        });\n        // consumes a list of messages and sends a snapshot\n        function ingestMessages(messages) {\n            for (const message of messages) {\n                const idx = findIndexByFields(message.item, items, pkFields);\n                switch (message.type) {\n                    case 'create':\n                        if (idx < 0)\n                            items.push(message.item);\n                        break;\n                    case 'update':\n                        if (idx >= 0)\n                            items[idx] = message.item;\n                        break;\n                    case 'delete':\n                        if (idx >= 0)\n                            items.splice(idx, 1);\n                        break;\n                    default:\n                        console.error('Unrecognized message in observeQuery.', message);\n                }\n            }\n            subscriber.next({\n                items,\n                isSynced: true,\n            });\n        }\n        const pkFields = resolvePKFields(model);\n        // initial results\n        (async () => {\n            let firstPage = true;\n            let nextToken = null;\n            while (!subscriber.closed && (firstPage || nextToken)) {\n                firstPage = false;\n                const { data: page, errors, nextToken: _nextToken, } = await models[name].list({ ...arg, nextToken });\n                nextToken = _nextToken;\n                items.push(...page);\n                // if there are no more pages and no items we already know about\n                // that need to be merged in from sub, we're \"synced\"\n                const isSynced = messageQueue.length === 0 &&\n                    (nextToken === null || nextToken === undefined);\n                subscriber.next({\n                    items,\n                    isSynced,\n                });\n                if (Array.isArray(errors)) {\n                    for (const error of errors) {\n                        subscriber.error(error);\n                    }\n                }\n            }\n            // play through the queue\n            if (messageQueue.length > 0) {\n                ingestMessages(messageQueue);\n            }\n            // switch the queue to write directly to the items collection\n            receiveMessages = (...messages) => {\n                ingestMessages(messages);\n                return items.length;\n            };\n        })();\n        // when subscriber unsubscribes, tear down internal subs\n        return () => {\n            // 1. tear down internal subs\n            onCreateSub.unsubscribe();\n            onUpdateSub.unsubscribe();\n            onDeleteSub.unsubscribe();\n            // 2. there is no need to explicitly stop paging. instead, we\n            // just check `subscriber.closed` above before fetching each page.\n        };\n    });\n    return observeQuery;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGO,SAAS,mBAAmB,CAAC,MAAM,EAAE,KAAK,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK;IACtB,MAAM,YAAY,GAAG,CAAC,GAAG,GAAK,IAAI,qNAAU,CAAC,CAAC,UAAU,KAAK;YACjE,2CAAA;YACQ,MAAM,KAAK,GAAG,EAAE;YACxB,gEAAA;YACA,cAAA;YACQ,MAAM,YAAY,GAAG,EAAE;YAC/B,4CAAA;YACA,qEAAA;YACA,mCAAA;YACQ,IAAI,eAAe,GAAG,CAAC;;oBAAG,QAAQ,KAAK;;gBACnC,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YACjD,CAAS;YACT,sBAAA;YACQ,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrD,IAAI,EAAC,IAAI,EAAE;oBACP,eAAe,CAAC;wBAAE,IAAI;wBAAE,IAAI,EAAE,QAAQ;oBAAA,CAAE,CAAC;gBACzD,CAAa;gBACD,KAAK,EAAC,KAAK,EAAE;oBACT,UAAU,CAAC,KAAK,CAAC;wBAAE,IAAI,EAAE,UAAU;wBAAE,KAAK;oBAAA,CAAE,CAAC;gBAC7D,CAAa;YACb,CAAS,CAAC;YACF,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrD,IAAI,EAAC,IAAI,EAAE;oBACP,eAAe,CAAC;wBAAE,IAAI;wBAAE,IAAI,EAAE,QAAQ;oBAAA,CAAE,CAAC;gBACzD,CAAa;gBACD,KAAK,EAAC,KAAK,EAAE;oBACT,UAAU,CAAC,KAAK,CAAC;wBAAE,IAAI,EAAE,UAAU;wBAAE,KAAK;oBAAA,CAAE,CAAC;gBAC7D,CAAa;YACb,CAAS,CAAC;YACF,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;gBACrD,IAAI,EAAC,IAAI,EAAE;oBACP,eAAe,CAAC;wBAAE,IAAI;wBAAE,IAAI,EAAE,QAAQ;oBAAA,CAAE,CAAC;gBACzD,CAAa;gBACD,KAAK,EAAC,KAAK,EAAE;oBACT,UAAU,CAAC,KAAK,CAAC;wBAAE,IAAI,EAAE,UAAU;wBAAE,KAAK;oBAAA,CAAE,CAAC;gBAC7D,CAAa;YACb,CAAS,CAAC;YACV,mDAAA;YACQ,SAAS,cAAc,CAAC,QAAQ,EAAE;gBAC9B,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE;oBAC5B,MAAM,GAAG,OAAG,yQAAiB,EAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;oBAC5D,OAAQ,OAAO,CAAC,IAAI;wBAChB,KAAK,QAAQ;4BACT,IAAI,GAAG,GAAG,CAAC,EACP,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;4BAC5B;wBACJ,KAAK,QAAQ;4BACT,IAAI,GAAG,IAAI,CAAC,EACR,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI;4BAC7B;wBACJ,KAAK,QAAQ;4BACT,IAAI,GAAG,IAAI,CAAC,EACR,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;4BACxB;wBACJ;4BACI,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,OAAO,CAAC;oBACvF;gBACA;gBACY,UAAU,CAAC,IAAI,CAAC;oBACZ,KAAK;oBACL,QAAQ,EAAE,IAAI;gBAC9B,CAAa,CAAC;YACd;YACQ,MAAM,QAAQ,OAAG,qQAAe,EAAC,KAAK,CAAC;YAC/C,kBAAA;YACQ,CAAC,YAAY;gBACT,IAAI,SAAS,GAAG,IAAI;gBACpB,IAAI,SAAS,GAAG,IAAI;gBACpB,MAAO,CAAC,UAAU,CAAC,MAAM,IAAA,CAAK,SAAS,IAAI,SAAS,CAAC,CAAE;oBACnD,SAAS,GAAG,KAAK;oBACjB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAG,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;wBAAE,GAAG,GAAG;wBAAE,SAAS;oBAAA,CAAE,CAAC;oBACrG,SAAS,GAAG,UAAU;oBACtB,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;oBACnC,gEAAA;oBACA,qDAAA;oBACgB,MAAM,QAAQ,GAAG,YAAY,CAAC,MAAM,KAAK,CAAC,IAC1D,CAAqB,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAS,CAAC;oBACnD,UAAU,CAAC,IAAI,CAAC;wBACZ,KAAK;wBACL,QAAQ;oBAC5B,CAAiB,CAAC;oBACF,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBACvB,KAAK,MAAM,KAAK,IAAI,MAAM,CAAE;4BACxB,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;wBAC/C;oBACA;gBACA;gBACA,yBAAA;gBACY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,cAAc,CAAC,YAAY,CAAC;gBAC5C;gBACA,6DAAA;gBACY,eAAe,GAAG,CAAC;;wBAAG,QAAQ,KAAK;;oBAC/B,cAAc,CAAC,QAAQ,CAAC;oBACxB,OAAO,KAAK,CAAC,MAAM;gBACnC,CAAa;YACb,CAAS,GAAG;YACZ,wDAAA;YACQ,OAAO,MAAM;gBACrB,6BAAA;gBACY,WAAW,CAAC,WAAW,EAAE;gBACzB,WAAW,CAAC,WAAW,EAAE;gBACzB,WAAW,CAAC,WAAW,EAAE;YACrC,6DAAA;YACA,kEAAA;YACA,CAAS;QACT,CAAK,CAAC;IACF,OAAO,YAAY;AACvB","debugId":null}},
    {"offset": {"line": 3066, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/clientUtils.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/clientUtils.ts"],"sourcesContent":["import { graphQLOperationsInfo } from './APIClient';\nconst attributeIsSecondaryIndex = (attr) => {\n    return (attr.type === 'key' &&\n        // presence of `name` property distinguishes GSI from primary index\n        attr.properties?.name &&\n        attr.properties?.queryField &&\n        attr.properties?.fields.length > 0);\n};\nexport const getSecondaryIndexesFromSchemaModel = (model) => {\n    const idxs = model.attributes\n        ?.filter(attributeIsSecondaryIndex)\n        .map((attr) => {\n        const queryField = attr.properties.queryField;\n        const [pk, ...sk] = attr.properties.fields;\n        return {\n            queryField,\n            pk,\n            sk,\n        };\n    });\n    return idxs || [];\n};\n/**\n * returns graphQLOperationsInfo, but filters out operations that were disabled via model().disableOperations([...])\n */\nexport const excludeDisabledOps = (mis, modelName) => {\n    /* Example model attributes in MIS {\n      \"type\": \"model\",\n      \"properties\": {\n        \"subscriptions\": null,\n        \"mutations\": { \"delete\": null }\n        \"timestamps\": null\n      } }*/\n    const modelAttrs = mis.models[modelName].attributes?.find((attr) => attr.type === 'model');\n    const coarseToFineDict = {\n        queries: ['list', 'get', 'observeQuery'],\n        mutations: ['create', 'update', 'delete'],\n        subscriptions: ['onCreate', 'onUpdate', 'onDelete'],\n    };\n    const disabledOps = [];\n    if (!modelAttrs) {\n        return graphQLOperationsInfo;\n    }\n    if (modelAttrs.properties) {\n        for (const [key, value] of Object.entries(modelAttrs.properties)) {\n            // model.properties can contain other values that are not relevant to disabling ops, e.g. timestamps\n            if (!(key in coarseToFineDict)) {\n                continue;\n            }\n            if (value === null) {\n                // coarse-grained disable, e.g. \"subscriptions\": null,\n                disabledOps.push(...coarseToFineDict[key]);\n            }\n            else if (value instanceof Object) {\n                // fine-grained, e.g. \"mutations\": { \"delete\": null }\n                disabledOps.push(...Object.keys(value));\n            }\n        }\n    }\n    // observeQuery only exists on the client side, so can't be explicitly disabled via schema builder.\n    // It's unusable without `list`\n    if (disabledOps.includes('list')) {\n        disabledOps.push('observeQuery');\n    }\n    // graphQLOperationsInfo keys are in caps\n    const disabledOpsUpper = disabledOps.map((op) => op.toUpperCase());\n    const filteredGraphQLOperations = Object.fromEntries(Object.entries(graphQLOperationsInfo).filter(([key]) => !disabledOpsUpper.includes(key)));\n    return filteredGraphQLOperations;\n};\n"],"names":[],"mappings":";;;;;;;;AACA,MAAM,yBAAyB,GAAG,CAAC,IAAI,KAAK;QAE5C,mEAAA;yCAGQ,IAAI;IAJR,OAAQ,IAAI,CAAC,IAAI,KAAK,KAAK,8BAElB,UAAU,qDAAf,IAAI,aAAa,IAAI,2BACrB,IAAI,CAAC,UAAU,wEAAE,UAAU,gCACtB,UAAU,wEAAE,MAAM,CAAC,MAAM,IAAG,CAAC;AAC1C,CAAC;AACW,MAAC,kCAAkC,GAAG,CAAC,KAAK,KAAK;QAC5C,KAAK;IAAlB,MAAM,IAAI,8BAAS,UAAA,wEACb,MAAM,CAAC,yBAAyB,EACjC,GAAG,CAAC,CAAC,IAAI,KAAK;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;QAC7C,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;QAC1C,OAAO;YACH,UAAU;YACV,EAAE;YACF,EAAE;QACd,CAAS;IACT,CAAK,CAAC;IACF,OAAO,IAAI,IAAI,EAAE;AACrB;AACA;;CAEA,GACY,MAAC,kBAAkB,GAAG,CAAC,GAAG,EAAE,SAAS,KAAK;QAQ/B,GAAG;IAP1B;;;;;;SAMA,GACI,MAAM,UAAU,2CAAO,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,sGAAE,IAAI,CAAC,CAAC,IAAI,GAAK,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC1F,MAAM,gBAAgB,GAAG;QACrB,OAAO,EAAE;YAAC,MAAM;YAAE,KAAK;YAAE,cAAc;SAAC;QACxC,SAAS,EAAE;YAAC,QAAQ;YAAE,QAAQ;YAAE,QAAQ;SAAC;QACzC,aAAa,EAAE;YAAC,UAAU;YAAE,UAAU;YAAE,UAAU;SAAC;IAC3D,CAAK;IACD,MAAM,WAAW,GAAG,EAAE;IACtB,IAAI,CAAC,UAAU,EAAE;QACb,OAAO,yQAAqB;IACpC;IACI,IAAI,UAAU,CAAC,UAAU,EAAE;QACvB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAE;YAC1E,oGAAA;YACY,IAAI,CAAA,CAAE,GAAG,IAAI,gBAAgB,CAAC,EAAE;gBAC5B;YAChB;YACY,IAAI,KAAK,KAAK,IAAI,EAAE;gBAChC,sDAAA;gBACgB,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAC1D,OACiB,IAAI,KAAK,YAAY,MAAM,EAAE;gBAC9C,qDAAA;gBACgB,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD;QACA;IACA;IACA,mGAAA;IACA,+BAAA;IACI,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC9B,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC;IACxC;IACA,yCAAA;IACI,MAAM,gBAAgB,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,GAAK,EAAE,CAAC,WAAW,EAAE,CAAC;IAClE,MAAM,yBAAyB,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,yQAAqB,CAAC,CAAC,MAAM,CAAC;YAAC,CAAC,GAAG,CAAC;eAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;IAC9I,OAAO,yBAAyB;AACpC","debugId":null}},
    {"offset": {"line": 3158, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/utils/clientProperties/generateModelsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateModelsProperty.ts"],"sourcesContent":["import { listFactory } from '../../operations/list';\nimport { indexQueryFactory } from '../../operations/indexQuery';\nimport { getFactory } from '../../operations/get';\nimport { subscriptionFactory } from '../../operations/subscription';\nimport { observeQueryFactory } from '../../operations/observeQuery';\nimport { getSecondaryIndexesFromSchemaModel, excludeDisabledOps, } from '../../clientUtils';\nexport function generateModelsProperty(client, apiGraphQLConfig, getInternals) {\n    const models = {};\n    const modelIntrospection = apiGraphQLConfig.modelIntrospection;\n    if (!modelIntrospection) {\n        return {};\n    }\n    const SUBSCRIPTION_OPS = ['ONCREATE', 'ONUPDATE', 'ONDELETE'];\n    for (const model of Object.values(modelIntrospection.models)) {\n        const { name } = model;\n        models[name] = {};\n        const enabledModelOps = excludeDisabledOps(modelIntrospection, name);\n        Object.entries(enabledModelOps).forEach(([key, { operationPrefix }]) => {\n            const operation = key;\n            if (operation === 'LIST') {\n                models[name][operationPrefix] = listFactory(client, modelIntrospection, model, getInternals);\n            }\n            else if (SUBSCRIPTION_OPS.includes(operation)) {\n                models[name][operationPrefix] = subscriptionFactory(client, modelIntrospection, model, operation, getInternals);\n            }\n            else if (operation === 'OBSERVEQUERY') {\n                models[name][operationPrefix] = observeQueryFactory(models, model);\n            }\n            else {\n                models[name][operationPrefix] = getFactory(client, modelIntrospection, model, operation, getInternals);\n            }\n        });\n        const secondaryIdxs = getSecondaryIndexesFromSchemaModel(model);\n        for (const idx of secondaryIdxs) {\n            models[name][idx.queryField] = indexQueryFactory(client, modelIntrospection, model, idx, getInternals);\n        }\n    }\n    return models;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAMO,SAAS,sBAAsB,CAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,EAAE;IAC3E,MAAM,MAAM,GAAG,CAAA,CAAE;IACjB,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,kBAAkB;IAC9D,IAAI,CAAC,kBAAkB,EAAE;QACrB,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,gBAAgB,GAAG;QAAC,UAAU;QAAE,UAAU;QAAE,UAAU;KAAC;IAC7D,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAE;QAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK;QACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAA,CAAE;QACjB,MAAM,eAAe,OAAG,wQAAkB,EAAC,kBAAkB,EAAE,IAAI,CAAC;QACpE,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;gBAAC,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK;YACpE,MAAM,SAAS,GAAG,GAAG;YACrB,IAAI,SAAS,KAAK,MAAM,EAAE;gBACtB,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,wQAAW,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,YAAY,CAAC;YAC5G,OACiB,IAAI,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBAC3C,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,wRAAmB,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,CAAC;YAC/H,OACiB,IAAI,SAAS,KAAK,cAAc,EAAE;gBACnC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,wRAAmB,EAAC,MAAM,EAAE,KAAK,CAAC;YAClF,OACiB;gBACD,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,CAAC;YACtH;QACA,CAAS,CAAC;QACF,MAAM,aAAa,OAAG,wRAAkC,EAAC,KAAK,CAAC;QAC/D,KAAK,MAAM,GAAG,IAAI,aAAa,CAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAG,oRAAiB,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC;QAClH;IACA;IACI,OAAO,MAAM;AACjB","debugId":null}},
    {"offset": {"line": 3215, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/addSchemaToClient.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/addSchemaToClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { generateConversationsProperty, generateCustomQueriesProperty, generateCustomMutationsProperty, generateCustomSubscriptionsProperty, generateEnumsProperty, generateGenerationsProperty, generateModelsProperty, upgradeClientCancellation, } from './internals';\nexport function addSchemaToClient(client, apiGraphqlConfig, getInternals) {\n    upgradeClientCancellation(client);\n    client.models = generateModelsProperty(client, apiGraphqlConfig, getInternals);\n    client.enums = generateEnumsProperty(apiGraphqlConfig);\n    client.queries = generateCustomQueriesProperty(client, apiGraphqlConfig, getInternals);\n    client.mutations = generateCustomMutationsProperty(client, apiGraphqlConfig, getInternals);\n    client.subscriptions = generateCustomSubscriptionsProperty(client, apiGraphqlConfig, getInternals);\n    client.conversations = generateConversationsProperty(client, apiGraphqlConfig, getInternals);\n    client.generations = generateGenerationsProperty(client, apiGraphqlConfig, getInternals);\n    return client;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAEO,SAAS,iBAAiB,CAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,EAAE;QACtE,gRAAyB,EAAC,MAAM,CAAC;IACjC,MAAM,CAAC,MAAM,OAAG,oTAAsB,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IAC9E,MAAM,CAAC,KAAK,OAAG,kTAAqB,EAAC,gBAAgB,CAAC;IACtD,MAAM,CAAC,OAAO,OAAG,wSAA6B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IACtF,MAAM,CAAC,SAAS,OAAG,0SAA+B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IAC1F,MAAM,CAAC,aAAa,OAAG,8SAAmC,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IAClG,MAAM,CAAC,aAAa,OAAG,kUAA6B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IAC5F,MAAM,CAAC,WAAW,OAAG,8TAA2B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IACxF,OAAO,MAAM;AACjB","debugId":null}},
    {"offset": {"line": 3250, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isApiGraphQLConfig(apiGraphQLConfig) {\n    return apiGraphQLConfig !== undefined;\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;;AACO,SAAS,kBAAkB,CAAC,gBAAgB,EAAE;IACjD,OAAO,gBAAgB,KAAK,SAAS;AACzC","debugId":null}},
    {"offset": {"line": 3265, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/internals/server/generateModelsProperty.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/internals/server/generateModelsProperty.ts"],"sourcesContent":["import { listFactory } from '../operations/list';\nimport { indexQueryFactory } from '../operations/indexQuery';\nimport { getFactory } from '../operations/get';\nimport { getSecondaryIndexesFromSchemaModel, excludeDisabledOps, } from '../clientUtils';\nexport function generateModelsProperty(client, params, getInternals) {\n    const models = {};\n    const { config } = params;\n    const useContext = params.amplify === null;\n    if (!config) {\n        throw new Error('generateModelsProperty cannot retrieve Amplify config');\n    }\n    if (!config.API?.GraphQL) {\n        return {};\n    }\n    const modelIntrospection = config.API.GraphQL.modelIntrospection;\n    if (!modelIntrospection) {\n        return {};\n    }\n    const SSR_UNSUPORTED_OPS = [\n        'ONCREATE',\n        'ONUPDATE',\n        'ONDELETE',\n        'OBSERVEQUERY',\n    ];\n    for (const model of Object.values(modelIntrospection.models)) {\n        const { name } = model;\n        models[name] = {};\n        const enabledModelOps = excludeDisabledOps(modelIntrospection, name);\n        Object.entries(enabledModelOps).forEach(([key, { operationPrefix }]) => {\n            const operation = key;\n            // subscriptions are not supported in SSR\n            if (SSR_UNSUPORTED_OPS.includes(operation))\n                return;\n            if (operation === 'LIST') {\n                models[name][operationPrefix] = listFactory(client, modelIntrospection, model, getInternals, useContext);\n            }\n            else {\n                models[name][operationPrefix] = getFactory(client, modelIntrospection, model, operation, getInternals, useContext);\n            }\n        });\n        const secondaryIdxs = getSecondaryIndexesFromSchemaModel(model);\n        for (const idx of secondaryIdxs) {\n            models[name][idx.queryField] = indexQueryFactory(client, modelIntrospection, model, idx, getInternals, useContext);\n        }\n    }\n    return models;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAIO,SAAS,sBAAsB,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;QAO5D,MAAM;IANX,MAAM,MAAM,GAAG,CAAA,CAAE;IACjB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,KAAK,IAAI;IAC1C,IAAI,CAAC,MAAM,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC;IAChF;IACI,IAAI,wBAAQ,GAAG,4DAAE,OAAO,GAAE;QACtB,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB;IAChE,IAAI,CAAC,kBAAkB,EAAE;QACrB,OAAO,CAAA,CAAE;IACjB;IACI,MAAM,kBAAkB,GAAG;QACvB,UAAU;QACV,UAAU;QACV,UAAU;QACV,cAAc;KACjB;IACD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAE;QAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK;QACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAA,CAAE;QACjB,MAAM,eAAe,OAAG,wQAAkB,EAAC,kBAAkB,EAAE,IAAI,CAAC;QACpE,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;gBAAC,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK;YACpE,MAAM,SAAS,GAAG,GAAG;YACjC,yCAAA;YACY,IAAI,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,EACtC;YACJ,IAAI,SAAS,KAAK,MAAM,EAAE;gBACtB,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,wQAAW,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC;YACxH,OACiB;gBACD,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,OAAG,sQAAU,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,CAAC;YAClI;QACA,CAAS,CAAC;QACF,MAAM,aAAa,OAAG,wRAAkC,EAAC,KAAK,CAAC;QAC/D,KAAK,MAAM,GAAG,IAAI,aAAa,CAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAG,oRAAiB,EAAC,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC;QAC9H;IACA;IACI,OAAO,MAAM;AACjB","debugId":null}},
    {"offset": {"line": 3326, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/addSchemaToClientWithInstance.mjs","sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-amplify/data-schema/src/runtime/addSchemaToClientWithInstance.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isApiGraphQLConfig } from './internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig';\nimport { generateCustomQueriesProperty, generateCustomMutationsProperty, generateEnumsProperty, upgradeClientCancellation, } from './internals';\nimport { generateModelsProperty as generateModelsPropertyServer } from './internals/server';\n// TODO: separate import path\nexport function addSchemaToClientWithInstance(client, params, getInternals) {\n    const apiGraphqlConfig = params.config?.API?.GraphQL;\n    if (isApiGraphQLConfig(apiGraphqlConfig)) {\n        upgradeClientCancellation(client);\n        client.models = generateModelsPropertyServer(client, params, getInternals);\n        client.enums = generateEnumsProperty(apiGraphqlConfig);\n        client.queries = generateCustomQueriesProperty(client, apiGraphqlConfig, getInternals);\n        client.mutations = generateCustomMutationsProperty(client, apiGraphqlConfig, getInternals);\n    }\n    return client;\n}\n"],"names":["generateModelsPropertyServer"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,qEAAA;AACA,sCAAA;AAIA,6BAAA;AACO,SAAS,6BAA6B,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;4BAC/C,MAAM;IAA/B,MAAM,gBAAgB,4BAAU,MAAM,wFAAE,GAAG,0EAAE,OAAO;IACpD,QAAI,qTAAkB,EAAC,gBAAgB,CAAC,EAAE;YACtC,gRAAyB,EAAC,MAAM,CAAC;QACjC,MAAM,CAAC,MAAM,OAAGA,iSAA4B,EAAC,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC;QAC1E,MAAM,CAAC,KAAK,OAAG,kTAAqB,EAAC,gBAAgB,CAAC;QACtD,MAAM,CAAC,OAAO,OAAG,wSAA6B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;QACtF,MAAM,CAAC,SAAS,OAAG,0SAA+B,EAAC,MAAM,EAAE,gBAAgB,EAAE,YAAY,CAAC;IAClG;IACI,OAAO,MAAM;AACjB","debugId":null}},
    {"offset": {"line": 3366, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/christmas-store-registration/node_modules/@aws-amplify/data-schema/dist/esm/runtime/index.mjs","sources":[],"sourcesContent":[],"names":[],"mappings":"","debugId":null}}]
}