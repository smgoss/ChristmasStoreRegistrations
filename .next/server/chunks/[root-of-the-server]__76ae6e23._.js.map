{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-sdk/client-lambda/node_modules/%40aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const getValidatedProcessCredentials = (profileName, data, profiles) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    let accountId = data.AccountId;\n    if (!accountId && profiles?.[profileName]?.aws_account_id) {\n        accountId = profiles[profileName].aws_account_id;\n    }\n    const credentials = {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n        ...(accountId && { accountId }),\n    };\n    setCredentialFeature(credentials, \"CREDENTIALS_PROCESS\", \"w\");\n    return credentials;\n};\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iCAAiC,CAAC,aAAa,MAAM;IAC9D,IAAI,KAAK,OAAO,KAAK,GAAG;QACpB,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,6CAA6C,CAAC;IACrF;IACA,IAAI,KAAK,WAAW,KAAK,aAAa,KAAK,eAAe,KAAK,WAAW;QACtE,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,iDAAiD,CAAC;IACzF;IACA,IAAI,KAAK,UAAU,EAAE;QACjB,MAAM,cAAc,IAAI;QACxB,MAAM,aAAa,IAAI,KAAK,KAAK,UAAU;QAC3C,IAAI,aAAa,aAAa;YAC1B,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,iDAAiD,CAAC;QACzF;IACJ;IACA,IAAI,YAAY,KAAK,SAAS;IAC9B,IAAI,CAAC,aAAa,UAAU,CAAC,YAAY,EAAE,gBAAgB;QACvD,YAAY,QAAQ,CAAC,YAAY,CAAC,cAAc;IACpD;IACA,MAAM,cAAc;QAChB,aAAa,KAAK,WAAW;QAC7B,iBAAiB,KAAK,eAAe;QACrC,GAAI,KAAK,YAAY,IAAI;YAAE,cAAc,KAAK,YAAY;QAAC,CAAC;QAC5D,GAAI,KAAK,UAAU,IAAI;YAAE,YAAY,IAAI,KAAK,KAAK,UAAU;QAAE,CAAC;QAChE,GAAI,KAAK,eAAe,IAAI;YAAE,iBAAiB,KAAK,eAAe;QAAC,CAAC;QACrE,GAAI,aAAa;YAAE;QAAU,CAAC;IAClC;IACA,IAAA,sTAAoB,EAAC,aAAa,uBAAuB;IACzD,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-sdk/client-lambda/node_modules/%40aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles, logger) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data, profiles);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message, { logger });\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, { logger });\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger,\n        });\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM,4BAA4B,OAAO,aAAa,UAAU;IACnE,MAAM,UAAU,QAAQ,CAAC,YAAY;IACrC,IAAI,QAAQ,CAAC,YAAY,EAAE;QACvB,MAAM,oBAAoB,OAAO,CAAC,qBAAqB;QACvD,IAAI,sBAAsB,WAAW;YACjC,MAAM,cAAc,IAAA,8GAAS,EAAC,2HAAI;YAClC,IAAI;gBACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,YAAY;gBACrC,IAAI;gBACJ,IAAI;oBACA,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI;gBACjC,EACA,OAAM;oBACF,MAAM,MAAM,CAAC,QAAQ,EAAE,YAAY,0CAA0C,CAAC;gBAClF;gBACA,OAAO,IAAA,+UAA8B,EAAC,aAAa,MAAM;YAC7D,EACA,OAAO,OAAO;gBACV,MAAM,IAAI,kTAAwB,CAAC,MAAM,OAAO,EAAE;oBAAE;gBAAO;YAC/D;QACJ,OACK;YACD,MAAM,IAAI,kTAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,oCAAoC,CAAC,EAAE;gBAAE;YAAO;QAC9G;IACJ,OACK;QACD,MAAM,IAAI,kTAAwB,CAAC,CAAC,QAAQ,EAAE,YAAY,+CAA+C,CAAC,EAAE;YACxG;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-sdk/client-lambda/node_modules/%40aws-sdk/credential-provider-process/dist-es/fromProcess.js"],"sourcesContent":["import { getProfileName, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    }), profiles, init.logger);\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AACO,MAAM,cAAc,CAAC,OAAO,CAAC,CAAC,GAAK,OAAO,EAAE,kBAAkB,EAAE,GAAG,CAAC,CAAC;QACxE,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,WAAW,MAAM,IAAA,2SAAe,EAAC;QACvC,OAAO,IAAA,qUAAyB,EAAC,IAAA,ySAAc,EAAC;YAC5C,SAAS,KAAK,OAAO,IAAI,oBAAoB;QACjD,IAAI,UAAU,KAAK,MAAM;IAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/node_modules/%40aws-sdk/client-lambda/node_modules/%40aws-sdk/credential-provider-process/dist-es/index.js"],"sourcesContent":["export * from \"./fromProcess\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}}]
}