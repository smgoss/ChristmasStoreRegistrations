{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/src/components/RegistrationForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { generateClient } from 'aws-amplify/data';\nimport { Amplify } from 'aws-amplify';\nimport type { Schema } from '../../amplify/data/resource';\n\n// Ensure Amplify is configured\nconst amplifyConfig = {\n  \"auth\": {\n    \"user_pool_id\": \"us-east-1_vwgchbYC8\",\n    \"aws_region\": \"us-east-1\",\n    \"user_pool_client_id\": \"1dsj6m1frqcp4lq23aeie2kaea\",\n    \"identity_pool_id\": \"us-east-1:ce2d84ed-1506-42b9-8394-2e402b5fd311\",\n    \"mfa_methods\": [],\n    \"standard_required_attributes\": [\"email\"],\n    \"username_attributes\": [\"email\"],\n    \"user_verification_types\": [\"email\"],\n    \"groups\": [{ \"admin\": { \"precedence\": 0 } }],\n    \"mfa_configuration\": \"NONE\",\n    \"password_policy\": {\n      \"min_length\": 8,\n      \"require_lowercase\": true,\n      \"require_numbers\": true,\n      \"require_symbols\": true,\n      \"require_uppercase\": true\n    },\n    \"unauthenticated_identities_enabled\": true\n  },\n  \"data\": {\n    \"url\": \"https://ps5sezumsvcmloznr4nryeodka.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_region\": \"us-east-1\",\n    \"api_key\": \"da2-aiwlbul6rrhxflgxabtagr7kfa\",\n    \"default_authorization_type\": \"API_KEY\",\n    \"authorization_types\": [\"AMAZON_COGNITO_USER_POOLS\", \"AWS_IAM\"]\n  },\n  \"version\": \"1.4\"\n};\n\nAmplify.configure(amplifyConfig);\nconst client = generateClient<Schema>();\n\ninterface Child {\n  age: number;\n  gender: 'boy' | 'girl';\n}\n\ninterface RegistrationData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  numberOfKids: number;\n  timeSlot: string;\n  needsChildcare: boolean;\n  referredBy: string;\n  children: Child[];\n}\n\nconst TIME_SLOTS = [\n  '09:00',\n  '09:30',\n  '10:00',\n  '10:30',\n  '11:00',\n  '11:30'\n];\n\ninterface RegistrationFormProps {\n  inviteToken?: string;\n  onRegistrationComplete?: () => void;\n  prefillEmail?: string;\n}\n\nexport default function RegistrationForm({ \n  inviteToken, \n  onRegistrationComplete, \n  prefillEmail \n}: RegistrationFormProps = {}) {\n  const [formData, setFormData] = useState<RegistrationData>({\n    firstName: '',\n    lastName: '',\n    email: prefillEmail || '',\n    phone: '',\n    numberOfKids: 0,\n    timeSlot: '',\n    needsChildcare: false,\n    referredBy: '',\n    children: []\n  });\n\n  const [timeSlotCapacities, setTimeSlotCapacities] = useState<Record<string, { max: number; current: number }>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    // Load time slot capacities\n    loadTimeSlotCapacities();\n  }, []);\n\n  useEffect(() => {\n    // Update children array when numberOfKids changes\n    const newChildren: Child[] = [];\n    for (let i = 0; i < formData.numberOfKids; i++) {\n      newChildren.push(formData.children[i] || { age: 1, gender: 'boy' });\n    }\n    setFormData(prev => ({ ...prev, children: newChildren }));\n  }, [formData.numberOfKids]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadTimeSlotCapacities = async () => {\n    try {\n      const { data } = await client.models.TimeSlotConfig.list();\n      const capacities: Record<string, { max: number; current: number }> = {};\n      \n      data.forEach(config => {\n        capacities[config.timeSlot] = {\n          max: config.maxCapacity || 0,\n          current: config.currentRegistrations || 0\n        };\n      });\n      \n      setTimeSlotCapacities(capacities);\n    } catch (error) {\n      console.error('Error loading time slot capacities:', error);\n    }\n  };\n\n  const validateForm = async (): Promise<boolean> => {\n    const newErrors: Record<string, string> = {};\n\n    // Basic validation\n    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\n    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\n    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\n    if (!formData.timeSlot) newErrors.timeSlot = 'Please select a time slot';\n    \n    if (formData.numberOfKids < 0) {\n      newErrors.numberOfKids = 'Number of kids cannot be negative';\n    }\n\n    // Validate children info if numberOfKids > 0\n    if (formData.numberOfKids > 0) {\n      formData.children.forEach((child, index) => {\n        if (child.age < 1 || child.age > 18) {\n          newErrors[`child_${index}_age`] = 'Age must be between 1 and 18';\n        }\n      });\n    }\n\n    // Check for duplicate email\n    try {\n      const { data: existingRegistrations } = await client.models.Registration.list({\n        filter: { email: { eq: formData.email } }\n      });\n      \n      if (existingRegistrations.length > 0) {\n        newErrors.email = 'Someone is already registered with this email address';\n      }\n    } catch (error) {\n      console.error('Error checking email:', error);\n    }\n\n    // Check for duplicate phone\n    try {\n      const { data: existingRegistrations } = await client.models.Registration.list({\n        filter: { phone: { eq: formData.phone } }\n      });\n      \n      if (existingRegistrations.length > 0) {\n        newErrors.phone = 'Someone is already registered with this phone number';\n      }\n    } catch (error) {\n      console.error('Error checking phone:', error);\n    }\n\n    // Check time slot availability\n    const slotCapacity = timeSlotCapacities[formData.timeSlot];\n    if (slotCapacity && slotCapacity.current >= slotCapacity.max) {\n      newErrors.timeSlot = 'This time slot is full';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const isValid = await validateForm();\n      if (!isValid) {\n        setLoading(false);\n        return;\n      }\n\n      // Create registration\n      const registrationResult = await client.models.Registration.create({\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        phone: formData.phone,\n        numberOfKids: formData.numberOfKids,\n        timeSlot: formData.timeSlot,\n        needsChildcare: formData.needsChildcare,\n        referredBy: formData.referredBy || undefined,\n        inviteToken: inviteToken,\n        registrationDate: new Date().toISOString()\n      });\n\n      if (registrationResult.data) {\n        // Create child records\n        if (formData.numberOfKids > 0) {\n          await Promise.all(\n            formData.children.map(child =>\n              client.models.Child.create({\n                registrationId: registrationResult.data!.id,\n                age: child.age,\n                gender: child.gender\n              })\n            )\n          );\n        }\n\n        // Update time slot capacity\n        const currentSlot = timeSlotCapacities[formData.timeSlot];\n        if (currentSlot) {\n          // Find and update the time slot config\n          const { data: timeSlotConfigs } = await client.models.TimeSlotConfig.list({\n            filter: { timeSlot: { eq: formData.timeSlot } }\n          });\n          \n          if (timeSlotConfigs[0]) {\n            await client.models.TimeSlotConfig.update({\n              id: timeSlotConfigs[0].id,\n              currentRegistrations: currentSlot.current + 1\n            });\n          }\n        }\n\n        setSubmitted(true);\n        \n        // Call completion callback for invite tokens\n        if (onRegistrationComplete) {\n          onRegistrationComplete();\n        }\n      }\n    } catch (error) {\n      console.error('Error submitting registration:', error);\n      setErrors({ submit: 'An error occurred while submitting your registration. Please try again.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (submitted) {\n    return (\n      <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-green-600 mb-4\">Registration Successful!</h2>\n          <p className=\"text-gray-600 mb-4\">\n            Thank you for registering for the Christmas Store. You will receive a confirmation email shortly.\n          </p>\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <p><strong>Name:</strong> {formData.firstName} {formData.lastName}</p>\n            <p><strong>Email:</strong> {formData.email}</p>\n            <p><strong>Time Slot:</strong> {formData.timeSlot}</p>\n            <p><strong>Number of Children:</strong> {formData.numberOfKids}</p>\n            {formData.needsChildcare && <p><strong>Childcare:</strong> Yes</p>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <h1 className=\"text-3xl font-bold text-center mb-6 text-red-600\">Christmas Store Registration</h1>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {errors.submit && (\n          <div className=\"bg-red-50 p-4 rounded-lg text-red-600\">{errors.submit}</div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              First Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.firstName}\n              onChange={(e) => setFormData(prev => ({ ...prev, firstName: e.target.value }))}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n              required\n            />\n            {errors.firstName && <p className=\"text-red-500 text-sm mt-1\">{errors.firstName}</p>}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Last Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.lastName}\n              onChange={(e) => setFormData(prev => ({ ...prev, lastName: e.target.value }))}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n              required\n            />\n            {errors.lastName && <p className=\"text-red-500 text-sm mt-1\">{errors.lastName}</p>}\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Email Address *\n          </label>\n          <input\n            type=\"email\"\n            value={formData.email}\n            onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Phone Number *\n          </label>\n          <input\n            type=\"tel\"\n            value={formData.phone}\n            onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Number of Children (18 and under) *\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"20\"\n            value={formData.numberOfKids}\n            onChange={(e) => setFormData(prev => ({ ...prev, numberOfKids: parseInt(e.target.value) || 0 }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.numberOfKids && <p className=\"text-red-500 text-sm mt-1\">{errors.numberOfKids}</p>}\n        </div>\n\n        {formData.numberOfKids > 0 && (\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Children Information</h3>\n            <div className=\"space-y-4\">\n              {formData.children.map((child, index) => (\n                <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Child {index + 1} Age\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"18\"\n                      value={child.age}\n                      onChange={(e) => {\n                        const newChildren = [...formData.children];\n                        newChildren[index].age = parseInt(e.target.value) || 1;\n                        setFormData(prev => ({ ...prev, children: newChildren }));\n                      }}\n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n                      required\n                    />\n                    {errors[`child_${index}_age`] && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors[`child_${index}_age`]}</p>\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Child {index + 1} Gender\n                    </label>\n                    <select\n                      value={child.gender}\n                      onChange={(e) => {\n                        const newChildren = [...formData.children];\n                        newChildren[index].gender = e.target.value as 'boy' | 'girl';\n                        setFormData(prev => ({ ...prev, children: newChildren }));\n                      }}\n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n                      required\n                    >\n                      <option value=\"boy\">Boy</option>\n                      <option value=\"girl\">Girl</option>\n                    </select>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Preferred Time Slot *\n          </label>\n          <select\n            value={formData.timeSlot}\n            onChange={(e) => setFormData(prev => ({ ...prev, timeSlot: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          >\n            <option value=\"\">Select a time slot</option>\n            {TIME_SLOTS.map(slot => {\n              const capacity = timeSlotCapacities[slot];\n              const isFull = capacity && capacity.current >= capacity.max;\n              const availableText = capacity ? ` (${capacity.current}/${capacity.max} registered)` : '';\n              \n              return (\n                <option key={slot} value={slot} disabled={isFull}>\n                  {slot}{availableText}{isFull ? ' - FULL' : ''}\n                </option>\n              );\n            })}\n          </select>\n          {errors.timeSlot && <p className=\"text-red-500 text-sm mt-1\">{errors.timeSlot}</p>}\n        </div>\n\n        <div>\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={formData.needsChildcare}\n              onChange={(e) => setFormData(prev => ({ ...prev, needsChildcare: e.target.checked }))}\n              className=\"rounded border-gray-300 text-red-600 shadow-sm focus:border-red-300 focus:ring focus:ring-red-200 focus:ring-opacity-50\"\n            />\n            <span className=\"text-sm font-medium text-gray-700\">\n              I need childcare during my shopping time\n            </span>\n          </label>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Were you referred by any agency or person? (optional)\n          </label>\n          <input\n            type=\"text\"\n            value={formData.referredBy}\n            onChange={(e) => setFormData(prev => ({ ...prev, referredBy: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            placeholder=\"Agency name or person's name\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {loading ? 'Submitting...' : 'Register for Christmas Store'}\n        </button>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}