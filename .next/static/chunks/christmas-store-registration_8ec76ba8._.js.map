{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/src/hooks/useLocationConfig.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\ninterface LocationConfig {\n  locationName: string;\n  shortName: string;\n  locationAddress: string;\n  timeSlots: string[];\n  defaultCapacity: number;\n  contactEmail: string;\n  fromEmail: string;\n  branding: {\n    primaryColor: string;\n    secondaryColor: string;\n    locationEmoji: string;\n    campusColor: string;\n  };\n  churchInfo: {\n    website: string;\n    phone: string;\n  };\n}\n\n// Import all configs\nconst location1Config = require('../../config/location1.json') as LocationConfig;\nconst location2Config = require('../../config/location2.json') as LocationConfig;\nconst location3Config = require('../../config/location3.json') as LocationConfig;\n\nexport function useLocationConfig(): LocationConfig {\n  const [config, setConfig] = useState<LocationConfig>(location1Config);\n\n  useEffect(() => {\n    // Get location from environment variable or URL parameter or localStorage\n    const getLocationFromEnvironment = () => {\n      // Check environment variable first\n      if (typeof window !== 'undefined') {\n        // Check URL parameters\n        const urlParams = new URLSearchParams(window.location.search);\n        const urlLocation = urlParams.get('location');\n        if (urlLocation) {\n          localStorage.setItem('selectedLocation', urlLocation);\n          return urlLocation;\n        }\n\n        // Check localStorage\n        const savedLocation = localStorage.getItem('selectedLocation');\n        if (savedLocation) {\n          return savedLocation;\n        }\n      }\n\n      // Fall back to environment variable\n      return process.env.NEXT_PUBLIC_LOCATION || 'location1';\n    };\n\n    const location = getLocationFromEnvironment();\n    \n    switch (location) {\n      case 'location1':\n        setConfig(location1Config);\n        break;\n      case 'location2':\n        setConfig(location2Config);\n        break;\n      case 'location3':\n        setConfig(location3Config);\n        break;\n      default:\n        setConfig(location1Config);\n    }\n  }, []);\n\n  return config;\n}"],"names":[],"mappings":";;;;AAmDa;AAnDb;;;AAsBA,qBAAqB;AACrB,MAAM;AACN,MAAM;AACN,MAAM;AAEC,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,+MAAQ,EAAiB;IAErD,IAAA,gNAAS;uCAAC;YACR,0EAA0E;YAC1E,MAAM;0EAA6B;oBACjC,mCAAmC;oBACnC,wCAAmC;wBACjC,uBAAuB;wBACvB,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;wBAC5D,MAAM,cAAc,UAAU,GAAG,CAAC;wBAClC,IAAI,aAAa;4BACf,aAAa,OAAO,CAAC,oBAAoB;4BACzC,OAAO;wBACT;wBAEA,qBAAqB;wBACrB,MAAM,gBAAgB,aAAa,OAAO,CAAC;wBAC3C,IAAI,eAAe;4BACjB,OAAO;wBACT;oBACF;oBAEA,oCAAoC;oBACpC,OAAO,iDAAoC;gBAC7C;;YAEA,MAAM,WAAW;YAEjB,OAAQ;gBACN,KAAK;oBACH,UAAU;oBACV;gBACF,KAAK;oBACH,UAAU;oBACV;gBACF,KAAK;oBACH,UAAU;oBACV;gBACF;oBACE,UAAU;YACd;QACF;sCAAG,EAAE;IAEL,OAAO;AACT;GA7CgB","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/src/lib/amplify.ts"],"sourcesContent":["import { Amplify } from 'aws-amplify';\nimport outputs from '../../amplify_outputs.json';\n\n// Single place to configure Amplify on both client/server where needed\nif (!Amplify.getConfig()?.Auth) {\n  Amplify.configure(outputs);\n}\n\nexport {}; // side-effect module\n\n"],"names":[],"mappings":";AAAA;;;;;;IAIK;;;AADL,uEAAuE;AACvE,IAAI,GAAC,qBAAA,gQAAO,CAAC,SAAS,gBAAjB,yCAAA,mBAAqB,IAAI,GAAE;IAC9B,gQAAO,CAAC,SAAS,CAAC;AACpB;;;;CAEW,qBAAqB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/stephengoss/GitHub/ChristmasStoreRegistrations/christmas-store-registration/src/components/RegistrationForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { generateClient } from 'aws-amplify/data';\nimport type { Schema } from '../../amplify/data/resource';\nimport { useLocationConfig } from '../hooks/useLocationConfig';\nimport '@/lib/amplify';\nconst client = generateClient<Schema>();\n\ninterface Child {\n  age: number | string;\n  gender: 'boy' | 'girl';\n}\n\ninterface RegistrationConfig {\n  id: string;\n  isRegistrationOpen: boolean;\n  inviteOnlyMode: boolean;\n  scheduledCloseDate?: string;\n  autoCloseEnabled: boolean;\n  closureMessage: string;\n}\n\ninterface RegistrationData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  numberOfKids: number;\n  timeSlot: string;\n  needsChildcare: boolean;\n  referredBy: string;\n  children: Child[];\n}\n\n// TIME_SLOTS is now imported from locationConfig\n\ninterface RegistrationFormProps {\n  inviteToken?: string;\n  onRegistrationComplete?: () => void;\n  prefillEmail?: string;\n}\n\nexport default function RegistrationForm({ \n  inviteToken, \n  onRegistrationComplete, \n  prefillEmail \n}: RegistrationFormProps = {}) {\n  const locationConfig = useLocationConfig();\n  const { \n    timeSlots: TIME_SLOTS, \n    locationName: LOCATION_NAME,\n    locationAddress: LOCATION_ADDRESS,\n    branding: BRANDING,\n    churchInfo: CHURCH_INFO,\n    contactEmail: CONTACT_EMAIL \n  } = locationConfig;\n\n  const [formData, setFormData] = useState<RegistrationData>({\n    firstName: '',\n    lastName: '',\n    email: prefillEmail || '',\n    phone: '',\n    numberOfKids: 0,\n    timeSlot: '',\n    needsChildcare: false,\n    referredBy: '',\n    children: []\n  });\n\n  const [timeSlotCapacities, setTimeSlotCapacities] = useState<Record<string, { max: number; current: number }>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [registrationConfig, setRegistrationConfig] = useState<RegistrationConfig | null>(null);\n  const [configLoading, setConfigLoading] = useState(true);\n  \n\n  useEffect(() => {\n    // Load time slot capacities and registration config\n    loadTimeSlotCapacities();\n    loadRegistrationConfig();\n  }, []);\n\n  const loadRegistrationConfig = async () => {\n    try {\n      setConfigLoading(true);\n      const { data: configData } = await client.models.RegistrationConfig.list();\n      const config = configData?.[0] as RegistrationConfig;\n      setRegistrationConfig(config);\n      \n      // Check if we need to auto-close based on scheduled date\n      if (config?.autoCloseEnabled && config.scheduledCloseDate) {\n        const now = new Date();\n        const scheduledDate = new Date(config.scheduledCloseDate);\n        if (now >= scheduledDate && config.isRegistrationOpen) {\n          // Auto-close registration\n          await client.models.RegistrationConfig.update({\n            id: config.id,\n            isRegistrationOpen: false,\n            updatedAt: new Date().toISOString()\n          });\n          setRegistrationConfig(prev => prev ? { ...prev, isRegistrationOpen: false } : null);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading registration config:', error);\n    } finally {\n      setConfigLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Update children array when numberOfKids changes\n    const newChildren: Child[] = [];\n    for (let i = 0; i < formData.numberOfKids; i++) {\n      newChildren.push(formData.children[i] || { age: '', gender: 'boy' });\n    }\n    setFormData(prev => ({ ...prev, children: newChildren }));\n  }, [formData.numberOfKids]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadTimeSlotCapacities = async () => {\n    try {\n      // Load time slot configurations\n      const { data: timeSlotData } = await client.models.TimeSlotConfig.list();\n      \n      // Load all registrations to calculate actual counts\n      const { data: registrationData } = await client.models.Registration.list();\n      \n      const capacities: Record<string, { max: number; current: number }> = {};\n      \n      timeSlotData.forEach(config => {\n        // Calculate actual registration count for this time slot\n        const actualCount = registrationData ? \n          registrationData.filter(reg => reg.timeSlot === config.timeSlot && !reg.isCancelled).length : 0;\n        \n        capacities[config.timeSlot] = {\n          max: config.maxCapacity || 0,\n          current: actualCount\n        };\n      });\n      \n      setTimeSlotCapacities(capacities);\n    } catch (error) {\n      console.error('Error loading time slot capacities:', error);\n    }\n  };\n\n  const validateForm = async (): Promise<boolean> => {\n    const newErrors: Record<string, string> = {};\n\n    // Check registration status first\n    if (!registrationConfig?.isRegistrationOpen) {\n      newErrors.general = registrationConfig?.closureMessage || 'Registration is currently closed.';\n      setErrors(newErrors);\n      return false;\n    }\n\n    // Check invite-only mode\n    if (registrationConfig?.inviteOnlyMode && !inviteToken) {\n      newErrors.general = 'Registration is currently invite-only. Please use the invite link you received.';\n      setErrors(newErrors);\n      return false;\n    }\n\n    // If in invite-only mode, validate the invite token\n    if (registrationConfig?.inviteOnlyMode && inviteToken) {\n      try {\n        const { data: inviteData } = await client.models.InviteLink.list({\n          filter: { token: { eq: inviteToken } }\n        });\n        \n        const invite = inviteData?.[0];\n        if (!invite) {\n          newErrors.general = 'Invalid invite link. Please contact us for assistance.';\n          setErrors(newErrors);\n          return false;\n        }\n        \n        if (invite.isUsed) {\n          newErrors.general = 'This invite link has already been used.';\n          setErrors(newErrors);\n          return false;\n        }\n      } catch (error) {\n        console.error('Error validating invite token:', error);\n        newErrors.general = 'Error validating invite. Please try again.';\n        setErrors(newErrors);\n        return false;\n      }\n    }\n\n    // Basic validation\n    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\n    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\n    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\n    if (!formData.timeSlot) newErrors.timeSlot = 'Please select a time slot';\n    \n    if (formData.numberOfKids < 0) {\n      newErrors.numberOfKids = 'Number of kids cannot be negative';\n    }\n\n    // Validate children info if numberOfKids > 0\n    if (formData.numberOfKids > 0) {\n      formData.children.forEach((child, index) => {\n        if (child.age !== '<1' && (typeof child.age !== 'number' || child.age < 1 || child.age > 18)) {\n          newErrors[`child_${index}_age`] = 'Please select a valid age';\n        }\n      });\n    }\n\n    // Check for duplicate email\n    try {\n      const { data: existingRegistrations } = await client.models.Registration.list({\n        filter: { email: { eq: formData.email } }\n      });\n      \n      if (existingRegistrations.length > 0) {\n        newErrors.email = 'Someone is already registered with this email address';\n      }\n    } catch (error) {\n      console.error('Error checking email:', error);\n    }\n\n    // Check for duplicate phone\n    try {\n      const { data: existingRegistrations } = await client.models.Registration.list({\n        filter: { phone: { eq: formData.phone } }\n      });\n      \n      if (existingRegistrations.length > 0) {\n        newErrors.phone = 'Someone is already registered with this phone number';\n      }\n    } catch (error) {\n      console.error('Error checking phone:', error);\n    }\n\n    // Check time slot availability\n    const slotCapacity = timeSlotCapacities[formData.timeSlot];\n    if (slotCapacity && slotCapacity.current >= slotCapacity.max) {\n      newErrors.timeSlot = 'This time slot is full';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const isValid = await validateForm();\n      if (!isValid) {\n        setLoading(false);\n        return;\n      }\n      // Create registration via secure server route\n      const res = await fetch('/api/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...formData,\n          inviteToken: inviteToken || undefined,\n        }),\n      });\n\n      if (!res.ok) {\n        const { error } = await res.json().catch(() => ({ error: 'Registration failed' }));\n        setErrors({ submit: error || 'An error occurred while submitting your registration.' });\n        return;\n      }\n\n      setSubmitted(true);\n      if (onRegistrationComplete) onRegistrationComplete();\n    } catch (error) {\n      console.error('Error submitting registration:', error);\n      setErrors({ submit: 'An error occurred while submitting your registration. Please try again.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (submitted) {\n    return (\n      <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-green-600 mb-4\">Registration Successful!</h2>\n          <p className=\"text-gray-600 mb-4\">\n            Thank you for registering for the Christmas Store. You will receive a confirmation email shortly.\n          </p>\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <p className=\"text-gray-900\"><strong>Name:</strong> {formData.firstName} {formData.lastName}</p>\n            <p className=\"text-gray-900\"><strong>Email:</strong> {formData.email}</p>\n            <p className=\"text-gray-900\"><strong>Time Slot:</strong> {formData.timeSlot}</p>\n            <p className=\"text-gray-900\"><strong>Number of Children:</strong> {formData.numberOfKids}</p>\n            {formData.needsChildcare && <p className=\"text-gray-900\"><strong>Childcare:</strong> Yes</p>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show loading state while checking registration config\n  if (configLoading) {\n    return (\n      <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">🔄</div>\n          <p className=\"text-xl text-gray-700\">Checking registration status...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show registration closed message if registration is not open\n  if (!registrationConfig?.isRegistrationOpen) {\n    return (\n      <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">🔒</div>\n          <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Registration Closed</h2>\n          <div className=\"bg-red-50 p-6 rounded-lg\">\n            <p className=\"text-red-800\">\n              {registrationConfig?.closureMessage || 'Registration is currently closed. Please check back later.'}\n            </p>\n          </div>\n          <div className=\"text-center mt-6 pt-6 border-t border-gray-200\">\n            <p className=\"text-sm text-gray-500\">\n              🎅 Questions? Contact us and we'll be happy to help! 🤶\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show invite-only message if registration is invite-only and no token provided\n  if (registrationConfig?.inviteOnlyMode && !inviteToken) {\n    return (\n      <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">📧</div>\n          <h2 className=\"text-2xl font-bold text-orange-600 mb-4\">Invite Only Registration</h2>\n          <div className=\"bg-orange-50 p-6 rounded-lg\">\n            <p className=\"text-orange-800 mb-4\">\n              Registration is currently limited to invited participants only.\n            </p>\n            <p className=\"text-orange-700\">\n              If you received an invitation email, please click the registration link in that email to continue.\n            </p>\n          </div>\n          <div className=\"text-center mt-6 pt-6 border-t border-gray-200\">\n            <p className=\"text-sm text-gray-500\">\n              🎅 Questions about invitations? Contact us and we'll be happy to help! 🤶\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <div className=\"text-center mb-8\">\n        <div className=\"text-6xl mb-4\">{BRANDING.locationEmoji}</div>\n        <h1 className=\"text-3xl font-bold mb-2\" style={{ color: BRANDING.primaryColor }}>\n          Christmas Store Registration\n        </h1>\n        <h2 className=\"text-xl font-semibold mb-2\" style={{ color: BRANDING.secondaryColor }}>\n          {LOCATION_NAME}\n        </h2>\n        <p className=\"text-gray-600\">{LOCATION_ADDRESS}</p>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {errors.submit && (\n          <div className=\"bg-red-50 p-4 rounded-lg text-red-600\">{errors.submit}</div>\n        )}\n        \n        {errors.general && (\n          <div className=\"bg-red-50 p-4 rounded-lg text-red-600\">{errors.general}</div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              First Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.firstName}\n              onChange={(e) => setFormData(prev => ({ ...prev, firstName: e.target.value }))}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n              required\n            />\n            {errors.firstName && <p className=\"text-red-500 text-sm mt-1\">{errors.firstName}</p>}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Last Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.lastName}\n              onChange={(e) => setFormData(prev => ({ ...prev, lastName: e.target.value }))}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n              required\n            />\n            {errors.lastName && <p className=\"text-red-500 text-sm mt-1\">{errors.lastName}</p>}\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Email Address *\n          </label>\n          <input\n            type=\"email\"\n            value={formData.email}\n            onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Phone Number *\n          </label>\n          <input\n            type=\"tel\"\n            value={formData.phone}\n            onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Number of Children (18 and under) *\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"20\"\n            value={formData.numberOfKids}\n            onChange={(e) => setFormData(prev => ({ ...prev, numberOfKids: parseInt(e.target.value) || 0 }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          />\n          {errors.numberOfKids && <p className=\"text-red-500 text-sm mt-1\">{errors.numberOfKids}</p>}\n        </div>\n\n        {formData.numberOfKids > 0 && (\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Children Information</h3>\n            <div className=\"space-y-4\">\n              {formData.children.map((child, index) => (\n                <div key={index} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Child {index + 1} Age\n                    </label>\n                    <select\n                      value={child.age}\n                      onChange={(e) => {\n                        const newChildren = [...formData.children];\n                        const value = e.target.value;\n                        newChildren[index].age = value === '<1' ? '<1' : parseInt(value);\n                        setFormData(prev => ({ ...prev, children: newChildren }));\n                      }}\n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n                      required\n                    >\n                      <option value=\"\">Select age</option>\n                      <option value=\"<1\">&lt;1</option>\n                      {Array.from({ length: 18 }, (_, i) => i + 1).map(age => (\n                        <option key={age} value={age}>{age}</option>\n                      ))}\n                    </select>\n                    {errors[`child_${index}_age`] && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors[`child_${index}_age`]}</p>\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Child {index + 1} Gender\n                    </label>\n                    <select\n                      value={child.gender}\n                      onChange={(e) => {\n                        const newChildren = [...formData.children];\n                        newChildren[index].gender = e.target.value as 'boy' | 'girl';\n                        setFormData(prev => ({ ...prev, children: newChildren }));\n                      }}\n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n                      required\n                    >\n                      <option value=\"boy\">Boy</option>\n                      <option value=\"girl\">Girl</option>\n                    </select>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Preferred Time Slot *\n          </label>\n          <select\n            value={formData.timeSlot}\n            onChange={(e) => setFormData(prev => ({ ...prev, timeSlot: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            required\n          >\n            <option value=\"\">Select a time slot</option>\n            {TIME_SLOTS.map(slot => {\n              const capacity = timeSlotCapacities[slot];\n              const isFull = capacity && capacity.current >= capacity.max;\n              const availableText = capacity ? ` (${capacity.current}/${capacity.max} registered)` : '';\n              \n              return (\n                <option key={slot} value={slot} disabled={isFull}>\n                  {slot}{availableText}{isFull ? ' - FULL' : ''}\n                </option>\n              );\n            })}\n          </select>\n          {errors.timeSlot && <p className=\"text-red-500 text-sm mt-1\">{errors.timeSlot}</p>}\n        </div>\n\n        <div>\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={formData.needsChildcare}\n              onChange={(e) => setFormData(prev => ({ ...prev, needsChildcare: e.target.checked }))}\n              className=\"rounded border-gray-300 text-red-600 shadow-sm focus:border-red-300 focus:ring focus:ring-red-200 focus:ring-opacity-50\"\n            />\n            <span className=\"text-sm font-medium text-gray-700\">\n              I need childcare during my shopping time\n            </span>\n          </label>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Were you referred by any agency or person? (optional)\n          </label>\n          <input\n            type=\"text\"\n            value={formData.referredBy}\n            onChange={(e) => setFormData(prev => ({ ...prev, referredBy: e.target.value }))}\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent text-gray-900\"\n            placeholder=\"Agency name or person's name\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full py-3 px-6 rounded-md font-semibold text-white disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          style={{ \n            backgroundColor: BRANDING.primaryColor,\n            ':hover': { backgroundColor: BRANDING.secondaryColor }\n          }}\n        >\n          {loading ? 'Submitting...' : '🎁 Register for Christmas Store'}\n        </button>\n        \n        <div className=\"text-center mt-8 pt-6 border-t border-gray-200\">\n          <div className=\"mb-4\">\n            <h3 className=\"font-semibold text-gray-800 mb-2\">Questions?</h3>\n            <p className=\"text-sm text-gray-600 mb-1\">\n              📧 <a href={`mailto:${CONTACT_EMAIL}`} className=\"text-blue-600 hover:underline\">\n                {CONTACT_EMAIL}\n              </a>\n            </p>\n            <p className=\"text-sm text-gray-600 mb-1\">\n              📞 {CHURCH_INFO.phone}\n            </p>\n            <p className=\"text-sm text-gray-600\">\n              🌐 <a href={CHURCH_INFO.website} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                pathwayvineyard.com\n              </a>\n            </p>\n          </div>\n          <p className=\"text-sm text-gray-500\">\n            🎅 Thank you for being part of our Christmas Store community! 🤶\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n \n"],"names":[],"mappings":"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","debugId":null}}]
}